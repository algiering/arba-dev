<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.mysql.mapperArticle">
    
    <select id="getArticleList" parameterType="String" resultType="ModelArticle">
        SELECT * FROM bbs_article
        WHERE  article_use = 1
        AND    board_id = #{board_id}
        ORDER BY article_subno DESC
    </select>
    
    <select id="getArticleTotalRecord" parameterType="HashMap" resultType="int">
        SELECT COUNT(*) FROM bbs_article
        WHERE  article_use = 1
        <if test="board_id != null and board_id != ''">
        AND    board_id        =    #{board_id}
        </if>
        <if test="searchMode == 1 or searchMode == 0">
        AND    article_title   LIKE CONCAT('%', #{searchWord}, '%')
        </if>
        <if test="searchMode == 2 or searchMode == 0">
        AND    article_content LIKE CONCAT('%', #{searchWord}, '%')
        </if>
        <if test="searchMode == 3">
        AND    user_id         LIKE CONCAT('%', #{searchWord}, '%')
        </if>
        ORDER BY article_subno DESC
    </select>
    
    <select id="getArticlePaging" parameterType="HashMap" resultType="ModelArticle">   
         SELECT article_subno, article_title, article_content, article_regdate, user_id, article_hit, comment_count, vote_count
         FROM   (
         SELECT @RNUM := @RNUM + 1  r, a.* FROM   (
         select temp.*, sum(c.comment_use) comment_count
         from ( select a.* ,count( v.user_id) vote_count
         from bbs_article  a 
         left join bbs_vote v on a.article_no = v.article_no
         where a.article_use = 1
         AND a.article_title LIKE CONCAT('%', #{searchWord}, '%')
         AND (v.vote is null or v.vote = 1)
         and a.board_id = #{board_id}
         group by a.article_no ) temp
         left join bbs_comment  c on temp.article_subno = c.article_subno
         group by article_no
         order by article_no desc
         )  a ,(SELECT @RNUM:=0) b
         ) temp
         WHERE r BETWEEN #{start} AND #{end}
    </select>
    
    <select id="getArticleOne" parameterType="ModelArticle" resultType="ModelArticle">
        SELECT * FROM bbs_article
        WHERE board_id = #{board_id}
        AND article_subno = #{article_subno}
    </select>
    
    <insert id="insertArticleOne" parameterType="ModelArticle" useGeneratedKeys="true">
        <selectKey keyProperty="article_subno" resultType="int" order="BEFORE">
            SELECT MAX(article_subno)+1 FROM bbs_article WHERE board_id = #{board_id}
        </selectKey>
        INSERT INTO bbs_article
              (  article_subno,      article_title ,   article_content , article_regdate,   board_id ,   user_id )
        VALUES(
        <if test="article_subno == null or article_subno == ''">
        1
        </if>
        <if test="article_subno != null and article_subno != ''">
        #{article_subno}
        </if>
          , #{article_title}, #{article_content}, NOW()          , #{board_id}, #{user_id})
    </insert>
    
    <update id="updateArticleOne" parameterType="ModelArticle">
        UPDATE bbs_article
        SET article_title = #{article_title}, article_content = #{article_content}, article_updatedate = NOW()
        WHERE board_id = #{board_id}
        AND article_subno = #{article_subno}
        AND user_id = #{user_id}
    </update>
    
    <update id="updateIncreaseHit" parameterType="ModelArticle" >
        <selectKey keyProperty="article_hit" resultType="int" order="BEFORE">
            SELECT article_hit+1 FROM bbs_article WHERE article_no = #{article_no}
        </selectKey>
        UPDATE bbs_article
        SET article_hit = #{article_hit}
        WHERE article_no = #{article_no}
    </update>
    
    <update id="updateDeleteArticle" parameterType="ModelArticle">
        UPDATE bbs_article
        SET article_use = 0
        WHERE board_id = #{board_id}
        AND article_subno = #{article_subno}
    </update>
    
</mapper>