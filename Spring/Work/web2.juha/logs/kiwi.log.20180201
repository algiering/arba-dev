main> [2018-02-01 10:56:34] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@290d210d: startup date [Thu Feb 01 10:56:34 KST 2018]; root of context hierarchy 
main> [2018-02-01 10:56:34] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-02-01 10:56:34] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-02-01 10:56:34] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 10:56:34] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 10:56:34] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 10:56:34] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 10:56:34] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 10:56:34] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 10:56:34] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 10:56:34] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 10:56:34] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 10:56:34] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 10:56:34] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 10:56:34] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 10:56:34] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 10:56:34] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 10:56:34] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-02-01 10:56:34] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-02-01 10:56:34] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-02-01 10:56:34] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-02-01 10:56:34] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@24be2d9c] 
main> [2018-02-01 10:56:34] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-02-01 10:56:34] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-02-01 10:56:34] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-02-01 10:56:34] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-02-01 10:56:34] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-02-01 10:56:34] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-02-01 10:56:34] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-02-01 10:56:34] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-02-01 10:56:34] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-02-01 10:56:34] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-02-01 10:56:34] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-02-01 10:56:34] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-02-01 10:56:34] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-02-01 10:56:34] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-02-01 10:56:34] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-02-01 10:56:34] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-02-01 10:56:34] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-02-01 10:56:34] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-02-01 10:56:34] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-02-01 10:56:34] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-02-01 10:56:34] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-02-01 10:56:34] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-02-01 10:56:34] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-02-01 10:56:34] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:56:34] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:56:34] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-02-01 10:56:34] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-02-01 10:56:34] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-02-01 10:56:34] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:56:34] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:56:34] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-02-01 10:56:34] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-02-01 10:56:34] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-02-01 10:56:34] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:56:34] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:56:34] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-02-01 10:56:34] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-02-01 10:56:34] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-02-01 10:56:34] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-02-01 10:56:34] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 10:56:35] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1186989416, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 10:56:35] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1186989416, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 10:56:35] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1186989416, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 10:56:35] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 10:56:35] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1186989416, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:56:35] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1186989416, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:56:35] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1186989416, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 10:56:35] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 10:56:35] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-02-01 10:56:35] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@43cf6ea3] 
main> [2018-02-01 10:56:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-02-01 10:56:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-02-01 10:56:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-02-01 10:56:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-02-01 10:56:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-02-01 10:56:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-02-01 10:56:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-02-01 10:56:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 10:56:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 10:56:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 10:56:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-02-01 10:56:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 10:56:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 10:56:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-02-01 10:56:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-02-01 10:56:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-02-01 10:56:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-02-01 10:56:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-02-01 10:56:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 10:56:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 10:56:35] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-02-01 10:56:35] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-02-01 10:56:35] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-02-01 10:56:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-02-01 10:56:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-02-01 10:56:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-02-01 10:56:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-02-01 10:56:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-02-01 10:56:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-02-01 10:56:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-02-01 10:56:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-02-01 10:56:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:56:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:56:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-02-01 10:56:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-02-01 10:56:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-02-01 10:56:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:56:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:56:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-02-01 10:56:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-02-01 10:56:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-02-01 10:56:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:56:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:56:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-02-01 10:56:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-02-01 10:56:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-02-01 10:56:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-02-01 10:56:35] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#2a65bb85' with 0 common interceptors and 2 specific interceptors 
main> [2018-02-01 10:56:35] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@3241713e] 
main> [2018-02-01 10:56:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-02-01 10:56:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-02-01 10:56:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-02-01 10:56:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-02-01 10:56:35] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-02-01 10:56:35] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-02-01 10:56:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-02-01 10:56:35] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-02-01 10:56:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-02-01 10:56:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-02-01 10:56:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-02-01 10:56:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-02-01 10:56:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-02-01 10:56:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-02-01 10:56:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-02-01 10:56:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-02-01 10:56:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:56:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:56:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-02-01 10:56:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-02-01 10:56:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-02-01 10:56:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:56:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:56:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-02-01 10:56:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-02-01 10:56:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-02-01 10:56:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:56:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:56:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-02-01 10:56:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-02-01 10:56:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-02-01 10:56:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-02-01 10:56:35] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-02-01 10:56:35] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 10:56:35] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [731368479, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 10:56:35] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [731368479, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 10:56:35] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [731368479, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 10:56:35] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 10:56:35] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [731368479, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:56:35] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [731368479, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:56:35] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [731368479, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 10:56:35] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 10:56:35] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 10:56:35] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [2017530134, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 10:56:35] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [2017530134, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 10:56:35] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [2017530134, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 10:56:35] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 10:56:35] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [2017530134, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:56:35] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [2017530134, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:56:35] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [2017530134, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 10:56:35] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 10:56:35] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-02-01 10:56:35] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 10:56:35] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1843594609, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 10:56:35] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1843594609, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 10:56:35] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1843594609, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 10:56:35] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 10:56:35] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1843594609, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:56:35] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1843594609, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:56:35] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1843594609, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 10:56:35] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 10:56:35] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 10:56:35] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [645208036, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 10:56:35] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [645208036, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 10:56:35] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [645208036, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 10:56:35] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 10:56:35] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [645208036, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:56:35] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [645208036, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:56:35] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [645208036, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 10:56:35] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 10:56:35] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.web2.juha.controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-02-01 10:56:35] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.web2.juha.controller.UserController.Login(org.springframework.ui.Model) 
main> [2018-02-01 10:56:35] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@290d210d: startup date [Thu Feb 01 10:56:34 KST 2018]; root of context hierarchy 
main> [2018-02-01 10:56:35] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 10:56:35] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [892611887, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 10:56:35] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [892611887, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 10:56:35] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [892611887, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 10:56:35] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 10:56:35] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [892611887, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:56:35] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [892611887, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:56:35] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [892611887, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 10:56:35] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 10:56:35] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@290d210d: startup date [Thu Feb 01 10:56:34 KST 2018]; root of context hierarchy 
main> [2018-02-01 10:56:35] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 10:56:35] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [665641137, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 10:56:35] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [665641137, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 10:56:35] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [665641137, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 10:56:35] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 10:56:35] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [665641137, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:56:35] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [665641137, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:56:35] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [665641137, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 10:56:35] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 10:56:35] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 10:56:35] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [468950278, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 10:56:35] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [468950278, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 10:56:35] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [468950278, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 10:56:35] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 10:56:35] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [468950278, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:56:35] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [468950278, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:56:35] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [468950278, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 10:56:35] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 10:56:35] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 10:56:35] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1261321871, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 10:56:35] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1261321871, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 10:56:35] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1261321871, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 10:56:35] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 10:56:35] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1261321871, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:56:35] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1261321871, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:56:35] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1261321871, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 10:56:35] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 10:56:35] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-02-01 10:56:35] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-02-01 10:56:35] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-02-01 10:56:35] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-02-01 10:56:35] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-02-01 10:56:35] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/web2.juha/bin/com/web2/juha/model 
main> [2018-02-01 10:56:35] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/web2.juha/bin/com/web2/juha/model 
main> [2018-02-01 10:56:35] [ResolverUtil] [94] [DEBUG] Reader entry: ModelUser.class 
main> [2018-02-01 10:56:35] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Lecture/Spring/Work/web2.juha/bin/com/web2/juha/model 
main> [2018-02-01 10:56:35] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/web2.juha/bin/com/web2/juha/model/ModelUser.class 
main> [2018-02-01 10:56:35] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/web2.juha/bin/com/web2/juha/model/ModelUser.class 
main> [2018-02-01 10:56:35] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 K  com/web2/juha/model/ModelUser  java/lang/Object user_no Ljava/lang/String; user_id  
main> [2018-02-01 10:56:35] [ResolverUtil] [250] [DEBUG] Checking to see if class com.web2.juha.model.ModelUser matches criteria [is assignable to Object] 
main> [2018-02-01 10:56:35] [ClassPathXmlApplicationContext] [488] [WARN] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'daoUser': Injection of autowired dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Could not autowire field: org.apache.ibatis.session.SqlSession com.web2.juha.dao.DaoUser.session; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSession' defined in URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml]: Cannot resolve reference to bean 'sqlSessionFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml]: Invocation of init method failed; nested exception is org.springframework.core.NestedIOException: Failed to parse config resource: class path resource [Configuration.xml]; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing SQL Mapper Configuration. Cause: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: java.lang.NullPointerException 
main> [2018-02-01 10:56:43] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@290d210d: startup date [Thu Feb 01 10:56:43 KST 2018]; root of context hierarchy 
main> [2018-02-01 10:56:43] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-02-01 10:56:44] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-02-01 10:56:44] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 10:56:44] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 10:56:44] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 10:56:44] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 10:56:44] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 10:56:44] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 10:56:44] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 10:56:44] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 10:56:44] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 10:56:44] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 10:56:44] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 10:56:44] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 10:56:44] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 10:56:44] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 10:56:44] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-02-01 10:56:44] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-02-01 10:56:44] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-02-01 10:56:44] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-02-01 10:56:44] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@24be2d9c] 
main> [2018-02-01 10:56:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-02-01 10:56:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-02-01 10:56:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-02-01 10:56:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-02-01 10:56:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-02-01 10:56:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-02-01 10:56:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-02-01 10:56:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-02-01 10:56:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-02-01 10:56:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-02-01 10:56:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-02-01 10:56:44] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-02-01 10:56:44] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-02-01 10:56:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-02-01 10:56:44] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-02-01 10:56:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-02-01 10:56:44] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 10:56:44] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1186989416, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 10:56:44] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1186989416, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 10:56:44] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1186989416, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 10:56:44] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 10:56:44] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1186989416, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:56:44] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1186989416, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:56:44] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1186989416, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 10:56:44] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 10:56:44] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-02-01 10:56:44] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@43cf6ea3] 
main> [2018-02-01 10:56:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-02-01 10:56:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-02-01 10:56:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-02-01 10:56:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-02-01 10:56:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-02-01 10:56:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-02-01 10:56:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-02-01 10:56:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 10:56:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 10:56:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 10:56:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-02-01 10:56:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 10:56:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 10:56:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-02-01 10:56:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-02-01 10:56:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-02-01 10:56:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-02-01 10:56:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-02-01 10:56:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 10:56:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 10:56:44] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-02-01 10:56:44] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-02-01 10:56:44] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-02-01 10:56:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-02-01 10:56:44] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#2a65bb85' with 0 common interceptors and 2 specific interceptors 
main> [2018-02-01 10:56:44] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@3241713e] 
main> [2018-02-01 10:56:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-02-01 10:56:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-02-01 10:56:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-02-01 10:56:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-02-01 10:56:44] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-02-01 10:56:44] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-02-01 10:56:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-02-01 10:56:44] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-02-01 10:56:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-02-01 10:56:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-02-01 10:56:44] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-02-01 10:56:44] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 10:56:44] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [731368479, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 10:56:44] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [731368479, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 10:56:44] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [731368479, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 10:56:44] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 10:56:44] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [731368479, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:56:44] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [731368479, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:56:44] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [731368479, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 10:56:44] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 10:56:44] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 10:56:44] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [2017530134, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 10:56:44] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [2017530134, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 10:56:44] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [2017530134, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 10:56:44] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 10:56:44] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [2017530134, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:56:44] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [2017530134, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:56:44] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [2017530134, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 10:56:44] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 10:56:45] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-02-01 10:56:45] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 10:56:45] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1843594609, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 10:56:45] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1843594609, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 10:56:45] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1843594609, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 10:56:45] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 10:56:45] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1843594609, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:56:45] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1843594609, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:56:45] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1843594609, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 10:56:45] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 10:56:45] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 10:56:45] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [645208036, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 10:56:45] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [645208036, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 10:56:45] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [645208036, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 10:56:45] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 10:56:45] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [645208036, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:56:45] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [645208036, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:56:45] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [645208036, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 10:56:45] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 10:56:45] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.web2.juha.controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-02-01 10:56:45] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.web2.juha.controller.UserController.Login(org.springframework.ui.Model) 
main> [2018-02-01 10:56:45] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@290d210d: startup date [Thu Feb 01 10:56:43 KST 2018]; root of context hierarchy 
main> [2018-02-01 10:56:45] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 10:56:45] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1302984483, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 10:56:45] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1302984483, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 10:56:45] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1302984483, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 10:56:45] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 10:56:45] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1302984483, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:56:45] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1302984483, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:56:45] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1302984483, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 10:56:45] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 10:56:45] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@290d210d: startup date [Thu Feb 01 10:56:43 KST 2018]; root of context hierarchy 
main> [2018-02-01 10:56:45] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 10:56:45] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1933799970, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 10:56:45] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1933799970, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 10:56:45] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1933799970, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 10:56:45] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 10:56:45] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1933799970, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:56:45] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1933799970, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:56:45] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1933799970, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 10:56:45] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 10:56:45] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 10:56:45] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [594570680, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 10:56:45] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [594570680, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 10:56:45] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [594570680, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 10:56:45] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 10:56:45] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [594570680, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:56:45] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [594570680, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:56:45] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [594570680, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 10:56:45] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 10:56:45] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 10:56:45] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1551103602, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 10:56:45] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1551103602, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 10:56:45] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1551103602, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 10:56:45] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 10:56:45] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1551103602, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:56:45] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1551103602, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:56:45] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1551103602, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 10:56:45] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 10:56:45] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-02-01 10:56:45] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-02-01 10:56:45] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-02-01 10:56:45] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-02-01 10:56:45] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-02-01 10:56:45] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/web2.juha/bin/com/web2/juha/model 
main> [2018-02-01 10:56:45] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/web2.juha/bin/com/web2/juha/model 
main> [2018-02-01 10:56:45] [ResolverUtil] [94] [DEBUG] Reader entry: ModelUser.class 
main> [2018-02-01 10:56:45] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Lecture/Spring/Work/web2.juha/bin/com/web2/juha/model 
main> [2018-02-01 10:56:45] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/web2.juha/bin/com/web2/juha/model/ModelUser.class 
main> [2018-02-01 10:56:45] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/web2.juha/bin/com/web2/juha/model/ModelUser.class 
main> [2018-02-01 10:56:45] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 K  com/web2/juha/model/ModelUser  java/lang/Object user_no Ljava/lang/String; user_id  
main> [2018-02-01 10:56:45] [ResolverUtil] [250] [DEBUG] Checking to see if class com.web2.juha.model.ModelUser matches criteria [is assignable to Object] 
main> [2018-02-01 10:56:45] [ClassPathXmlApplicationContext] [488] [WARN] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'daoUser': Injection of autowired dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Could not autowire field: org.apache.ibatis.session.SqlSession com.web2.juha.dao.DaoUser.session; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSession' defined in URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml]: Cannot resolve reference to bean 'sqlSessionFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml]: Invocation of init method failed; nested exception is org.springframework.core.NestedIOException: Failed to parse config resource: class path resource [Configuration.xml]; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing SQL Mapper Configuration. Cause: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: java.lang.NullPointerException 
main> [2018-02-01 10:57:37] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@290d210d: startup date [Thu Feb 01 10:57:37 KST 2018]; root of context hierarchy 
main> [2018-02-01 10:57:37] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-02-01 10:57:38] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-02-01 10:57:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 10:57:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 10:57:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 10:57:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 10:57:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 10:57:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 10:57:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 10:57:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 10:57:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 10:57:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 10:57:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 10:57:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 10:57:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 10:57:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 10:57:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-02-01 10:57:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-02-01 10:57:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-02-01 10:57:38] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-02-01 10:57:38] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@24be2d9c] 
main> [2018-02-01 10:57:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-02-01 10:57:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-02-01 10:57:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-02-01 10:57:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-02-01 10:57:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-02-01 10:57:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-02-01 10:57:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-02-01 10:57:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-02-01 10:57:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-02-01 10:57:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-02-01 10:57:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-02-01 10:57:38] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-02-01 10:57:38] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-02-01 10:57:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-02-01 10:57:38] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-02-01 10:57:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-02-01 10:57:38] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 10:57:38] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1186989416, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 10:57:38] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1186989416, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 10:57:38] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1186989416, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 10:57:38] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 10:57:38] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1186989416, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:57:38] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1186989416, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:57:38] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1186989416, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 10:57:38] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 10:57:38] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-02-01 10:57:38] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@43cf6ea3] 
main> [2018-02-01 10:57:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-02-01 10:57:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-02-01 10:57:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-02-01 10:57:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-02-01 10:57:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-02-01 10:57:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-02-01 10:57:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-02-01 10:57:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 10:57:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 10:57:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 10:57:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-02-01 10:57:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-02-01 10:57:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-02-01 10:57:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-02-01 10:57:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 10:57:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 10:57:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-02-01 10:57:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-02-01 10:57:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 10:57:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 10:57:38] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-02-01 10:57:38] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-02-01 10:57:38] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-02-01 10:57:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-02-01 10:57:38] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#2a65bb85' with 0 common interceptors and 2 specific interceptors 
main> [2018-02-01 10:57:38] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@3241713e] 
main> [2018-02-01 10:57:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-02-01 10:57:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-02-01 10:57:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-02-01 10:57:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-02-01 10:57:38] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-02-01 10:57:38] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-02-01 10:57:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-02-01 10:57:38] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-02-01 10:57:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:57:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-02-01 10:57:38] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-02-01 10:57:38] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 10:57:38] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [731368479, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 10:57:38] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [731368479, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 10:57:38] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [731368479, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 10:57:38] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 10:57:38] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [731368479, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:57:38] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [731368479, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:57:38] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [731368479, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 10:57:38] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 10:57:38] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 10:57:38] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [2017530134, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 10:57:38] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [2017530134, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 10:57:38] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [2017530134, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 10:57:38] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 10:57:38] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [2017530134, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:57:38] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [2017530134, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:57:38] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [2017530134, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 10:57:38] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 10:57:38] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-02-01 10:57:38] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 10:57:38] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1843594609, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 10:57:38] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1843594609, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 10:57:38] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1843594609, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 10:57:38] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 10:57:38] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1843594609, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:57:38] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1843594609, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:57:38] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1843594609, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 10:57:38] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 10:57:38] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 10:57:38] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [645208036, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 10:57:38] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [645208036, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 10:57:38] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [645208036, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 10:57:38] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 10:57:38] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [645208036, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:57:38] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [645208036, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:57:38] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [645208036, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 10:57:38] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 10:57:38] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.web2.juha.controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-02-01 10:57:38] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.web2.juha.controller.UserController.Login(org.springframework.ui.Model) 
main> [2018-02-01 10:57:39] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@290d210d: startup date [Thu Feb 01 10:57:37 KST 2018]; root of context hierarchy 
main> [2018-02-01 10:57:39] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 10:57:39] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [892611887, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 10:57:39] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [892611887, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 10:57:39] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [892611887, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 10:57:39] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 10:57:39] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [892611887, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:57:39] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [892611887, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:57:39] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [892611887, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 10:57:39] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 10:57:39] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@290d210d: startup date [Thu Feb 01 10:57:37 KST 2018]; root of context hierarchy 
main> [2018-02-01 10:57:39] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 10:57:39] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [665641137, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 10:57:39] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [665641137, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 10:57:39] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [665641137, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 10:57:39] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 10:57:39] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [665641137, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:57:39] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [665641137, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:57:39] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [665641137, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 10:57:39] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 10:57:39] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 10:57:39] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [468950278, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 10:57:39] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [468950278, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 10:57:39] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [468950278, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 10:57:39] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 10:57:39] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [468950278, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:57:39] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [468950278, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:57:39] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [468950278, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 10:57:39] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 10:57:39] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 10:57:39] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1261321871, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 10:57:39] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1261321871, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 10:57:39] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1261321871, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 10:57:39] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 10:57:39] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1261321871, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:57:39] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1261321871, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:57:39] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1261321871, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 10:57:39] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 10:57:39] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-02-01 10:57:39] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-02-01 10:57:39] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-02-01 10:57:39] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-02-01 10:57:39] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-02-01 10:57:39] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/web2.juha/bin/com/web2/juha/model 
main> [2018-02-01 10:57:39] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/web2.juha/bin/com/web2/juha/model 
main> [2018-02-01 10:57:39] [ResolverUtil] [94] [DEBUG] Reader entry: ModelUser.class 
main> [2018-02-01 10:57:39] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Lecture/Spring/Work/web2.juha/bin/com/web2/juha/model 
main> [2018-02-01 10:57:39] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/web2.juha/bin/com/web2/juha/model/ModelUser.class 
main> [2018-02-01 10:57:39] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/web2.juha/bin/com/web2/juha/model/ModelUser.class 
main> [2018-02-01 10:57:39] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 K  com/web2/juha/model/ModelUser  java/lang/Object user_no Ljava/lang/String; user_id  
main> [2018-02-01 10:57:39] [ResolverUtil] [250] [DEBUG] Checking to see if class com.web2.juha.model.ModelUser matches criteria [is assignable to Object] 
main> [2018-02-01 10:57:39] [ClassPathXmlApplicationContext] [488] [WARN] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'daoUser': Injection of autowired dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Could not autowire field: org.apache.ibatis.session.SqlSession com.web2.juha.dao.DaoUser.session; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSession' defined in URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml]: Cannot resolve reference to bean 'sqlSessionFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml]: Invocation of init method failed; nested exception is org.springframework.core.NestedIOException: Failed to parse config resource: class path resource [Configuration.xml]; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing SQL Mapper Configuration. Cause: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: java.lang.NullPointerException 
main> [2018-02-01 10:59:41] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@290d210d: startup date [Thu Feb 01 10:59:41 KST 2018]; root of context hierarchy 
main> [2018-02-01 10:59:41] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-02-01 10:59:41] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-02-01 10:59:42] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 10:59:42] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 10:59:42] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 10:59:42] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 10:59:42] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 10:59:42] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 10:59:42] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 10:59:42] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 10:59:42] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 10:59:42] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 10:59:42] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 10:59:42] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 10:59:42] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 10:59:42] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 10:59:42] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-02-01 10:59:42] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-02-01 10:59:42] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-02-01 10:59:42] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-02-01 10:59:42] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@24be2d9c] 
main> [2018-02-01 10:59:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-02-01 10:59:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-02-01 10:59:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-02-01 10:59:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-02-01 10:59:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-02-01 10:59:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-02-01 10:59:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-02-01 10:59:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-02-01 10:59:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-02-01 10:59:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-02-01 10:59:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-02-01 10:59:42] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-02-01 10:59:42] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-02-01 10:59:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-02-01 10:59:42] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-02-01 10:59:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-02-01 10:59:42] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 10:59:42] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1186989416, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 10:59:42] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1186989416, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 10:59:42] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1186989416, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 10:59:42] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 10:59:42] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1186989416, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:59:42] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1186989416, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:59:42] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1186989416, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 10:59:42] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 10:59:42] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-02-01 10:59:42] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@43cf6ea3] 
main> [2018-02-01 10:59:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-02-01 10:59:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-02-01 10:59:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-02-01 10:59:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-02-01 10:59:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-02-01 10:59:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-02-01 10:59:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-02-01 10:59:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 10:59:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 10:59:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 10:59:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-02-01 10:59:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-02-01 10:59:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-02-01 10:59:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-02-01 10:59:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-02-01 10:59:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-02-01 10:59:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 10:59:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 10:59:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 10:59:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 10:59:42] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-02-01 10:59:42] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-02-01 10:59:42] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-02-01 10:59:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-02-01 10:59:42] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#2a65bb85' with 0 common interceptors and 2 specific interceptors 
main> [2018-02-01 10:59:42] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@3241713e] 
main> [2018-02-01 10:59:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-02-01 10:59:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-02-01 10:59:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-02-01 10:59:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-02-01 10:59:42] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-02-01 10:59:42] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-02-01 10:59:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-02-01 10:59:42] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-02-01 10:59:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-02-01 10:59:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-02-01 10:59:42] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-02-01 10:59:42] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 10:59:42] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [731368479, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 10:59:42] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [731368479, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 10:59:42] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [731368479, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 10:59:42] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 10:59:42] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [731368479, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:59:42] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [731368479, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:59:42] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [731368479, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 10:59:42] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 10:59:42] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 10:59:42] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [2017530134, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 10:59:42] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [2017530134, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 10:59:42] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [2017530134, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 10:59:42] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 10:59:42] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [2017530134, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:59:42] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [2017530134, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:59:42] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [2017530134, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 10:59:42] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 10:59:42] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-02-01 10:59:42] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 10:59:42] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1843594609, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 10:59:42] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1843594609, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 10:59:42] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1843594609, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 10:59:42] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 10:59:42] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1843594609, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:59:42] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1843594609, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:59:42] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1843594609, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 10:59:42] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 10:59:42] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 10:59:42] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [645208036, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 10:59:42] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [645208036, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 10:59:42] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [645208036, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 10:59:42] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 10:59:42] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [645208036, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:59:42] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [645208036, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:59:42] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [645208036, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 10:59:42] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 10:59:42] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.web2.juha.controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-02-01 10:59:42] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.web2.juha.controller.UserController.Login(org.springframework.ui.Model) 
main> [2018-02-01 10:59:42] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@290d210d: startup date [Thu Feb 01 10:59:41 KST 2018]; root of context hierarchy 
main> [2018-02-01 10:59:42] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 10:59:42] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [892611887, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 10:59:42] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [892611887, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 10:59:42] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [892611887, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 10:59:42] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 10:59:42] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [892611887, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:59:42] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [892611887, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:59:42] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [892611887, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 10:59:42] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 10:59:42] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@290d210d: startup date [Thu Feb 01 10:59:41 KST 2018]; root of context hierarchy 
main> [2018-02-01 10:59:42] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 10:59:42] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [665641137, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 10:59:42] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [665641137, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 10:59:42] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [665641137, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 10:59:42] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 10:59:42] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [665641137, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:59:42] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [665641137, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:59:42] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [665641137, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 10:59:42] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 10:59:42] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 10:59:42] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [468950278, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 10:59:42] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [468950278, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 10:59:42] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [468950278, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 10:59:42] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 10:59:42] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [468950278, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:59:42] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [468950278, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:59:42] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [468950278, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 10:59:42] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 10:59:42] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 10:59:42] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1261321871, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 10:59:42] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1261321871, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 10:59:42] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1261321871, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 10:59:42] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 10:59:42] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1261321871, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:59:42] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1261321871, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:59:42] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1261321871, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 10:59:42] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 10:59:42] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-02-01 10:59:42] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-02-01 10:59:42] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-02-01 10:59:42] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-02-01 10:59:42] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-02-01 10:59:42] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/web2.juha/bin/com/web2/juha/model 
main> [2018-02-01 10:59:42] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/web2.juha/bin/com/web2/juha/model 
main> [2018-02-01 10:59:42] [ResolverUtil] [94] [DEBUG] Reader entry: ModelUser.class 
main> [2018-02-01 10:59:42] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Lecture/Spring/Work/web2.juha/bin/com/web2/juha/model 
main> [2018-02-01 10:59:42] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/web2.juha/bin/com/web2/juha/model/ModelUser.class 
main> [2018-02-01 10:59:42] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/web2.juha/bin/com/web2/juha/model/ModelUser.class 
main> [2018-02-01 10:59:42] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 K  com/web2/juha/model/ModelUser  java/lang/Object user_no Ljava/lang/String; user_id  
main> [2018-02-01 10:59:42] [ResolverUtil] [250] [DEBUG] Checking to see if class com.web2.juha.model.ModelUser matches criteria [is assignable to Object] 
main> [2018-02-01 10:59:43] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2018-02-01 10:59:43] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2018-02-01 10:59:43] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 10:59:43] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [672777312, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 10:59:43] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [672777312, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 10:59:43] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [672777312, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 10:59:43] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 10:59:43] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [672777312, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:59:43] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [672777312, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:59:43] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [672777312, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 10:59:43] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 10:59:43] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'serviceUser' with 0 common interceptors and 2 specific interceptors 
main> [2018-02-01 10:59:43] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.web2.juha.svr.ServiceUser@1907874b] 
main> [2018-02-01 10:59:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.web2.juha.svr.ServiceUser.login(com.web2.juha.model.ModelUser) 
main> [2018-02-01 10:59:43] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-02-01 10:59:43] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-02-01 10:59:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-02-01 10:59:43] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-02-01 10:59:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-02-01 10:59:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-02-01 10:59:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-02-01 10:59:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-02-01 10:59:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-02-01 10:59:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-02-01 10:59:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:59:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:59:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-02-01 10:59:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-02-01 10:59:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-02-01 10:59:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:59:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:59:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-02-01 10:59:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-02-01 10:59:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:59:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-02-01 10:59:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 10:59:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-02-01 10:59:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-02-01 10:59:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-02-01 10:59:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-02-01 10:59:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-02-01 10:59:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-02-01 10:59:43] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 10:59:43] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [556263022, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 10:59:43] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [556263022, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 10:59:43] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [556263022, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 10:59:43] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 10:59:43] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [556263022, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:59:43] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [556263022, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:59:43] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [556263022, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 10:59:43] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 10:59:43] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 10:59:43] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [2146654783, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 10:59:43] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [2146654783, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 10:59:43] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [2146654783, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 10:59:43] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 10:59:43] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [2146654783, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:59:43] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [2146654783, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:59:43] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [2146654783, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 10:59:43] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 10:59:43] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 10:59:43] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1108367077, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 10:59:43] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1108367077, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 10:59:43] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1108367077, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 10:59:43] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 10:59:43] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1108367077, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:59:43] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1108367077, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 10:59:43] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1108367077, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 10:59:43] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 10:59:43] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2018-02-01 10:59:43] [SqlSessionUtils] [140] [DEBUG] SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b200971] was not registered for synchronization because synchronization is not active 
main> [2018-02-01 10:59:43] [DataSourceUtils] [110] [DEBUG] Fetching JDBC Connection from DataSource 
main> [2018-02-01 10:59:43] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1380583278, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring 
main> [2018-02-01 10:59:43] [login] [139] [DEBUG] ==>  Preparing: SELECT count(*) FROM bbs_user WHERE user_id = ? AND user_password = ?  
main> [2018-02-01 10:59:43] [login] [139] [DEBUG] ==> Parameters: algiering(String), asdf1234(String) 
main> [2018-02-01 10:59:43] [login] [139] [DEBUG] <==      Total: 1 
main> [2018-02-01 10:59:43] [SqlSessionUtils] [168] [DEBUG] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b200971] 
main> [2018-02-01 10:59:43] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 11:15:59] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@290d210d: startup date [Thu Feb 01 11:15:59 KST 2018]; root of context hierarchy 
main> [2018-02-01 11:15:59] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-02-01 11:15:59] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-02-01 11:16:00] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 11:16:00] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 11:16:00] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 11:16:00] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 11:16:00] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 11:16:00] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 11:16:00] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 11:16:00] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 11:16:00] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 11:16:00] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 11:16:00] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 11:16:00] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 11:16:00] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 11:16:00] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 11:16:00] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-02-01 11:16:00] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-02-01 11:16:00] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-02-01 11:16:00] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-02-01 11:16:00] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@70d2e40b] 
main> [2018-02-01 11:16:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-02-01 11:16:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-02-01 11:16:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-02-01 11:16:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-02-01 11:16:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-02-01 11:16:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-02-01 11:16:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-02-01 11:16:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-02-01 11:16:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-02-01 11:16:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-02-01 11:16:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-02-01 11:16:00] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-02-01 11:16:00] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-02-01 11:16:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-02-01 11:16:00] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-02-01 11:16:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-02-01 11:16:00] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 11:16:00] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [761680655, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 11:16:00] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [761680655, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 11:16:00] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [761680655, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 11:16:00] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 11:16:00] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [761680655, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:00] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [761680655, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:00] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [761680655, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 11:16:00] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 11:16:00] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-02-01 11:16:00] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@68809cc7] 
main> [2018-02-01 11:16:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-02-01 11:16:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-02-01 11:16:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-02-01 11:16:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-02-01 11:16:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-02-01 11:16:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-02-01 11:16:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-02-01 11:16:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 11:16:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 11:16:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 11:16:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-02-01 11:16:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-02-01 11:16:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-02-01 11:16:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-02-01 11:16:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-02-01 11:16:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-02-01 11:16:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 11:16:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 11:16:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 11:16:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 11:16:00] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-02-01 11:16:00] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-02-01 11:16:00] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-02-01 11:16:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-02-01 11:16:00] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#452ba1db' with 0 common interceptors and 2 specific interceptors 
main> [2018-02-01 11:16:00] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@13cd7ea5] 
main> [2018-02-01 11:16:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-02-01 11:16:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-02-01 11:16:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-02-01 11:16:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-02-01 11:16:00] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-02-01 11:16:00] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-02-01 11:16:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-02-01 11:16:00] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-02-01 11:16:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-02-01 11:16:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-02-01 11:16:00] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-02-01 11:16:00] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 11:16:00] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1897368146, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 11:16:00] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1897368146, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 11:16:00] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1897368146, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 11:16:00] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 11:16:00] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1897368146, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:00] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1897368146, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:00] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1897368146, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 11:16:00] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 11:16:00] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 11:16:00] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [509858326, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 11:16:00] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [509858326, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 11:16:00] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [509858326, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 11:16:00] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 11:16:00] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [509858326, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:00] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [509858326, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:00] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [509858326, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 11:16:00] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 11:16:00] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-02-01 11:16:00] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 11:16:00] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1039759545, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 11:16:00] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1039759545, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 11:16:00] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1039759545, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 11:16:00] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 11:16:00] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1039759545, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:00] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1039759545, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:00] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1039759545, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 11:16:00] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 11:16:00] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 11:16:00] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1632300236, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 11:16:00] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1632300236, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 11:16:00] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1632300236, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 11:16:00] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 11:16:00] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1632300236, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:00] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1632300236, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:00] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1632300236, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 11:16:00] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 11:16:00] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.web2.juha.controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-02-01 11:16:00] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/login],methods=[POST]}" onto public java.lang.String com.web2.juha.controller.RestController.Login(org.springframework.ui.Model,com.web2.juha.model.ModelUser,javax.servlet.http.HttpSession) 
main> [2018-02-01 11:16:00] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.web2.juha.controller.UserController.Login(org.springframework.ui.Model) 
main> [2018-02-01 11:16:00] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@290d210d: startup date [Thu Feb 01 11:15:59 KST 2018]; root of context hierarchy 
main> [2018-02-01 11:16:00] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 11:16:00] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1195670735, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 11:16:00] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1195670735, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 11:16:00] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1195670735, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 11:16:00] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 11:16:00] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1195670735, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:00] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1195670735, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:00] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1195670735, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 11:16:00] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 11:16:00] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@290d210d: startup date [Thu Feb 01 11:15:59 KST 2018]; root of context hierarchy 
main> [2018-02-01 11:16:00] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 11:16:00] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1845297077, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 11:16:00] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1845297077, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 11:16:00] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1845297077, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 11:16:00] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 11:16:00] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1845297077, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:00] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1845297077, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:00] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1845297077, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 11:16:00] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 11:16:00] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 11:16:00] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1881949035, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 11:16:00] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1881949035, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 11:16:00] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1881949035, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 11:16:00] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 11:16:00] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1881949035, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:00] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1881949035, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:00] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1881949035, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 11:16:00] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 11:16:00] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 11:16:00] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1257090913, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 11:16:00] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1257090913, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 11:16:00] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1257090913, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 11:16:00] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 11:16:00] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1257090913, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:00] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1257090913, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:00] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1257090913, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 11:16:00] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 11:16:00] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-02-01 11:16:00] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-02-01 11:16:00] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-02-01 11:16:00] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-02-01 11:16:00] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-02-01 11:16:00] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/web2.juha/bin/com/web2/juha/model 
main> [2018-02-01 11:16:00] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/web2.juha/bin/com/web2/juha/model 
main> [2018-02-01 11:16:00] [ResolverUtil] [94] [DEBUG] Reader entry: ModelUser.class 
main> [2018-02-01 11:16:00] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Lecture/Spring/Work/web2.juha/bin/com/web2/juha/model 
main> [2018-02-01 11:16:00] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/web2.juha/bin/com/web2/juha/model/ModelUser.class 
main> [2018-02-01 11:16:00] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/web2.juha/bin/com/web2/juha/model/ModelUser.class 
main> [2018-02-01 11:16:00] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 K  com/web2/juha/model/ModelUser  java/lang/Object user_no Ljava/lang/String; user_id  
main> [2018-02-01 11:16:00] [ResolverUtil] [250] [DEBUG] Checking to see if class com.web2.juha.model.ModelUser matches criteria [is assignable to Object] 
main> [2018-02-01 11:16:00] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2018-02-01 11:16:00] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2018-02-01 11:16:01] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 11:16:01] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [344080246, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 11:16:01] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [344080246, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 11:16:01] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [344080246, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 11:16:01] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 11:16:01] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [344080246, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:01] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [344080246, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:01] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [344080246, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 11:16:01] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 11:16:01] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'serviceUser' with 0 common interceptors and 2 specific interceptors 
main> [2018-02-01 11:16:01] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.web2.juha.svr.ServiceUser@24e83d19] 
main> [2018-02-01 11:16:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public com.web2.juha.model.ModelUser com.web2.juha.svr.ServiceUser.getUserOne(com.web2.juha.model.ModelUser) 
main> [2018-02-01 11:16:01] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-02-01 11:16:01] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-02-01 11:16:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-02-01 11:16:01] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-02-01 11:16:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-02-01 11:16:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-02-01 11:16:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-02-01 11:16:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-02-01 11:16:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-02-01 11:16:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-02-01 11:16:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-02-01 11:16:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-02-01 11:16:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-02-01 11:16:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-02-01 11:16:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-02-01 11:16:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-02-01 11:16:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-02-01 11:16:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-02-01 11:16:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-02-01 11:16:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-02-01 11:16:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-02-01 11:16:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-02-01 11:16:01] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 11:16:01] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [345516674, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 11:16:01] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 11:16:01] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 11:16:01] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 11:16:01] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [345516674, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:01] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:01] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [345516674, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 11:16:01] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 11:16:01] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 11:16:01] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [634991000, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 11:16:01] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [634991000, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 11:16:01] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [634991000, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 11:16:01] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 11:16:01] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [634991000, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:01] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [634991000, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:01] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [634991000, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 11:16:01] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 11:16:01] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 11:16:01] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1566311673, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 11:16:01] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1566311673, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 11:16:01] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1566311673, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 11:16:01] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 11:16:01] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1566311673, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:01] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1566311673, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:01] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1566311673, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 11:16:01] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 11:16:01] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [com.web2.juha.svr.ServiceUser.getUserOne]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 11:16:01] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [2054332292, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 11:16:01] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [2054332292, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 11:16:01] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [2054332292, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 11:16:01] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2018-02-01 11:16:01] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d95a72e] 
main> [2018-02-01 11:16:01] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [2054332292, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2018-02-01 11:16:01] [getUserOne] [139] [DEBUG] ==>  Preparing: SELECT * FROM bbs_user WHERE user_id = ? AND user_password = ?  
main> [2018-02-01 11:16:01] [getUserOne] [139] [DEBUG] ==> Parameters: algiering(String), asdf1234(String) 
main> [2018-02-01 11:16:01] [getUserOne] [139] [DEBUG] <==      Total: 1 
main> [2018-02-01 11:16:01] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d95a72e] 
main> [2018-02-01 11:16:01] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d95a72e] 
main> [2018-02-01 11:16:01] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d95a72e] 
main> [2018-02-01 11:16:01] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d95a72e] 
main> [2018-02-01 11:16:01] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 11:16:01] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [2054332292, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:01] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [2054332292, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:01] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [2054332292, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 11:16:01] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 11:16:22] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@290d210d: startup date [Thu Feb 01 11:16:22 KST 2018]; root of context hierarchy 
main> [2018-02-01 11:16:22] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-02-01 11:16:23] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-02-01 11:16:23] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 11:16:23] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 11:16:23] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 11:16:23] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 11:16:23] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 11:16:23] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 11:16:23] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 11:16:23] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 11:16:23] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 11:16:23] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 11:16:23] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 11:16:23] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 11:16:23] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 11:16:23] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 11:16:23] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-02-01 11:16:23] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-02-01 11:16:23] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-02-01 11:16:23] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-02-01 11:16:23] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@70d2e40b] 
main> [2018-02-01 11:16:23] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-02-01 11:16:23] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-02-01 11:16:23] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-02-01 11:16:23] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-02-01 11:16:23] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-02-01 11:16:23] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-02-01 11:16:23] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-02-01 11:16:23] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-02-01 11:16:23] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-02-01 11:16:23] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-02-01 11:16:23] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-02-01 11:16:23] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-02-01 11:16:23] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-02-01 11:16:23] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-02-01 11:16:23] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-02-01 11:16:23] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-02-01 11:16:23] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 11:16:23] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [761680655, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 11:16:23] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [761680655, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 11:16:23] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [761680655, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 11:16:23] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 11:16:23] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [761680655, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:23] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [761680655, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:23] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [761680655, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 11:16:23] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 11:16:23] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-02-01 11:16:23] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@68809cc7] 
main> [2018-02-01 11:16:23] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-02-01 11:16:23] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-02-01 11:16:23] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-02-01 11:16:23] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-02-01 11:16:23] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-02-01 11:16:23] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-02-01 11:16:23] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-02-01 11:16:23] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 11:16:23] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 11:16:23] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 11:16:23] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-02-01 11:16:23] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-02-01 11:16:23] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-02-01 11:16:23] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-02-01 11:16:23] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 11:16:23] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 11:16:23] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-02-01 11:16:23] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-02-01 11:16:23] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 11:16:23] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 11:16:23] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-02-01 11:16:23] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-02-01 11:16:23] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-02-01 11:16:23] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-02-01 11:16:23] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#452ba1db' with 0 common interceptors and 2 specific interceptors 
main> [2018-02-01 11:16:23] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@13cd7ea5] 
main> [2018-02-01 11:16:23] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-02-01 11:16:23] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-02-01 11:16:23] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-02-01 11:16:23] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-02-01 11:16:23] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-02-01 11:16:23] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-02-01 11:16:23] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-02-01 11:16:23] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-02-01 11:16:23] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-02-01 11:16:23] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-02-01 11:16:23] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-02-01 11:16:23] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 11:16:23] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1897368146, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 11:16:23] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1897368146, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 11:16:23] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1897368146, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 11:16:23] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 11:16:23] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1897368146, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:23] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1897368146, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:23] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1897368146, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 11:16:23] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 11:16:23] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 11:16:23] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [509858326, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 11:16:23] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [509858326, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 11:16:23] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [509858326, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 11:16:23] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 11:16:23] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [509858326, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:23] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [509858326, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:23] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [509858326, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 11:16:23] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 11:16:23] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1039759545, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 11:16:24] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1039759545, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1039759545, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1039759545, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:24] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1039759545, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1039759545, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 11:16:24] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1632300236, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 11:16:24] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1632300236, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1632300236, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1632300236, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:24] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1632300236, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1632300236, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 11:16:24] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 11:16:24] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.web2.juha.controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-02-01 11:16:24] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/login],methods=[POST]}" onto public java.lang.String com.web2.juha.controller.RestController.Login(org.springframework.ui.Model,com.web2.juha.model.ModelUser,javax.servlet.http.HttpSession) 
main> [2018-02-01 11:16:24] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.web2.juha.controller.UserController.Login(org.springframework.ui.Model) 
main> [2018-02-01 11:16:24] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@290d210d: startup date [Thu Feb 01 11:16:22 KST 2018]; root of context hierarchy 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1858493278, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 11:16:24] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1858493278, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1858493278, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1858493278, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:24] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1858493278, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1858493278, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 11:16:24] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 11:16:24] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@290d210d: startup date [Thu Feb 01 11:16:22 KST 2018]; root of context hierarchy 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [10304615, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 11:16:24] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [10304615, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [10304615, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [10304615, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:24] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [10304615, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [10304615, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 11:16:24] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1549840544, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 11:16:24] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1549840544, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1549840544, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1549840544, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:24] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1549840544, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1549840544, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 11:16:24] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [793808700, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 11:16:24] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [793808700, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [793808700, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [793808700, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:24] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [793808700, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [793808700, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 11:16:24] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 11:16:24] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-02-01 11:16:24] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-02-01 11:16:24] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-02-01 11:16:24] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-02-01 11:16:24] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-02-01 11:16:24] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/web2.juha/bin/com/web2/juha/model 
main> [2018-02-01 11:16:24] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/web2.juha/bin/com/web2/juha/model 
main> [2018-02-01 11:16:24] [ResolverUtil] [94] [DEBUG] Reader entry: ModelUser.class 
main> [2018-02-01 11:16:24] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Lecture/Spring/Work/web2.juha/bin/com/web2/juha/model 
main> [2018-02-01 11:16:24] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/web2.juha/bin/com/web2/juha/model/ModelUser.class 
main> [2018-02-01 11:16:24] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/web2.juha/bin/com/web2/juha/model/ModelUser.class 
main> [2018-02-01 11:16:24] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 K  com/web2/juha/model/ModelUser  java/lang/Object user_no Ljava/lang/String; user_id  
main> [2018-02-01 11:16:24] [ResolverUtil] [250] [DEBUG] Checking to see if class com.web2.juha.model.ModelUser matches criteria [is assignable to Object] 
main> [2018-02-01 11:16:24] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2018-02-01 11:16:24] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1216611732, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 11:16:24] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1216611732, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1216611732, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1216611732, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:24] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1216611732, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1216611732, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 11:16:24] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 11:16:24] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'serviceUser' with 0 common interceptors and 2 specific interceptors 
main> [2018-02-01 11:16:24] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.web2.juha.svr.ServiceUser@124ac145] 
main> [2018-02-01 11:16:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public com.web2.juha.model.ModelUser com.web2.juha.svr.ServiceUser.getUserOne(com.web2.juha.model.ModelUser) 
main> [2018-02-01 11:16:24] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-02-01 11:16:24] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-02-01 11:16:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-02-01 11:16:24] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-02-01 11:16:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-02-01 11:16:24] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-02-01 11:16:24] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-02-01 11:16:24] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-02-01 11:16:24] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:24] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:24] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-02-01 11:16:24] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-02-01 11:16:24] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:24] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-02-01 11:16:24] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:24] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-02-01 11:16:24] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-02-01 11:16:24] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-02-01 11:16:24] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-02-01 11:16:24] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-02-01 11:16:24] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-02-01 11:16:24] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:24] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:24] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-02-01 11:16:24] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-02-01 11:16:24] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-02-01 11:16:24] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-02-01 11:16:24] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [449105069, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 11:16:24] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [449105069, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [449105069, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [449105069, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:24] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [449105069, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [449105069, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 11:16:24] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1659452474, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 11:16:24] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1659452474, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1659452474, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1659452474, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:24] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1659452474, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1659452474, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 11:16:24] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1493142905, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 11:16:24] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1493142905, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1493142905, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1493142905, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:24] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1493142905, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1493142905, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 11:16:24] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [com.web2.juha.svr.ServiceUser.getUserOne]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [512407823, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 11:16:24] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [512407823, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [512407823, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 11:16:24] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2018-02-01 11:16:24] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4760f169] 
main> [2018-02-01 11:16:24] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [512407823, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2018-02-01 11:16:24] [getUserOne] [139] [DEBUG] ==>  Preparing: SELECT * FROM bbs_user WHERE user_id = ? AND user_password = ?  
main> [2018-02-01 11:16:24] [getUserOne] [139] [DEBUG] ==> Parameters: algiering(String), asdf1234(String) 
main> [2018-02-01 11:16:24] [getUserOne] [139] [DEBUG] <==      Total: 1 
main> [2018-02-01 11:16:24] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4760f169] 
main> [2018-02-01 11:16:24] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4760f169] 
main> [2018-02-01 11:16:24] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4760f169] 
main> [2018-02-01 11:16:24] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4760f169] 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [512407823, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:24] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [512407823, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:24] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [512407823, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 11:16:24] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 11:16:55] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@290d210d: startup date [Thu Feb 01 11:16:55 KST 2018]; root of context hierarchy 
main> [2018-02-01 11:16:56] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-02-01 11:16:56] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-02-01 11:16:56] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 11:16:56] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 11:16:56] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 11:16:56] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 11:16:56] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 11:16:56] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 11:16:56] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 11:16:56] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 11:16:56] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 11:16:56] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 11:16:56] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 11:16:56] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 11:16:56] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 11:16:56] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 11:16:56] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-02-01 11:16:56] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-02-01 11:16:56] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-02-01 11:16:56] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-02-01 11:16:56] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@70d2e40b] 
main> [2018-02-01 11:16:56] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-02-01 11:16:56] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-02-01 11:16:56] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-02-01 11:16:56] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-02-01 11:16:56] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-02-01 11:16:56] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-02-01 11:16:56] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-02-01 11:16:56] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-02-01 11:16:56] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-02-01 11:16:56] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-02-01 11:16:56] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-02-01 11:16:56] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-02-01 11:16:56] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-02-01 11:16:56] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-02-01 11:16:56] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-02-01 11:16:56] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-02-01 11:16:56] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-02-01 11:16:56] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-02-01 11:16:56] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-02-01 11:16:56] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-02-01 11:16:56] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-02-01 11:16:56] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:56] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:56] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-02-01 11:16:56] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-02-01 11:16:56] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:56] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-02-01 11:16:56] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:56] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-02-01 11:16:56] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-02-01 11:16:56] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-02-01 11:16:56] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:56] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:56] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-02-01 11:16:56] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-02-01 11:16:56] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-02-01 11:16:56] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-02-01 11:16:56] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-02-01 11:16:56] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-02-01 11:16:56] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1928174253, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 11:16:57] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1928174253, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1928174253, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1928174253, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:57] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1928174253, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1928174253, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 11:16:57] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 11:16:57] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-02-01 11:16:57] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@7051777c] 
main> [2018-02-01 11:16:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-02-01 11:16:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-02-01 11:16:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-02-01 11:16:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-02-01 11:16:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-02-01 11:16:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-02-01 11:16:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-02-01 11:16:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 11:16:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 11:16:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 11:16:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-02-01 11:16:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-02-01 11:16:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-02-01 11:16:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-02-01 11:16:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 11:16:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 11:16:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 11:16:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 11:16:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-02-01 11:16:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-02-01 11:16:57] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-02-01 11:16:57] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-02-01 11:16:57] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-02-01 11:16:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-02-01 11:16:57] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#452ba1db' with 0 common interceptors and 2 specific interceptors 
main> [2018-02-01 11:16:57] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@2b97cc1f] 
main> [2018-02-01 11:16:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-02-01 11:16:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-02-01 11:16:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-02-01 11:16:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-02-01 11:16:57] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-02-01 11:16:57] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-02-01 11:16:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-02-01 11:16:57] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-02-01 11:16:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-02-01 11:16:57] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [180078856, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 11:16:57] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [180078856, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [180078856, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [180078856, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:57] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [180078856, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [180078856, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 11:16:57] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [381930033, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 11:16:57] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [381930033, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [381930033, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [381930033, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:57] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [381930033, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [381930033, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 11:16:57] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 11:16:57] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [145105559, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 11:16:57] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [145105559, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [145105559, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [145105559, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:57] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [145105559, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [145105559, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 11:16:57] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [465839591, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 11:16:57] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [465839591, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [465839591, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [465839591, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:57] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [465839591, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [465839591, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 11:16:57] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 11:16:57] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.web2.juha.controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-02-01 11:16:57] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/login],methods=[POST]}" onto public java.lang.String com.web2.juha.controller.RestController.Login(org.springframework.ui.Model,com.web2.juha.model.ModelUser,javax.servlet.http.HttpSession) 
main> [2018-02-01 11:16:57] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.web2.juha.controller.UserController.Login(org.springframework.ui.Model) 
main> [2018-02-01 11:16:57] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@290d210d: startup date [Thu Feb 01 11:16:55 KST 2018]; root of context hierarchy 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1010983633, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 11:16:57] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1010983633, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1010983633, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1010983633, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:57] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1010983633, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1010983633, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 11:16:57] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 11:16:57] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@290d210d: startup date [Thu Feb 01 11:16:55 KST 2018]; root of context hierarchy 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1510009630, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 11:16:57] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1510009630, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1510009630, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1510009630, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:57] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1510009630, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1510009630, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 11:16:57] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [987805552, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 11:16:57] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [987805552, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [987805552, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [987805552, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:57] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [987805552, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [987805552, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 11:16:57] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [550707, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 11:16:57] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [550707, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [550707, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [550707, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:57] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [550707, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [550707, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 11:16:57] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 11:16:57] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-02-01 11:16:57] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-02-01 11:16:57] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-02-01 11:16:57] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-02-01 11:16:57] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-02-01 11:16:57] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/web2.juha/bin/com/web2/juha/model 
main> [2018-02-01 11:16:57] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/web2.juha/bin/com/web2/juha/model 
main> [2018-02-01 11:16:57] [ResolverUtil] [94] [DEBUG] Reader entry: ModelUser.class 
main> [2018-02-01 11:16:57] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Lecture/Spring/Work/web2.juha/bin/com/web2/juha/model 
main> [2018-02-01 11:16:57] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/web2.juha/bin/com/web2/juha/model/ModelUser.class 
main> [2018-02-01 11:16:57] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/web2.juha/bin/com/web2/juha/model/ModelUser.class 
main> [2018-02-01 11:16:57] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 K  com/web2/juha/model/ModelUser  java/lang/Object user_no Ljava/lang/String; user_id  
main> [2018-02-01 11:16:57] [ResolverUtil] [250] [DEBUG] Checking to see if class com.web2.juha.model.ModelUser matches criteria [is assignable to Object] 
main> [2018-02-01 11:16:57] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2018-02-01 11:16:57] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1905280105, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 11:16:57] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1905280105, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1905280105, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1905280105, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:57] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1905280105, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1905280105, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 11:16:57] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 11:16:57] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'serviceUser' with 0 common interceptors and 2 specific interceptors 
main> [2018-02-01 11:16:57] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.web2.juha.svr.ServiceUser@5d21202d] 
main> [2018-02-01 11:16:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public com.web2.juha.model.ModelUser com.web2.juha.svr.ServiceUser.getUserOne(com.web2.juha.model.ModelUser) 
main> [2018-02-01 11:16:57] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-02-01 11:16:57] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-02-01 11:16:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-02-01 11:16:57] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-02-01 11:16:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-02-01 11:16:57] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [640161448, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 11:16:57] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [640161448, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [640161448, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [640161448, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:57] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [640161448, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [640161448, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 11:16:57] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [219192399, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 11:16:57] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [219192399, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [219192399, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [219192399, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:57] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [219192399, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [219192399, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 11:16:57] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1012776440, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 11:16:57] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1012776440, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1012776440, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1012776440, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:57] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1012776440, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1012776440, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 11:16:57] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [com.web2.juha.svr.ServiceUser.getUserOne]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1539477312, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 11:16:57] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1539477312, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1539477312, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 11:16:57] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2018-02-01 11:16:57] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7fdab70c] 
main> [2018-02-01 11:16:57] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1539477312, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2018-02-01 11:16:57] [getUserOne] [139] [DEBUG] ==>  Preparing: SELECT * FROM bbs_user WHERE user_id = ? AND user_password = ?  
main> [2018-02-01 11:16:57] [getUserOne] [139] [DEBUG] ==> Parameters: algiering(String), asdf1234(String) 
main> [2018-02-01 11:16:57] [getUserOne] [139] [DEBUG] <==      Total: 1 
main> [2018-02-01 11:16:57] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7fdab70c] 
main> [2018-02-01 11:16:57] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7fdab70c] 
main> [2018-02-01 11:16:57] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7fdab70c] 
main> [2018-02-01 11:16:57] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7fdab70c] 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1539477312, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:57] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1539477312, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 11:16:57] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1539477312, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 11:16:57] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 14:32:20] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Thu Feb 01 14:32:20 KST 2018]; root of context hierarchy 
main> [2018-02-01 14:32:20] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-02-01 14:32:20] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-02-01 14:32:21] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 14:32:21] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 14:32:21] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 14:32:21] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 14:32:21] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 14:32:21] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 14:32:21] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 14:32:21] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 14:32:21] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 14:32:21] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 14:32:21] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 14:32:21] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 14:32:21] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 14:32:21] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 14:32:21] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-02-01 14:32:21] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-02-01 14:32:21] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-02-01 14:32:21] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-02-01 14:32:21] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@15bcf458] 
main> [2018-02-01 14:32:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-02-01 14:32:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-02-01 14:32:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-02-01 14:32:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-02-01 14:32:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-02-01 14:32:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-02-01 14:32:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-02-01 14:32:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-02-01 14:32:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-02-01 14:32:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-02-01 14:32:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-02-01 14:32:21] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-02-01 14:32:21] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-02-01 14:32:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-02-01 14:32:21] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-02-01 14:32:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1566099239, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 14:32:21] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1566099239, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1566099239, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1566099239, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:32:21] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1566099239, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1566099239, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 14:32:21] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 14:32:21] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-02-01 14:32:21] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@1ded7b14] 
main> [2018-02-01 14:32:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-02-01 14:32:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-02-01 14:32:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-02-01 14:32:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-02-01 14:32:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-02-01 14:32:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-02-01 14:32:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-02-01 14:32:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 14:32:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 14:32:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 14:32:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-02-01 14:32:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 14:32:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 14:32:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-02-01 14:32:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-02-01 14:32:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-02-01 14:32:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-02-01 14:32:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-02-01 14:32:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 14:32:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 14:32:21] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-02-01 14:32:21] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-02-01 14:32:21] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-02-01 14:32:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-02-01 14:32:21] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#5bda80bf' with 0 common interceptors and 2 specific interceptors 
main> [2018-02-01 14:32:21] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@53dfacba] 
main> [2018-02-01 14:32:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-02-01 14:32:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-02-01 14:32:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-02-01 14:32:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-02-01 14:32:21] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-02-01 14:32:21] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-02-01 14:32:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-02-01 14:32:21] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-02-01 14:32:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-02-01 14:32:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-02-01 14:32:21] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [509858326, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 14:32:21] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [509858326, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [509858326, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [509858326, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:32:21] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [509858326, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [509858326, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 14:32:21] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [343128256, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 14:32:21] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [343128256, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [343128256, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [343128256, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:32:21] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [343128256, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [343128256, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 14:32:21] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 14:32:21] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [841483227, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 14:32:21] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [841483227, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [841483227, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [841483227, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:32:21] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [841483227, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [841483227, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 14:32:21] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [81269359, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 14:32:21] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [81269359, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [81269359, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [81269359, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:32:21] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [81269359, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [81269359, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 14:32:21] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 14:32:21] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/articlelist/{board_id}],methods=[GET]}" onto public java.lang.String com.web2.juha.controller.ArticleController.Articlelist(org.springframework.ui.Model,java.lang.String) 
main> [2018-02-01 14:32:21] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.web2.juha.controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-02-01 14:32:21] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/login],methods=[POST]}" onto public int com.web2.juha.controller.RestController.Login(org.springframework.ui.Model,com.web2.juha.model.ModelUser,javax.servlet.http.HttpSession) 
main> [2018-02-01 14:32:21] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.web2.juha.controller.UserController.Login(org.springframework.ui.Model) 
main> [2018-02-01 14:32:21] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Thu Feb 01 14:32:20 KST 2018]; root of context hierarchy 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [847174133, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 14:32:21] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [847174133, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [847174133, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [847174133, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:32:21] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [847174133, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [847174133, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 14:32:21] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 14:32:21] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Thu Feb 01 14:32:20 KST 2018]; root of context hierarchy 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [2049646260, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 14:32:21] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [2049646260, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [2049646260, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [2049646260, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:32:21] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [2049646260, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [2049646260, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 14:32:21] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [2050291306, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 14:32:21] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [2050291306, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [2050291306, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [2050291306, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:32:21] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [2050291306, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [2050291306, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 14:32:21] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1945915791, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 14:32:21] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1945915791, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1945915791, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1945915791, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:32:21] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1945915791, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1945915791, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 14:32:21] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [904409454, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 14:32:21] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [904409454, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [904409454, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [904409454, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:32:21] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [904409454, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [904409454, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 14:32:21] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [913450862, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 14:32:21] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [913450862, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [913450862, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [913450862, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:32:21] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [913450862, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:32:21] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [913450862, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 14:32:21] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 14:32:22] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-02-01 14:32:22] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-02-01 14:32:22] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-02-01 14:32:22] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-02-01 14:32:22] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-02-01 14:32:22] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/web2.juha/bin/com/web2/juha/model 
main> [2018-02-01 14:32:22] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/web2.juha/bin/com/web2/juha/model 
main> [2018-02-01 14:32:22] [ResolverUtil] [94] [DEBUG] Reader entry: ModelArticle.class 
main> [2018-02-01 14:32:22] [ResolverUtil] [94] [DEBUG] Reader entry: ModelUser.class 
main> [2018-02-01 14:32:22] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Lecture/Spring/Work/web2.juha/bin/com/web2/juha/model 
main> [2018-02-01 14:32:22] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/web2.juha/bin/com/web2/juha/model/ModelArticle.class 
main> [2018-02-01 14:32:22] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/web2.juha/bin/com/web2/juha/model/ModelArticle.class 
main> [2018-02-01 14:32:22] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 z   com/web2/juha/model/ModelArticle  java/lang/Object  
main> [2018-02-01 14:32:22] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/web2.juha/bin/com/web2/juha/model/ModelUser.class 
main> [2018-02-01 14:32:22] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/web2.juha/bin/com/web2/juha/model/ModelUser.class 
main> [2018-02-01 14:32:22] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 K  com/web2/juha/model/ModelUser  java/lang/Object user_no Ljava/lang/String; user_id  
main> [2018-02-01 14:32:22] [ResolverUtil] [250] [DEBUG] Checking to see if class com.web2.juha.model.ModelArticle matches criteria [is assignable to Object] 
main> [2018-02-01 14:32:22] [ResolverUtil] [250] [DEBUG] Checking to see if class com.web2.juha.model.ModelUser matches criteria [is assignable to Object] 
main> [2018-02-01 14:32:22] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2018-02-01 14:32:22] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2018-02-01 14:32:22] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'serviceUser' with 0 common interceptors and 2 specific interceptors 
main> [2018-02-01 14:32:22] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.web2.juha.svr.ServiceUser@67c5ac52] 
main> [2018-02-01 14:32:22] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public com.web2.juha.model.ModelUser com.web2.juha.svr.ServiceUser.getUserOne(com.web2.juha.model.ModelUser) 
main> [2018-02-01 14:32:22] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-02-01 14:32:22] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-02-01 14:32:22] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-02-01 14:32:22] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-02-01 14:32:22] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-02-01 14:32:22] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-02-01 14:32:22] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-02-01 14:32:22] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-02-01 14:32:22] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:32:22] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:32:22] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-02-01 14:32:22] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-02-01 14:32:22] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-02-01 14:32:22] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:32:22] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:32:22] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-02-01 14:32:22] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-02-01 14:32:22] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-02-01 14:32:22] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:32:22] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:32:22] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-02-01 14:32:22] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-02-01 14:32:22] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-02-01 14:32:22] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-02-01 14:32:22] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-02-01 14:32:22] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-02-01 14:32:22] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-02-01 14:32:22] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-02-01 14:32:22] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 14:32:22] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [231182885, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 14:32:22] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [231182885, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 14:32:22] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [231182885, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 14:32:22] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 14:32:22] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [231182885, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:32:22] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [231182885, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:32:22] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [231182885, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 14:32:22] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 14:32:22] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'serviceArticle' with 0 common interceptors and 2 specific interceptors 
main> [2018-02-01 14:32:22] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.web2.juha.svr.ServiceArticle@4b6d92e] 
main> [2018-02-01 14:32:22] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List com.web2.juha.svr.ServiceArticle.getArticleList(java.lang.String) 
main> [2018-02-01 14:32:22] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-02-01 14:32:22] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-02-01 14:32:22] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-02-01 14:32:22] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-02-01 14:32:22] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-02-01 14:32:22] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-02-01 14:32:22] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-02-01 14:32:22] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-02-01 14:32:22] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:32:22] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:32:22] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-02-01 14:32:22] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-02-01 14:32:22] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-02-01 14:32:22] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:32:22] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:32:22] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-02-01 14:32:22] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-02-01 14:32:22] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-02-01 14:32:22] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:32:22] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:32:22] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-02-01 14:32:22] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-02-01 14:32:22] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-02-01 14:32:22] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-02-01 14:32:22] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-02-01 14:32:22] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-02-01 14:32:22] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-02-01 14:32:22] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-02-01 14:32:22] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 14:32:22] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [172299409, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 14:32:22] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [172299409, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 14:32:22] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [172299409, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 14:32:22] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 14:32:22] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [172299409, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:32:22] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [172299409, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:32:22] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [172299409, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 14:32:22] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 14:32:22] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 14:32:22] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1182492749, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 14:32:22] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1182492749, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 14:32:22] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1182492749, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 14:32:22] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 14:32:22] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1182492749, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:32:22] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1182492749, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:32:22] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1182492749, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 14:32:22] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 14:32:22] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 14:32:22] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1146318308, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 14:32:22] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1146318308, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 14:32:22] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1146318308, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 14:32:22] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 14:32:22] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1146318308, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:32:22] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1146318308, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:32:22] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1146318308, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 14:32:22] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 14:32:22] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [com.web2.juha.svr.ServiceArticle.getArticleList]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 14:32:22] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1887991591, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 14:32:22] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1887991591, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 14:32:22] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1887991591, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 14:32:22] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2018-02-01 14:32:22] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74ecacc3] 
main> [2018-02-01 14:32:22] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74ecacc3] 
main> [2018-02-01 14:32:22] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74ecacc3] 
main> [2018-02-01 14:32:22] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74ecacc3] 
main> [2018-02-01 14:32:22] [DataSourceTransactionManager] [847] [DEBUG] Initiating transaction rollback 
main> [2018-02-01 14:32:22] [DataSourceTransactionManager] [284] [DEBUG] Rolling back JDBC transaction on Connection [1887991591, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:32:22] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1887991591, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:32:22] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1887991591, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 14:32:22] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 14:34:00] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Thu Feb 01 14:34:00 KST 2018]; root of context hierarchy 
main> [2018-02-01 14:34:00] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-02-01 14:34:00] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-02-01 14:34:01] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 14:34:01] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 14:34:01] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 14:34:01] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 14:34:01] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 14:34:01] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 14:34:01] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 14:34:01] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 14:34:01] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 14:34:01] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 14:34:01] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 14:34:01] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 14:34:01] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 14:34:01] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 14:34:01] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-02-01 14:34:01] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-02-01 14:34:01] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-02-01 14:34:01] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-02-01 14:34:01] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@42a9a63e] 
main> [2018-02-01 14:34:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-02-01 14:34:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-02-01 14:34:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-02-01 14:34:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-02-01 14:34:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-02-01 14:34:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-02-01 14:34:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-02-01 14:34:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-02-01 14:34:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-02-01 14:34:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-02-01 14:34:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-02-01 14:34:01] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-02-01 14:34:01] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-02-01 14:34:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-02-01 14:34:01] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-02-01 14:34:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-02-01 14:34:01] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 14:34:01] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1831705084, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 14:34:01] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1831705084, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 14:34:01] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1831705084, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 14:34:01] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 14:34:01] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1831705084, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:34:01] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1831705084, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:34:01] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1831705084, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 14:34:01] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 14:34:01] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-02-01 14:34:01] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@abbc908] 
main> [2018-02-01 14:34:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-02-01 14:34:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-02-01 14:34:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-02-01 14:34:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-02-01 14:34:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-02-01 14:34:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-02-01 14:34:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-02-01 14:34:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 14:34:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 14:34:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 14:34:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-02-01 14:34:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-02-01 14:34:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-02-01 14:34:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-02-01 14:34:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 14:34:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 14:34:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-02-01 14:34:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-02-01 14:34:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 14:34:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 14:34:01] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-02-01 14:34:01] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-02-01 14:34:01] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-02-01 14:34:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-02-01 14:34:01] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#5ac86ba5' with 0 common interceptors and 2 specific interceptors 
main> [2018-02-01 14:34:01] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@5f84abe8] 
main> [2018-02-01 14:34:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-02-01 14:34:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-02-01 14:34:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-02-01 14:34:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-02-01 14:34:01] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-02-01 14:34:01] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-02-01 14:34:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-02-01 14:34:01] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-02-01 14:34:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-02-01 14:34:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-02-01 14:34:01] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-02-01 14:34:01] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 14:34:01] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [2037806977, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 14:34:01] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [2037806977, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 14:34:01] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [2037806977, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 14:34:01] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 14:34:01] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [2037806977, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:34:01] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [2037806977, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:34:01] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [2037806977, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 14:34:01] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 14:34:01] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 14:34:01] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1585711807, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 14:34:01] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1585711807, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 14:34:01] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1585711807, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 14:34:01] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 14:34:01] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1585711807, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:34:01] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1585711807, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:34:01] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1585711807, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 14:34:01] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 14:34:01] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-02-01 14:34:01] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 14:34:01] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1871580398, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 14:34:01] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1871580398, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 14:34:01] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1871580398, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 14:34:01] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 14:34:01] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1871580398, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:34:01] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1871580398, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:34:01] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1871580398, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 14:34:01] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 14:34:01] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 14:34:01] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [178259104, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 14:34:01] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [178259104, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 14:34:01] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [178259104, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 14:34:01] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 14:34:01] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [178259104, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:34:01] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [178259104, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:34:01] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [178259104, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 14:34:01] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 14:34:01] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/articlelist/{board_id}],methods=[GET]}" onto public java.lang.String com.web2.juha.controller.ArticleController.Articlelist(org.springframework.ui.Model,java.lang.String) 
main> [2018-02-01 14:34:01] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.web2.juha.controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-02-01 14:34:01] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/login],methods=[POST]}" onto public int com.web2.juha.controller.RestController.Login(org.springframework.ui.Model,com.web2.juha.model.ModelUser,javax.servlet.http.HttpSession) 
main> [2018-02-01 14:34:01] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.web2.juha.controller.UserController.Login(org.springframework.ui.Model) 
main> [2018-02-01 14:34:02] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Thu Feb 01 14:34:00 KST 2018]; root of context hierarchy 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [687685057, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 14:34:02] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [687685057, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [687685057, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [687685057, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:34:02] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [687685057, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [687685057, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 14:34:02] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 14:34:02] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Thu Feb 01 14:34:00 KST 2018]; root of context hierarchy 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1525241607, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 14:34:02] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1525241607, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1525241607, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1525241607, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:34:02] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1525241607, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1525241607, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 14:34:02] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [252276535, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 14:34:02] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [252276535, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [252276535, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [252276535, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:34:02] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [252276535, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [252276535, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 14:34:02] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [798516062, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 14:34:02] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [798516062, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [798516062, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [798516062, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:34:02] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [798516062, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [798516062, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 14:34:02] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1939970407, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 14:34:02] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1939970407, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1939970407, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1939970407, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:34:02] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1939970407, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1939970407, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 14:34:02] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [557568981, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 14:34:02] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [557568981, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [557568981, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [557568981, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:34:02] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [557568981, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [557568981, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 14:34:02] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 14:34:02] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-02-01 14:34:02] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-02-01 14:34:02] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-02-01 14:34:02] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-02-01 14:34:02] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-02-01 14:34:02] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/web2.juha/bin/com/web2/juha/model 
main> [2018-02-01 14:34:02] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/web2.juha/bin/com/web2/juha/model 
main> [2018-02-01 14:34:02] [ResolverUtil] [94] [DEBUG] Reader entry: ModelArticle.class 
main> [2018-02-01 14:34:02] [ResolverUtil] [94] [DEBUG] Reader entry: ModelUser.class 
main> [2018-02-01 14:34:02] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Lecture/Spring/Work/web2.juha/bin/com/web2/juha/model 
main> [2018-02-01 14:34:02] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/web2.juha/bin/com/web2/juha/model/ModelArticle.class 
main> [2018-02-01 14:34:02] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/web2.juha/bin/com/web2/juha/model/ModelArticle.class 
main> [2018-02-01 14:34:02] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 z   com/web2/juha/model/ModelArticle  java/lang/Object  
main> [2018-02-01 14:34:02] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/web2.juha/bin/com/web2/juha/model/ModelUser.class 
main> [2018-02-01 14:34:02] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/web2.juha/bin/com/web2/juha/model/ModelUser.class 
main> [2018-02-01 14:34:02] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 K  com/web2/juha/model/ModelUser  java/lang/Object user_no Ljava/lang/String; user_id  
main> [2018-02-01 14:34:02] [ResolverUtil] [250] [DEBUG] Checking to see if class com.web2.juha.model.ModelArticle matches criteria [is assignable to Object] 
main> [2018-02-01 14:34:02] [ResolverUtil] [250] [DEBUG] Checking to see if class com.web2.juha.model.ModelUser matches criteria [is assignable to Object] 
main> [2018-02-01 14:34:02] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2018-02-01 14:34:02] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2018-02-01 14:34:02] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'serviceUser' with 0 common interceptors and 2 specific interceptors 
main> [2018-02-01 14:34:02] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.web2.juha.svr.ServiceUser@10a0fe30] 
main> [2018-02-01 14:34:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public com.web2.juha.model.ModelUser com.web2.juha.svr.ServiceUser.getUserOne(com.web2.juha.model.ModelUser) 
main> [2018-02-01 14:34:02] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-02-01 14:34:02] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-02-01 14:34:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-02-01 14:34:02] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-02-01 14:34:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-02-01 14:34:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-02-01 14:34:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-02-01 14:34:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-02-01 14:34:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:34:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:34:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-02-01 14:34:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-02-01 14:34:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-02-01 14:34:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:34:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:34:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-02-01 14:34:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-02-01 14:34:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:34:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:34:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-02-01 14:34:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-02-01 14:34:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-02-01 14:34:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-02-01 14:34:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-02-01 14:34:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-02-01 14:34:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-02-01 14:34:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-02-01 14:34:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [640161448, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 14:34:02] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [640161448, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [640161448, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [640161448, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:34:02] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [640161448, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [640161448, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 14:34:02] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 14:34:02] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'serviceArticle' with 0 common interceptors and 2 specific interceptors 
main> [2018-02-01 14:34:02] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.web2.juha.svr.ServiceArticle@43045f9f] 
main> [2018-02-01 14:34:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List com.web2.juha.svr.ServiceArticle.getArticleList(java.lang.String) 
main> [2018-02-01 14:34:02] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-02-01 14:34:02] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-02-01 14:34:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-02-01 14:34:02] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-02-01 14:34:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-02-01 14:34:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-02-01 14:34:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-02-01 14:34:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-02-01 14:34:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:34:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:34:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-02-01 14:34:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-02-01 14:34:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-02-01 14:34:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:34:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:34:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-02-01 14:34:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-02-01 14:34:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:34:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:34:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-02-01 14:34:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-02-01 14:34:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-02-01 14:34:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-02-01 14:34:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-02-01 14:34:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-02-01 14:34:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-02-01 14:34:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-02-01 14:34:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [2013613908, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 14:34:02] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [2013613908, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [2013613908, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [2013613908, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:34:02] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [2013613908, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [2013613908, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 14:34:02] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1260390769, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 14:34:02] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1260390769, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1260390769, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1260390769, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:34:02] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1260390769, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1260390769, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 14:34:02] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1241182310, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 14:34:02] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1241182310, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1241182310, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1241182310, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:34:02] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1241182310, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1241182310, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 14:34:02] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [com.web2.juha.svr.ServiceArticle.getArticleList]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1825071442, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 14:34:02] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1825071442, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1825071442, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 14:34:02] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2018-02-01 14:34:02] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@328d044f] 
main> [2018-02-01 14:34:02] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1825071442, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2018-02-01 14:34:02] [getArticleList] [139] [DEBUG] ==>  Preparing: SELECT * FROM bbs_article WHERE article_use = 1 AND board_id = ?  
main> [2018-02-01 14:34:02] [getArticleList] [139] [DEBUG] ==> Parameters: mhw(String) 
main> [2018-02-01 14:34:02] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@328d044f] 
main> [2018-02-01 14:34:02] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml] 
main> [2018-02-01 14:34:02] [SQLErrorCodesFactory] [126] [INFO] SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana] 
main> [2018-02-01 14:34:02] [SQLErrorCodesFactory] [199] [DEBUG] Looking up default SQLErrorCodes for DataSource [org.apache.commons.dbcp2.BasicDataSource@3241713e] 
main> [2018-02-01 14:34:02] [SQLErrorCodesFactory] [217] [DEBUG] Database product name cached for DataSource [org.apache.commons.dbcp2.BasicDataSource@3241713e]: name is 'MySQL' 
main> [2018-02-01 14:34:02] [SQLErrorCodesFactory] [175] [DEBUG] SQL error codes for 'MySQL' found 
main> [2018-02-01 14:34:02] [SQLErrorCodeSQLExceptionTranslator] [281] [DEBUG] Unable to translate SQLException with Error code '0', will now try the fallback translator 
main> [2018-02-01 14:34:02] [SQLStateSQLExceptionTranslator] [96] [DEBUG] Extracted SQL state class 'S1' from value 'S1009' 
main> [2018-02-01 14:34:02] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@328d044f] 
main> [2018-02-01 14:34:02] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@328d044f] 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [847] [DEBUG] Initiating transaction rollback 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [284] [DEBUG] Rolling back JDBC transaction on Connection [1825071442, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:34:02] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1825071442, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:34:02] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1825071442, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 14:34:02] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 14:37:49] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Thu Feb 01 14:37:49 KST 2018]; root of context hierarchy 
main> [2018-02-01 14:37:49] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-02-01 14:37:49] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-02-01 14:37:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 14:37:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 14:37:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 14:37:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 14:37:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 14:37:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 14:37:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 14:37:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 14:37:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 14:37:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 14:37:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 14:37:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 14:37:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 14:37:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-02-01 14:37:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-02-01 14:37:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-02-01 14:37:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-02-01 14:37:50] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-02-01 14:37:50] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@42a9a63e] 
main> [2018-02-01 14:37:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-02-01 14:37:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-02-01 14:37:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-02-01 14:37:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-02-01 14:37:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-02-01 14:37:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-02-01 14:37:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-02-01 14:37:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-02-01 14:37:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-02-01 14:37:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-02-01 14:37:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-02-01 14:37:50] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-02-01 14:37:50] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-02-01 14:37:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-02-01 14:37:50] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-02-01 14:37:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-02-01 14:37:50] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 14:37:50] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1566099239, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 14:37:50] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1566099239, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 14:37:50] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1566099239, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 14:37:50] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 14:37:50] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1566099239, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:37:50] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1566099239, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:37:50] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1566099239, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 14:37:50] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 14:37:50] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-02-01 14:37:50] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@1ded7b14] 
main> [2018-02-01 14:37:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-02-01 14:37:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-02-01 14:37:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-02-01 14:37:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-02-01 14:37:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-02-01 14:37:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-02-01 14:37:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-02-01 14:37:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 14:37:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 14:37:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 14:37:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-02-01 14:37:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-02-01 14:37:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-02-01 14:37:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 14:37:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 14:37:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 14:37:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-02-01 14:37:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-02-01 14:37:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-02-01 14:37:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-02-01 14:37:50] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-02-01 14:37:50] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-02-01 14:37:50] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-02-01 14:37:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-02-01 14:37:50] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#5ac86ba5' with 0 common interceptors and 2 specific interceptors 
main> [2018-02-01 14:37:50] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@53dfacba] 
main> [2018-02-01 14:37:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-02-01 14:37:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-02-01 14:37:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-02-01 14:37:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-02-01 14:37:50] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-02-01 14:37:50] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-02-01 14:37:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-02-01 14:37:50] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-02-01 14:37:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-02-01 14:37:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-02-01 14:37:50] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-02-01 14:37:50] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 14:37:50] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [509858326, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 14:37:50] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [509858326, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 14:37:50] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [509858326, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 14:37:50] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 14:37:50] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [509858326, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:37:50] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [509858326, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:37:50] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [509858326, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 14:37:50] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 14:37:50] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 14:37:50] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [343128256, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 14:37:50] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [343128256, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 14:37:50] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [343128256, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 14:37:50] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 14:37:50] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [343128256, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:37:50] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [343128256, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:37:50] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [343128256, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 14:37:50] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 14:37:50] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-02-01 14:37:50] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 14:37:50] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [841483227, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 14:37:50] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [841483227, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 14:37:50] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [841483227, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 14:37:50] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 14:37:50] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [841483227, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:37:50] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [841483227, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:37:50] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [841483227, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 14:37:50] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 14:37:50] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 14:37:50] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [81269359, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 14:37:50] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [81269359, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 14:37:50] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [81269359, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 14:37:50] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 14:37:50] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [81269359, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:37:50] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [81269359, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:37:50] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [81269359, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 14:37:50] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 14:37:50] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/articlelist/{board_id}],methods=[GET]}" onto public java.lang.String com.web2.juha.controller.ArticleController.Articlelist(org.springframework.ui.Model,java.lang.String) 
main> [2018-02-01 14:37:50] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.web2.juha.controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-02-01 14:37:50] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/login],methods=[POST]}" onto public int com.web2.juha.controller.RestController.Login(org.springframework.ui.Model,com.web2.juha.model.ModelUser,javax.servlet.http.HttpSession) 
main> [2018-02-01 14:37:50] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.web2.juha.controller.UserController.Login(org.springframework.ui.Model) 
main> [2018-02-01 14:37:50] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Thu Feb 01 14:37:49 KST 2018]; root of context hierarchy 
main> [2018-02-01 14:37:50] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 14:37:50] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [287859212, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 14:37:50] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [287859212, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 14:37:50] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [287859212, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 14:37:50] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 14:37:50] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [287859212, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:37:50] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [287859212, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:37:50] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [287859212, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 14:37:50] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 14:37:51] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Thu Feb 01 14:37:49 KST 2018]; root of context hierarchy 
main> [2018-02-01 14:37:51] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 14:37:51] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [987805552, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 14:37:51] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [987805552, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 14:37:51] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [987805552, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 14:37:51] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 14:37:51] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [987805552, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:37:51] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [987805552, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:37:51] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [987805552, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 14:37:51] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 14:37:51] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 14:37:51] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [299162582, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 14:37:51] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [299162582, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 14:37:51] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [299162582, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 14:37:51] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 14:37:51] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [299162582, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:37:51] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [299162582, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:37:51] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [299162582, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 14:37:51] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 14:37:51] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 14:37:51] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [753692748, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 14:37:51] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [753692748, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 14:37:51] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [753692748, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 14:37:51] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 14:37:51] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [753692748, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:37:51] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [753692748, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:37:51] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [753692748, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 14:37:51] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 14:37:51] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 14:37:51] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [589610983, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 14:37:51] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [589610983, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 14:37:51] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [589610983, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 14:37:51] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 14:37:51] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [589610983, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:37:51] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [589610983, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:37:51] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [589610983, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 14:37:51] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 14:37:51] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 14:37:51] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1875532039, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 14:37:51] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1875532039, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 14:37:51] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1875532039, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 14:37:51] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 14:37:51] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1875532039, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:37:51] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1875532039, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:37:51] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1875532039, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 14:37:51] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 14:37:51] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-02-01 14:37:51] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-02-01 14:37:51] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-02-01 14:37:51] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-02-01 14:37:51] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-02-01 14:37:51] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/web2.juha/bin/com/web2/juha/model 
main> [2018-02-01 14:37:51] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/web2.juha/bin/com/web2/juha/model 
main> [2018-02-01 14:37:51] [ResolverUtil] [94] [DEBUG] Reader entry: ModelArticle.class 
main> [2018-02-01 14:37:51] [ResolverUtil] [94] [DEBUG] Reader entry: ModelUser.class 
main> [2018-02-01 14:37:51] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Lecture/Spring/Work/web2.juha/bin/com/web2/juha/model 
main> [2018-02-01 14:37:51] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/web2.juha/bin/com/web2/juha/model/ModelArticle.class 
main> [2018-02-01 14:37:51] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/web2.juha/bin/com/web2/juha/model/ModelArticle.class 
main> [2018-02-01 14:37:51] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 ~   com/web2/juha/model/ModelArticle  java/lang/Object  
main> [2018-02-01 14:37:51] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/web2.juha/bin/com/web2/juha/model/ModelUser.class 
main> [2018-02-01 14:37:51] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/web2.juha/bin/com/web2/juha/model/ModelUser.class 
main> [2018-02-01 14:37:51] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 K  com/web2/juha/model/ModelUser  java/lang/Object user_no Ljava/lang/String; user_id  
main> [2018-02-01 14:37:51] [ResolverUtil] [250] [DEBUG] Checking to see if class com.web2.juha.model.ModelArticle matches criteria [is assignable to Object] 
main> [2018-02-01 14:37:51] [ResolverUtil] [250] [DEBUG] Checking to see if class com.web2.juha.model.ModelUser matches criteria [is assignable to Object] 
main> [2018-02-01 14:37:51] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2018-02-01 14:37:51] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2018-02-01 14:37:51] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'serviceUser' with 0 common interceptors and 2 specific interceptors 
main> [2018-02-01 14:37:51] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.web2.juha.svr.ServiceUser@10a0fe30] 
main> [2018-02-01 14:37:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public com.web2.juha.model.ModelUser com.web2.juha.svr.ServiceUser.getUserOne(com.web2.juha.model.ModelUser) 
main> [2018-02-01 14:37:51] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-02-01 14:37:51] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-02-01 14:37:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-02-01 14:37:51] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-02-01 14:37:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-02-01 14:37:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-02-01 14:37:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-02-01 14:37:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-02-01 14:37:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-02-01 14:37:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:37:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:37:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-02-01 14:37:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-02-01 14:37:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-02-01 14:37:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:37:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:37:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-02-01 14:37:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-02-01 14:37:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:37:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:37:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-02-01 14:37:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-02-01 14:37:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-02-01 14:37:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-02-01 14:37:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-02-01 14:37:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-02-01 14:37:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-02-01 14:37:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-02-01 14:37:51] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 14:37:51] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [640161448, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 14:37:51] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [640161448, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 14:37:51] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [640161448, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 14:37:51] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 14:37:51] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [640161448, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:37:51] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [640161448, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:37:51] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [640161448, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 14:37:51] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 14:37:51] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'serviceArticle' with 0 common interceptors and 2 specific interceptors 
main> [2018-02-01 14:37:51] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.web2.juha.svr.ServiceArticle@43045f9f] 
main> [2018-02-01 14:37:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List com.web2.juha.svr.ServiceArticle.getArticleList(java.lang.String) 
main> [2018-02-01 14:37:51] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-02-01 14:37:51] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-02-01 14:37:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-02-01 14:37:51] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-02-01 14:37:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-02-01 14:37:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-02-01 14:37:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-02-01 14:37:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-02-01 14:37:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-02-01 14:37:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:37:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:37:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-02-01 14:37:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-02-01 14:37:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-02-01 14:37:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:37:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:37:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-02-01 14:37:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-02-01 14:37:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:37:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-02-01 14:37:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-02-01 14:37:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-02-01 14:37:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-02-01 14:37:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-02-01 14:37:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-02-01 14:37:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-02-01 14:37:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-02-01 14:37:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-02-01 14:37:51] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 14:37:51] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [2013613908, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 14:37:51] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [2013613908, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 14:37:51] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [2013613908, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 14:37:51] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 14:37:51] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [2013613908, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:37:51] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [2013613908, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:37:51] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [2013613908, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 14:37:51] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 14:37:51] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 14:37:51] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1260390769, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 14:37:51] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1260390769, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 14:37:51] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1260390769, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 14:37:51] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 14:37:51] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1260390769, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:37:51] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1260390769, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:37:51] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1260390769, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 14:37:51] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 14:37:51] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 14:37:51] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1241182310, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 14:37:51] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1241182310, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 14:37:51] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1241182310, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 14:37:51] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 14:37:51] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1241182310, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:37:51] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1241182310, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:37:51] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1241182310, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 14:37:51] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-02-01 14:37:51] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [com.web2.juha.svr.ServiceArticle.getArticleList]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-02-01 14:37:51] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1825071442, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-02-01 14:37:51] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1825071442, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-02-01 14:37:51] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1825071442, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-02-01 14:37:51] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2018-02-01 14:37:51] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@328d044f] 
main> [2018-02-01 14:37:51] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1825071442, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2018-02-01 14:37:51] [getArticleList] [139] [DEBUG] ==>  Preparing: SELECT * FROM bbs_article WHERE article_use = 1 AND board_id = ?  
main> [2018-02-01 14:37:51] [getArticleList] [139] [DEBUG] ==> Parameters: mhw(String) 
main> [2018-02-01 14:37:51] [getArticleList] [139] [DEBUG] <==      Total: 118 
main> [2018-02-01 14:37:51] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@328d044f] 
main> [2018-02-01 14:37:51] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@328d044f] 
main> [2018-02-01 14:37:51] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@328d044f] 
main> [2018-02-01 14:37:51] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@328d044f] 
main> [2018-02-01 14:37:51] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-02-01 14:37:51] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1825071442, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:37:51] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1825071442, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-02-01 14:37:51] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1825071442, URL=jdbc:mysql://localhost:3306/board?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-02-01 14:37:51] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
