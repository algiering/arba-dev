main> [2018-01-08 13:57:01] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@2cbb3d47: startup date [Mon Jan 08 13:57:01 KST 2018]; root of context hierarchy 
main> [2018-01-08 13:57:01] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-08 13:57:01] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-08 13:57:02] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:57:02] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:57:02] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:57:02] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:57:02] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:57:02] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:57:02] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:57:02] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:57:02] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:57:02] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:57:02] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:57:02] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:57:02] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:57:02] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:57:02] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 13:57:02] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 13:57:02] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 13:57:02] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 13:57:02] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@aec50a1] 
main> [2018-01-08 13:57:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-08 13:57:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-08 13:57:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-08 13:57:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-08 13:57:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-08 13:57:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-08 13:57:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-08 13:57:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-08 13:57:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-08 13:57:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-08 13:57:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-08 13:57:02] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 13:57:02] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 13:57:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 13:57:02] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 13:57:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 13:57:02] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:57:02] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1166361824, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:57:02] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1166361824, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:57:02] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1166361824, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:57:02] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:57:02] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1166361824, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 13:57:02] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1166361824, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 13:57:02] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1166361824, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:57:02] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:57:02] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 13:57:02] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@1c025cb] 
main> [2018-01-08 13:57:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-08 13:57:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-08 13:57:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-08 13:57:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-08 13:57:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-08 13:57:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-08 13:57:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-08 13:57:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 13:57:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 13:57:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 13:57:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-08 13:57:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-08 13:57:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-08 13:57:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-08 13:57:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 13:57:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 13:57:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-08 13:57:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-08 13:57:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 13:57:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 13:57:02] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 13:57:02] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 13:57:02] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 13:57:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 13:57:02] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#4f936da8' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 13:57:02] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@512d4583] 
main> [2018-01-08 13:57:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-08 13:57:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-08 13:57:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-08 13:57:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-08 13:57:02] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 13:57:02] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 13:57:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 13:57:02] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 13:57:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 13:57:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 13:57:02] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-08 13:57:02] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:57:02] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [405950359, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:57:02] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [405950359, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:57:02] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [405950359, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:57:02] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:57:02] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [405950359, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 13:57:02] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [405950359, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 13:57:02] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [405950359, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:57:02] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:57:02] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:57:02] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [609879567, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:57:02] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [609879567, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:57:02] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [609879567, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:57:02] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:57:02] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [609879567, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 13:57:02] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [609879567, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 13:57:02] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [609879567, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:57:02] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:57:02] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-08 13:57:02] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:57:02] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1015659282, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:57:02] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1015659282, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:57:02] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1015659282, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:57:02] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:57:02] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1015659282, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 13:57:02] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1015659282, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 13:57:02] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1015659282, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:57:02] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:57:02] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:57:02] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1526866775, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:57:02] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1526866775, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:57:02] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1526866775, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:57:02] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:57:02] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1526866775, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 13:57:02] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1526866775, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 13:57:02] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1526866775, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:57:02] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:57:02] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-08 13:57:02] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@2cbb3d47: startup date [Mon Jan 08 13:57:01 KST 2018]; root of context hierarchy 
main> [2018-01-08 13:57:02] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:57:02] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1187748003, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:57:02] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1187748003, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:57:02] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1187748003, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:57:02] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:57:02] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1187748003, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 13:57:02] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1187748003, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 13:57:02] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1187748003, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:57:02] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:57:02] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@2cbb3d47: startup date [Mon Jan 08 13:57:01 KST 2018]; root of context hierarchy 
main> [2018-01-08 13:57:02] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:57:02] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [783882192, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:57:02] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [783882192, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:57:02] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [783882192, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:57:02] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:57:02] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [783882192, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 13:57:02] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [783882192, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 13:57:02] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [783882192, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:57:02] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:57:02] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:57:02] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [379886173, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:57:02] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [379886173, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:57:02] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [379886173, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:57:02] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:57:02] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [379886173, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 13:57:02] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [379886173, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 13:57:02] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [379886173, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:57:02] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:57:02] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:57:02] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [375273627, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:57:02] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [375273627, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:57:02] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [375273627, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:57:02] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:57:02] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [375273627, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 13:57:02] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [375273627, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 13:57:02] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [375273627, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:57:02] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:57:03] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-01-08 13:57:03] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-01-08 13:57:03] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-01-08 13:57:03] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-01-08 13:57:03] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-01-08 13:57:03] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 13:57:03] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 13:57:03] [ResolverUtil] [94] [DEBUG] Reader entry: ModelPhone.class 
main> [2018-01-08 13:57:03] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 13:57:03] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-08 13:57:03] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-08 13:57:03] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 L  #com/spring65/phone/model/ModelPhone  java/lang/Object logger Lorg/slf4j/Logger; name Ljava/lang/String; manufacturer price Ljava/lang/Integer; getName ()Ljava/lang/String; Code	     LineNumberTable LocalVariableTable this %Lcom/spring65/phone/model/ModelPhone; setName (Ljava/lang/String;)V getManufacturer	   	  setManufacturer getPrice ()Ljava/lang/Integer;	    
main> [2018-01-08 13:57:03] [ResolverUtil] [250] [DEBUG] Checking to see if class com.spring65.phone.model.ModelPhone matches criteria [is assignable to Object] 
main> [2018-01-08 13:57:03] [ClassPathXmlApplicationContext] [488] [WARN] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'daophone': Injection of autowired dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Could not autowire field: private org.apache.ibatis.session.SqlSession com.spring65.phone.dao.DaoPhone.session; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSession' defined in URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml]: Cannot resolve reference to bean 'sqlSessionFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml]: Invocation of init method failed; nested exception is org.springframework.core.NestedIOException: Failed to parse config resource: class path resource [Configuration.xml]; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing SQL Mapper Configuration. Cause: java.io.IOException: Could not find resource /mapper/mapperPhone.xml 
main> [2018-01-08 13:57:13] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@2cbb3d47: startup date [Mon Jan 08 13:57:13 KST 2018]; root of context hierarchy 
main> [2018-01-08 13:57:13] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-08 13:57:13] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-08 13:57:14] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:57:14] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:57:14] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:57:14] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:57:14] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:57:14] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:57:14] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:57:14] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:57:14] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:57:14] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:57:14] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:57:14] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:57:14] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:57:14] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:57:14] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 13:57:14] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 13:57:14] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 13:57:14] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 13:57:14] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@aec50a1] 
main> [2018-01-08 13:57:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-08 13:57:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-08 13:57:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-08 13:57:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-08 13:57:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-08 13:57:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-08 13:57:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-08 13:57:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-08 13:57:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-08 13:57:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-08 13:57:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-08 13:57:14] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 13:57:14] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 13:57:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 13:57:14] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 13:57:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 13:57:14] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:57:14] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1456265041, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:57:14] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1456265041, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:57:14] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1456265041, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:57:14] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:57:14] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1456265041, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 13:57:14] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1456265041, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 13:57:14] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1456265041, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:57:14] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:57:14] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 13:57:14] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@37c5fc56] 
main> [2018-01-08 13:57:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-08 13:57:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-08 13:57:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-08 13:57:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-08 13:57:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-08 13:57:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-08 13:57:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-08 13:57:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 13:57:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 13:57:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 13:57:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-08 13:57:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-08 13:57:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-08 13:57:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 13:57:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 13:57:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-08 13:57:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-08 13:57:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-08 13:57:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 13:57:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 13:57:14] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 13:57:14] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 13:57:14] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 13:57:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 13:57:14] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#4f936da8' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 13:57:14] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@5ecba515] 
main> [2018-01-08 13:57:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-08 13:57:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-08 13:57:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-08 13:57:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-08 13:57:14] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 13:57:14] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 13:57:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 13:57:14] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 13:57:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 13:57:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 13:57:14] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-08 13:57:14] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:57:14] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1618099562, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:57:14] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1618099562, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:57:14] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1618099562, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:57:14] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:57:14] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1618099562, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 13:57:14] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1618099562, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 13:57:14] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1618099562, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:57:14] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:57:14] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:57:14] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [181326224, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:57:14] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [181326224, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:57:14] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [181326224, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:57:14] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:57:14] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [181326224, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 13:57:14] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [181326224, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 13:57:14] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [181326224, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:57:14] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:57:14] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-08 13:57:14] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:57:14] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1591954203, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:57:14] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1591954203, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:57:14] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1591954203, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:57:14] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:57:14] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1591954203, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 13:57:14] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1591954203, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 13:57:14] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1591954203, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:57:14] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:57:14] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:57:14] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1114525788, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:57:14] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1114525788, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:57:14] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1114525788, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:57:14] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:57:14] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1114525788, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 13:57:14] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1114525788, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 13:57:14] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1114525788, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:57:14] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:57:14] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-08 13:57:15] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@2cbb3d47: startup date [Mon Jan 08 13:57:13 KST 2018]; root of context hierarchy 
main> [2018-01-08 13:57:15] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:57:15] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1187748003, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:57:15] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1187748003, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:57:15] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1187748003, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:57:15] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:57:15] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1187748003, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 13:57:15] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1187748003, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 13:57:15] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1187748003, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:57:15] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:57:15] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@2cbb3d47: startup date [Mon Jan 08 13:57:13 KST 2018]; root of context hierarchy 
main> [2018-01-08 13:57:15] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:57:15] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [783882192, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:57:15] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [783882192, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:57:15] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [783882192, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:57:15] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:57:15] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [783882192, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 13:57:15] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [783882192, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 13:57:15] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [783882192, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:57:15] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:57:15] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:57:15] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [379886173, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:57:15] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [379886173, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:57:15] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [379886173, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:57:15] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:57:15] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [379886173, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 13:57:15] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [379886173, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 13:57:15] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [379886173, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:57:15] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:57:15] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:57:15] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [375273627, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:57:15] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [375273627, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:57:15] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [375273627, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:57:15] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:57:15] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [375273627, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 13:57:15] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [375273627, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 13:57:15] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [375273627, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:57:15] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:57:15] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-01-08 13:57:15] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-01-08 13:57:15] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-01-08 13:57:15] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-01-08 13:57:15] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-01-08 13:57:15] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 13:57:15] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 13:57:15] [ResolverUtil] [94] [DEBUG] Reader entry: ModelPhone.class 
main> [2018-01-08 13:57:15] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 13:57:15] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-08 13:57:15] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-08 13:57:15] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 L  #com/spring65/phone/model/ModelPhone  java/lang/Object logger Lorg/slf4j/Logger; name Ljava/lang/String; manufacturer price Ljava/lang/Integer; getName ()Ljava/lang/String; Code	     LineNumberTable LocalVariableTable this %Lcom/spring65/phone/model/ModelPhone; setName (Ljava/lang/String;)V getManufacturer	   	  setManufacturer getPrice ()Ljava/lang/Integer;	    
main> [2018-01-08 13:57:15] [ResolverUtil] [250] [DEBUG] Checking to see if class com.spring65.phone.model.ModelPhone matches criteria [is assignable to Object] 
main> [2018-01-08 13:57:15] [ClassPathXmlApplicationContext] [488] [WARN] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'daophone': Injection of autowired dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Could not autowire field: private org.apache.ibatis.session.SqlSession com.spring65.phone.dao.DaoPhone.session; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSession' defined in URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml]: Cannot resolve reference to bean 'sqlSessionFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml]: Invocation of init method failed; nested exception is org.springframework.core.NestedIOException: Failed to parse config resource: class path resource [Configuration.xml]; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing SQL Mapper Configuration. Cause: java.io.IOException: Could not find resource /mapper/mapperPhone.xml 
main> [2018-01-08 13:59:03] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5ad851c9: startup date [Mon Jan 08 13:59:03 KST 2018]; root of context hierarchy 
main> [2018-01-08 13:59:03] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-08 13:59:03] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-08 13:59:04] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:59:04] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:59:04] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:59:04] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:59:04] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:59:04] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:59:04] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:59:04] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:59:04] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:59:04] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:59:04] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:59:04] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:59:04] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:59:04] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:59:04] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 13:59:04] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 13:59:04] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 13:59:04] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 13:59:04] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@41394595] 
main> [2018-01-08 13:59:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-08 13:59:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-08 13:59:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-08 13:59:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-08 13:59:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-08 13:59:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-08 13:59:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-08 13:59:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-08 13:59:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-08 13:59:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-08 13:59:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-08 13:59:04] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 13:59:04] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 13:59:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 13:59:04] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 13:59:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 13:59:04] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:59:04] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1260043537, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:59:04] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1260043537, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:59:04] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1260043537, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:59:04] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:59:04] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1260043537, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 13:59:04] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1260043537, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 13:59:04] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1260043537, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:59:04] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:59:04] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 13:59:04] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@f9b5552] 
main> [2018-01-08 13:59:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-08 13:59:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-08 13:59:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-08 13:59:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-08 13:59:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-08 13:59:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-08 13:59:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-08 13:59:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 13:59:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 13:59:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 13:59:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-08 13:59:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-08 13:59:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-08 13:59:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-08 13:59:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-08 13:59:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-08 13:59:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 13:59:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 13:59:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 13:59:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 13:59:04] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 13:59:04] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 13:59:04] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 13:59:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 13:59:04] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#625e134e' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 13:59:04] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@5d58c727] 
main> [2018-01-08 13:59:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-08 13:59:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-08 13:59:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-08 13:59:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-08 13:59:04] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 13:59:04] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 13:59:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 13:59:04] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 13:59:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 13:59:04] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 13:59:04] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-08 13:59:04] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:59:04] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1844942991, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:59:04] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1844942991, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:59:04] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1844942991, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:59:04] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:59:04] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1844942991, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 13:59:04] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1844942991, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 13:59:04] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1844942991, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:59:04] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:59:04] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:59:04] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1295225869, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:59:04] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1295225869, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:59:04] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1295225869, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:59:04] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:59:04] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1295225869, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 13:59:04] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1295225869, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 13:59:04] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1295225869, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:59:04] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:59:04] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-08 13:59:04] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:59:04] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [754707140, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:59:04] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [754707140, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:59:04] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [754707140, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:59:04] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:59:04] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [754707140, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 13:59:04] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [754707140, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 13:59:04] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [754707140, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:59:04] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:59:04] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:59:04] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1717136008, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:59:04] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1717136008, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:59:04] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1717136008, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:59:04] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:59:04] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1717136008, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 13:59:04] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1717136008, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 13:59:04] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1717136008, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:59:04] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:59:04] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-08 13:59:04] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5ad851c9: startup date [Mon Jan 08 13:59:03 KST 2018]; root of context hierarchy 
main> [2018-01-08 13:59:04] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:59:04] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [604990529, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:59:04] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [604990529, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:59:04] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [604990529, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:59:04] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:59:04] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [604990529, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 13:59:04] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [604990529, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 13:59:04] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [604990529, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:59:04] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:59:04] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5ad851c9: startup date [Mon Jan 08 13:59:03 KST 2018]; root of context hierarchy 
main> [2018-01-08 13:59:04] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:59:04] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1750563752, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:59:04] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1750563752, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:59:04] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1750563752, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:59:04] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:59:04] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1750563752, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 13:59:04] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1750563752, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 13:59:04] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1750563752, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:59:04] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:59:04] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:59:04] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1783146483, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:59:04] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1783146483, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:59:04] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1783146483, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:59:04] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:59:04] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1783146483, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 13:59:04] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1783146483, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 13:59:04] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1783146483, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:59:04] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:59:04] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:59:04] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [2083215552, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:59:04] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [2083215552, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:59:04] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [2083215552, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:59:04] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:59:04] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [2083215552, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 13:59:04] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [2083215552, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 13:59:04] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [2083215552, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:59:04] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:59:04] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-01-08 13:59:04] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-01-08 13:59:04] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-01-08 13:59:04] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-01-08 13:59:04] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-01-08 13:59:04] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 13:59:04] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 13:59:05] [ResolverUtil] [94] [DEBUG] Reader entry: ModelPhone.class 
main> [2018-01-08 13:59:05] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 13:59:05] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-08 13:59:05] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-08 13:59:05] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 L  #com/spring65/phone/model/ModelPhone  java/lang/Object logger Lorg/slf4j/Logger; name Ljava/lang/String; manufacturer price Ljava/lang/Integer; getName ()Ljava/lang/String; Code	     LineNumberTable LocalVariableTable this %Lcom/spring65/phone/model/ModelPhone; setName (Ljava/lang/String;)V getManufacturer	   	  setManufacturer getPrice ()Ljava/lang/Integer;	    
main> [2018-01-08 13:59:05] [ResolverUtil] [250] [DEBUG] Checking to see if class com.spring65.phone.model.ModelPhone matches criteria [is assignable to Object] 
main> [2018-01-08 13:59:05] [ClassPathXmlApplicationContext] [488] [WARN] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'daophone': Injection of autowired dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Could not autowire field: private org.apache.ibatis.session.SqlSession com.spring65.phone.dao.DaoPhone.session; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSession' defined in URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml]: Cannot resolve reference to bean 'sqlSessionFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml]: Invocation of init method failed; nested exception is org.springframework.core.NestedIOException: Failed to parse config resource: class path resource [Configuration.xml]; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing SQL Mapper Configuration. Cause: java.io.IOException: Could not find resource /mapper/mapperPhone.xml 
main> [2018-01-08 14:00:10] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5ad851c9: startup date [Mon Jan 08 14:00:10 KST 2018]; root of context hierarchy 
main> [2018-01-08 14:00:10] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-08 14:00:10] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-08 14:00:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:00:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:00:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:00:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:00:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:00:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:00:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:00:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:00:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:00:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:00:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:00:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:00:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:00:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:00:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 14:00:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 14:00:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 14:00:10] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 14:00:10] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@41394595] 
main> [2018-01-08 14:00:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-08 14:00:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-08 14:00:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-08 14:00:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-08 14:00:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-08 14:00:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-08 14:00:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-08 14:00:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-08 14:00:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-08 14:00:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-08 14:00:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-08 14:00:11] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 14:00:11] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 14:00:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 14:00:11] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 14:00:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 14:00:11] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:00:11] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [663716901, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:00:11] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [663716901, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:00:11] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [663716901, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:00:11] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:00:11] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [663716901, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:00:11] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [663716901, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:00:11] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [663716901, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:00:11] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:00:11] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 14:00:11] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@37a64f9d] 
main> [2018-01-08 14:00:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-08 14:00:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-08 14:00:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-08 14:00:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-08 14:00:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-08 14:00:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-08 14:00:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-08 14:00:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 14:00:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 14:00:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 14:00:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-08 14:00:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-08 14:00:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-08 14:00:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-08 14:00:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 14:00:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 14:00:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 14:00:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 14:00:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-08 14:00:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-08 14:00:11] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 14:00:11] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 14:00:11] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 14:00:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 14:00:11] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#625e134e' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 14:00:11] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@21f9277b] 
main> [2018-01-08 14:00:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-08 14:00:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-08 14:00:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-08 14:00:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-08 14:00:11] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 14:00:11] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 14:00:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 14:00:11] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 14:00:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 14:00:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 14:00:11] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-08 14:00:11] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:00:11] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1423586012, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:00:11] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1423586012, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:00:11] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1423586012, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:00:11] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:00:11] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1423586012, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:00:11] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1423586012, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:00:11] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1423586012, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:00:11] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:00:11] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:00:11] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [501036152, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:00:11] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [501036152, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:00:11] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [501036152, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:00:11] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:00:11] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [501036152, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:00:11] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [501036152, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:00:11] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [501036152, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:00:11] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:00:11] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-08 14:00:11] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:00:11] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [838627755, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:00:11] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [838627755, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:00:11] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [838627755, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:00:11] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:00:11] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [838627755, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:00:11] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [838627755, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:00:11] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [838627755, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:00:11] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:00:11] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:00:11] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [806588571, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:00:11] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [806588571, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:00:11] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [806588571, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:00:11] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:00:11] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [806588571, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:00:11] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [806588571, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:00:11] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [806588571, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:00:11] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:00:11] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-08 14:00:11] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5ad851c9: startup date [Mon Jan 08 14:00:10 KST 2018]; root of context hierarchy 
main> [2018-01-08 14:00:11] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:00:11] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [604990529, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:00:11] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [604990529, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:00:11] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [604990529, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:00:11] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:00:11] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [604990529, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:00:11] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [604990529, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:00:11] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [604990529, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:00:11] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:00:11] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5ad851c9: startup date [Mon Jan 08 14:00:10 KST 2018]; root of context hierarchy 
main> [2018-01-08 14:00:11] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:00:11] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1750563752, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:00:11] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1750563752, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:00:11] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1750563752, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:00:11] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:00:11] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1750563752, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:00:11] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1750563752, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:00:11] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1750563752, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:00:11] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:00:11] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:00:11] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1783146483, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:00:11] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1783146483, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:00:11] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1783146483, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:00:11] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:00:11] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1783146483, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:00:11] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1783146483, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:00:11] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1783146483, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:00:11] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:00:11] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:00:11] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [2083215552, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:00:11] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [2083215552, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:00:11] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [2083215552, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:00:11] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:00:11] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [2083215552, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:00:11] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [2083215552, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:00:11] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [2083215552, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:00:11] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:00:11] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-01-08 14:00:11] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-01-08 14:00:11] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-01-08 14:00:11] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-01-08 14:00:11] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-01-08 14:00:11] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 14:00:11] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 14:00:11] [ResolverUtil] [94] [DEBUG] Reader entry: ModelPhone.class 
main> [2018-01-08 14:00:11] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 14:00:11] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-08 14:00:11] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-08 14:00:11] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 L  #com/spring65/phone/model/ModelPhone  java/lang/Object logger Lorg/slf4j/Logger; name Ljava/lang/String; manufacturer price Ljava/lang/Integer; getName ()Ljava/lang/String; Code	     LineNumberTable LocalVariableTable this %Lcom/spring65/phone/model/ModelPhone; setName (Ljava/lang/String;)V getManufacturer	   	  setManufacturer getPrice ()Ljava/lang/Integer;	    
main> [2018-01-08 14:00:11] [ResolverUtil] [250] [DEBUG] Checking to see if class com.spring65.phone.model.ModelPhone matches criteria [is assignable to Object] 
main> [2018-01-08 14:00:11] [ClassPathXmlApplicationContext] [488] [WARN] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'daophone': Injection of autowired dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Could not autowire field: private org.apache.ibatis.session.SqlSession com.spring65.phone.dao.DaoPhone.session; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSession' defined in URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml]: Cannot resolve reference to bean 'sqlSessionFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml]: Invocation of init method failed; nested exception is org.springframework.core.NestedIOException: Failed to parse config resource: class path resource [Configuration.xml]; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing SQL Mapper Configuration. Cause: java.io.IOException: Could not find resource /mapper/mapperPhone.xml 
main> [2018-01-08 14:00:20] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5ad851c9: startup date [Mon Jan 08 14:00:20 KST 2018]; root of context hierarchy 
main> [2018-01-08 14:00:20] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-08 14:00:20] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-08 14:00:21] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:00:21] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:00:21] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:00:21] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:00:21] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:00:21] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:00:21] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:00:21] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:00:21] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:00:21] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:00:21] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:00:21] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:00:21] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:00:21] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:00:21] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 14:00:21] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 14:00:21] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 14:00:21] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 14:00:21] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@41394595] 
main> [2018-01-08 14:00:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-08 14:00:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-08 14:00:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-08 14:00:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-08 14:00:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-08 14:00:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-08 14:00:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-08 14:00:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-08 14:00:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-08 14:00:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-08 14:00:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-08 14:00:21] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 14:00:21] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 14:00:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 14:00:21] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 14:00:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 14:00:21] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:00:21] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [663716901, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:00:21] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [663716901, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:00:21] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [663716901, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:00:21] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:00:21] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [663716901, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:00:21] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [663716901, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:00:21] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [663716901, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:00:21] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:00:21] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 14:00:21] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@37a64f9d] 
main> [2018-01-08 14:00:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-08 14:00:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-08 14:00:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-08 14:00:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-08 14:00:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-08 14:00:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-08 14:00:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-08 14:00:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 14:00:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 14:00:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 14:00:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-08 14:00:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-08 14:00:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-08 14:00:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 14:00:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 14:00:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-08 14:00:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-08 14:00:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-08 14:00:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 14:00:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 14:00:21] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 14:00:21] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 14:00:21] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 14:00:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 14:00:21] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#625e134e' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 14:00:21] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@21f9277b] 
main> [2018-01-08 14:00:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-08 14:00:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-08 14:00:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-08 14:00:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-08 14:00:21] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 14:00:21] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 14:00:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 14:00:21] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 14:00:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 14:00:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 14:00:21] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-08 14:00:21] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:00:21] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1423586012, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:00:21] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1423586012, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:00:21] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1423586012, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:00:21] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:00:21] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1423586012, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:00:21] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1423586012, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:00:21] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1423586012, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:00:21] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:00:21] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:00:21] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [501036152, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:00:21] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [501036152, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:00:21] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [501036152, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:00:21] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:00:21] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [501036152, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:00:21] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [501036152, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:00:21] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [501036152, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:00:21] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:00:21] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-08 14:00:21] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:00:21] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [838627755, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:00:21] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [838627755, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:00:21] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [838627755, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:00:21] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:00:21] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [838627755, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:00:21] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [838627755, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:00:21] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [838627755, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:00:21] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:00:21] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:00:21] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [806588571, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:00:21] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [806588571, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:00:21] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [806588571, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:00:21] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:00:21] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [806588571, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:00:21] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [806588571, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:00:21] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [806588571, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:00:21] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:00:21] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-08 14:00:21] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5ad851c9: startup date [Mon Jan 08 14:00:20 KST 2018]; root of context hierarchy 
main> [2018-01-08 14:00:21] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:00:21] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [604990529, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:00:21] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [604990529, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:00:21] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [604990529, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:00:21] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:00:21] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [604990529, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:00:21] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [604990529, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:00:21] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [604990529, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:00:21] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:00:21] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5ad851c9: startup date [Mon Jan 08 14:00:20 KST 2018]; root of context hierarchy 
main> [2018-01-08 14:00:21] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:00:21] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1750563752, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:00:21] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1750563752, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:00:21] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1750563752, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:00:21] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:00:21] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1750563752, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:00:21] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1750563752, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:00:21] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1750563752, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:00:21] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:00:21] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:00:21] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1783146483, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:00:21] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1783146483, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:00:21] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1783146483, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:00:21] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:00:21] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1783146483, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:00:21] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1783146483, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:00:21] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1783146483, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:00:21] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:00:21] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:00:21] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [2083215552, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:00:21] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [2083215552, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:00:21] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [2083215552, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:00:21] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:00:21] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [2083215552, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:00:21] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [2083215552, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:00:21] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [2083215552, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:00:21] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:00:21] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-01-08 14:00:21] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-01-08 14:00:21] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-01-08 14:00:21] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-01-08 14:00:21] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-01-08 14:00:21] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 14:00:21] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 14:00:21] [ResolverUtil] [94] [DEBUG] Reader entry: ModelPhone.class 
main> [2018-01-08 14:00:21] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 14:00:21] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-08 14:00:21] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-08 14:00:21] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 L  #com/spring65/phone/model/ModelPhone  java/lang/Object logger Lorg/slf4j/Logger; name Ljava/lang/String; manufacturer price Ljava/lang/Integer; getName ()Ljava/lang/String; Code	     LineNumberTable LocalVariableTable this %Lcom/spring65/phone/model/ModelPhone; setName (Ljava/lang/String;)V getManufacturer	   	  setManufacturer getPrice ()Ljava/lang/Integer;	    
main> [2018-01-08 14:00:21] [ResolverUtil] [250] [DEBUG] Checking to see if class com.spring65.phone.model.ModelPhone matches criteria [is assignable to Object] 
main> [2018-01-08 14:00:21] [ClassPathXmlApplicationContext] [488] [WARN] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'daophone': Injection of autowired dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Could not autowire field: private org.apache.ibatis.session.SqlSession com.spring65.phone.dao.DaoPhone.session; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSession' defined in URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml]: Cannot resolve reference to bean 'sqlSessionFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml]: Invocation of init method failed; nested exception is org.springframework.core.NestedIOException: Failed to parse config resource: class path resource [Configuration.xml]; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing SQL Mapper Configuration. Cause: java.io.IOException: Could not find resource /mapper/mapperPhone.xml 
main> [2018-01-08 14:01:34] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5ad851c9: startup date [Mon Jan 08 14:01:34 KST 2018]; root of context hierarchy 
main> [2018-01-08 14:01:34] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-08 14:01:35] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-08 14:01:35] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:01:35] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:01:35] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:01:35] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:01:35] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:01:35] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:01:35] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:01:35] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:01:35] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:01:35] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:01:35] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:01:35] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:01:35] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:01:35] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:01:35] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 14:01:35] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 14:01:35] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 14:01:35] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 14:01:35] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@41394595] 
main> [2018-01-08 14:01:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-08 14:01:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-08 14:01:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-08 14:01:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-08 14:01:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-08 14:01:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-08 14:01:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-08 14:01:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-08 14:01:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-08 14:01:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-08 14:01:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-08 14:01:35] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 14:01:35] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 14:01:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 14:01:35] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 14:01:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 14:01:35] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:01:35] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [663716901, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:01:35] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [663716901, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:01:35] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [663716901, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:01:35] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:01:35] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [663716901, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:01:35] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [663716901, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:01:35] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [663716901, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:01:35] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:01:35] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 14:01:35] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@37a64f9d] 
main> [2018-01-08 14:01:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-08 14:01:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-08 14:01:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-08 14:01:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-08 14:01:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-08 14:01:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-08 14:01:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-08 14:01:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 14:01:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 14:01:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 14:01:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-08 14:01:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 14:01:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 14:01:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-08 14:01:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-08 14:01:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-08 14:01:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-08 14:01:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-08 14:01:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 14:01:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 14:01:35] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 14:01:35] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 14:01:35] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 14:01:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 14:01:35] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#625e134e' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 14:01:35] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@21f9277b] 
main> [2018-01-08 14:01:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-08 14:01:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-08 14:01:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-08 14:01:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-08 14:01:35] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 14:01:35] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 14:01:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 14:01:35] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 14:01:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 14:01:35] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 14:01:35] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-08 14:01:35] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:01:35] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1423586012, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:01:35] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1423586012, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:01:35] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1423586012, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:01:35] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:01:35] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1423586012, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:01:35] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1423586012, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:01:35] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1423586012, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:01:35] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:01:35] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:01:35] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [501036152, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:01:35] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [501036152, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:01:35] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [501036152, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:01:35] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:01:35] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [501036152, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:01:35] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [501036152, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:01:35] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [501036152, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:01:35] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:01:35] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-08 14:01:35] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:01:35] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [838627755, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:01:35] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [838627755, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:01:35] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [838627755, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:01:35] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:01:35] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [838627755, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:01:35] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [838627755, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:01:35] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [838627755, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:01:35] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:01:35] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:01:35] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [806588571, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:01:35] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [806588571, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:01:35] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [806588571, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:01:35] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:01:35] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [806588571, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:01:35] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [806588571, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:01:35] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [806588571, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:01:35] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:01:35] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-08 14:01:36] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5ad851c9: startup date [Mon Jan 08 14:01:34 KST 2018]; root of context hierarchy 
main> [2018-01-08 14:01:36] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:01:36] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [604990529, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:01:36] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [604990529, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:01:36] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [604990529, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:01:36] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:01:36] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [604990529, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:01:36] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [604990529, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:01:36] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [604990529, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:01:36] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:01:36] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5ad851c9: startup date [Mon Jan 08 14:01:34 KST 2018]; root of context hierarchy 
main> [2018-01-08 14:01:36] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:01:36] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1750563752, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:01:36] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1750563752, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:01:36] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1750563752, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:01:36] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:01:36] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1750563752, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:01:36] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1750563752, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:01:36] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1750563752, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:01:36] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:01:36] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:01:36] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1783146483, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:01:36] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1783146483, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:01:36] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1783146483, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:01:36] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:01:36] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1783146483, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:01:36] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1783146483, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:01:36] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1783146483, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:01:36] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:01:36] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:01:36] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [2076864428, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:01:36] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [2076864428, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:01:36] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [2076864428, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:01:36] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:01:36] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [2076864428, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:01:36] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [2076864428, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:01:36] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [2076864428, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:01:36] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:01:36] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-01-08 14:01:36] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-01-08 14:01:36] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-01-08 14:01:36] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-01-08 14:01:36] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-01-08 14:01:36] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 14:01:36] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 14:01:36] [ResolverUtil] [94] [DEBUG] Reader entry: ModelPhone.class 
main> [2018-01-08 14:01:36] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 14:01:36] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-08 14:01:36] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-08 14:01:36] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 L  #com/spring65/phone/model/ModelPhone  java/lang/Object logger Lorg/slf4j/Logger; name Ljava/lang/String; manufacturer price Ljava/lang/Integer; getName ()Ljava/lang/String; Code	     LineNumberTable LocalVariableTable this %Lcom/spring65/phone/model/ModelPhone; setName (Ljava/lang/String;)V getManufacturer	   	  setManufacturer getPrice ()Ljava/lang/Integer;	    
main> [2018-01-08 14:01:36] [ResolverUtil] [250] [DEBUG] Checking to see if class com.spring65.phone.model.ModelPhone matches criteria [is assignable to Object] 
main> [2018-01-08 14:01:36] [ClassPathXmlApplicationContext] [488] [WARN] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'daophone': Injection of autowired dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Could not autowire field: private org.apache.ibatis.session.SqlSession com.spring65.phone.dao.DaoPhone.session; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSession' defined in URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml]: Cannot resolve reference to bean 'sqlSessionFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml]: Invocation of init method failed; nested exception is org.springframework.core.NestedIOException: Failed to parse config resource: class path resource [Configuration.xml]; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing SQL Mapper Configuration. Cause: java.io.IOException: Could not find resource /mapper/mapperPhone.xml 
main> [2018-01-08 14:12:15] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5ad851c9: startup date [Mon Jan 08 14:12:15 KST 2018]; root of context hierarchy 
main> [2018-01-08 14:12:15] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-08 14:12:16] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-08 14:12:16] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:12:16] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:12:16] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:12:16] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:12:16] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:12:16] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:12:16] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:12:16] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:12:16] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:12:16] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:12:16] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:12:16] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:12:16] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:12:16] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:12:16] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 14:12:16] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 14:12:16] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 14:12:16] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 14:12:16] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@67af833b] 
main> [2018-01-08 14:12:16] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-08 14:12:16] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-08 14:12:16] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-08 14:12:16] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-08 14:12:16] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-08 14:12:16] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-08 14:12:16] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-08 14:12:16] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-08 14:12:16] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-08 14:12:16] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-08 14:12:16] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-08 14:12:16] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 14:12:16] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 14:12:16] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 14:12:16] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 14:12:16] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 14:12:16] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 14:12:16] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 14:12:16] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 14:12:16] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 14:12:16] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 14:12:16] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 14:12:16] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 14:12:16] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 14:12:16] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 14:12:16] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 14:12:16] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:12:16] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:12:16] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 14:12:16] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:12:16] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:12:16] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 14:12:16] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 14:12:16] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 14:12:16] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:12:16] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:12:16] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 14:12:16] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 14:12:16] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 14:12:16] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:12:17] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1530870688, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:12:17] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1530870688, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:12:17] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1530870688, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:12:17] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:12:17] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1530870688, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:12:17] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1530870688, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:12:17] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1530870688, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:12:17] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:12:17] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 14:12:17] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@18a645fd] 
main> [2018-01-08 14:12:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-08 14:12:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-08 14:12:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-08 14:12:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-08 14:12:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-08 14:12:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-08 14:12:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-08 14:12:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 14:12:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 14:12:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 14:12:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-08 14:12:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-08 14:12:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-08 14:12:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-08 14:12:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 14:12:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 14:12:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 14:12:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 14:12:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-08 14:12:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-08 14:12:17] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 14:12:17] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 14:12:17] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 14:12:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 14:12:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 14:12:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 14:12:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 14:12:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 14:12:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 14:12:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 14:12:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 14:12:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 14:12:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 14:12:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 14:12:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:12:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:12:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 14:12:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:12:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:12:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 14:12:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 14:12:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 14:12:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:12:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:12:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 14:12:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 14:12:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 14:12:17] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#7e809b79' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 14:12:17] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@bdecc21] 
main> [2018-01-08 14:12:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-08 14:12:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-08 14:12:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-08 14:12:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-08 14:12:17] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 14:12:17] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 14:12:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 14:12:17] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 14:12:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 14:12:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 14:12:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 14:12:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 14:12:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 14:12:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 14:12:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 14:12:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 14:12:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 14:12:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 14:12:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 14:12:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:12:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:12:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 14:12:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:12:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:12:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 14:12:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 14:12:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 14:12:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:12:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:12:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 14:12:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 14:12:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 14:12:17] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-08 14:12:17] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:12:17] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [973692608, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:12:17] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [973692608, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:12:17] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [973692608, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:12:17] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:12:17] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [973692608, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:12:17] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [973692608, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:12:17] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [973692608, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:12:17] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:12:17] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:12:17] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [412835761, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:12:17] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [412835761, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:12:17] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [412835761, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:12:17] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:12:17] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [412835761, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:12:17] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [412835761, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:12:17] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [412835761, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:12:17] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:12:17] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-08 14:12:17] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:12:17] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [219812012, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:12:17] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [219812012, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:12:17] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [219812012, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:12:17] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:12:17] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [219812012, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:12:17] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [219812012, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:12:17] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [219812012, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:12:17] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:12:17] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:12:17] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [2053349061, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:12:17] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [2053349061, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:12:17] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [2053349061, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:12:17] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:12:17] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [2053349061, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:12:17] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [2053349061, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:12:17] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [2053349061, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:12:17] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:12:17] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-08 14:12:17] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5ad851c9: startup date [Mon Jan 08 14:12:15 KST 2018]; root of context hierarchy 
main> [2018-01-08 14:12:17] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:12:17] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [605440398, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:12:17] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [605440398, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:12:17] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [605440398, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:12:17] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:12:17] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [605440398, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:12:17] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [605440398, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:12:17] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [605440398, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:12:17] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:12:17] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5ad851c9: startup date [Mon Jan 08 14:12:15 KST 2018]; root of context hierarchy 
main> [2018-01-08 14:12:17] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:12:17] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1807634633, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:12:17] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1807634633, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:12:17] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1807634633, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:12:17] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:12:17] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1807634633, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:12:17] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1807634633, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:12:17] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1807634633, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:12:17] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:12:17] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:12:17] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1933799970, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:12:17] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1933799970, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:12:17] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1933799970, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:12:17] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:12:17] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1933799970, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:12:17] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1933799970, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:12:17] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1933799970, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:12:17] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:12:17] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:12:17] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [2083215552, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:12:17] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [2083215552, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:12:17] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [2083215552, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:12:17] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:12:17] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [2083215552, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:12:17] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [2083215552, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:12:17] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [2083215552, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:12:17] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:12:17] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-01-08 14:12:17] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-01-08 14:12:17] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-01-08 14:12:17] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-01-08 14:12:17] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-01-08 14:12:17] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 14:12:17] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 14:12:17] [ResolverUtil] [94] [DEBUG] Reader entry: ModelPhone.class 
main> [2018-01-08 14:12:17] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 14:12:17] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-08 14:12:17] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-08 14:12:17] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 L  #com/spring65/phone/model/ModelPhone  java/lang/Object logger Lorg/slf4j/Logger; name Ljava/lang/String; manufacturer price Ljava/lang/Integer; getName ()Ljava/lang/String; Code	     LineNumberTable LocalVariableTable this %Lcom/spring65/phone/model/ModelPhone; setName (Ljava/lang/String;)V getManufacturer	   	  setManufacturer getPrice ()Ljava/lang/Integer;	    
main> [2018-01-08 14:12:17] [ResolverUtil] [250] [DEBUG] Checking to see if class com.spring65.phone.model.ModelPhone matches criteria [is assignable to Object] 
main> [2018-01-08 14:12:17] [ClassPathXmlApplicationContext] [488] [WARN] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'daophone': Injection of autowired dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Could not autowire field: private org.apache.ibatis.session.SqlSession com.spring65.phone.dao.DaoPhone.session; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSession' defined in URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml]: Cannot resolve reference to bean 'sqlSessionFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml]: Invocation of init method failed; nested exception is org.springframework.core.NestedIOException: Failed to parse config resource: class path resource [Configuration.xml]; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing SQL Mapper Configuration. Cause: java.io.IOException: Could not find resource /mapper/mapperPhone.xml 
main> [2018-01-08 14:14:15] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6ab7a896: startup date [Mon Jan 08 14:14:15 KST 2018]; root of context hierarchy 
main> [2018-01-08 14:14:16] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-08 14:14:16] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-08 14:14:16] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:14:16] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:14:16] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:14:16] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:14:16] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:14:16] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:14:16] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:14:16] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:14:16] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:14:16] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:14:16] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:14:16] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:14:16] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:14:16] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:14:16] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 14:14:16] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 14:14:16] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 14:14:16] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 14:14:16] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@5489c777] 
main> [2018-01-08 14:14:16] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-08 14:14:16] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-08 14:14:16] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-08 14:14:16] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-08 14:14:16] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-08 14:14:16] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-08 14:14:16] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-08 14:14:16] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-08 14:14:16] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-08 14:14:16] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-08 14:14:16] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-08 14:14:16] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 14:14:16] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 14:14:16] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 14:14:16] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 14:14:16] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 14:14:16] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 14:14:16] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 14:14:16] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 14:14:16] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 14:14:16] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 14:14:16] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 14:14:16] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:14:16] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:14:16] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 14:14:16] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 14:14:16] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 14:14:16] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:14:16] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:14:16] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 14:14:16] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 14:14:16] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 14:14:16] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:14:16] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:14:16] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 14:14:16] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 14:14:16] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 14:14:16] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 14:14:16] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 14:14:16] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:14:17] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1272753974, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:14:17] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1272753974, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:14:17] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1272753974, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:14:17] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:14:17] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1272753974, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:14:17] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1272753974, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:14:17] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1272753974, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:14:17] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:14:17] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 14:14:17] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@52a36910] 
main> [2018-01-08 14:14:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-08 14:14:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-08 14:14:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-08 14:14:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-08 14:14:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-08 14:14:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-08 14:14:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-08 14:14:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 14:14:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 14:14:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 14:14:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-08 14:14:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-08 14:14:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-08 14:14:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-08 14:14:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 14:14:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 14:14:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-08 14:14:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-08 14:14:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 14:14:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 14:14:17] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 14:14:17] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 14:14:17] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 14:14:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 14:14:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 14:14:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 14:14:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 14:14:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 14:14:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 14:14:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 14:14:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:14:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:14:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 14:14:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 14:14:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 14:14:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:14:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:14:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 14:14:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 14:14:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 14:14:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:14:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:14:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 14:14:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 14:14:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 14:14:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 14:14:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 14:14:17] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#1a1da881' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 14:14:17] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@22fba58c] 
main> [2018-01-08 14:14:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-08 14:14:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-08 14:14:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-08 14:14:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-08 14:14:17] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 14:14:17] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 14:14:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 14:14:17] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 14:14:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 14:14:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 14:14:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 14:14:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 14:14:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 14:14:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 14:14:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 14:14:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:14:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:14:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 14:14:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 14:14:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 14:14:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:14:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:14:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 14:14:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 14:14:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 14:14:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:14:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:14:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 14:14:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 14:14:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 14:14:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 14:14:17] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 14:14:17] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-08 14:14:17] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:14:17] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [570422884, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:14:17] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [570422884, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:14:17] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [570422884, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:14:17] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:14:17] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [570422884, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:14:17] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [570422884, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:14:17] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [570422884, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:14:17] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:14:17] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:14:17] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [843149630, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:14:17] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [843149630, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:14:17] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [843149630, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:14:17] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:14:17] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [843149630, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:14:17] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [843149630, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:14:17] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [843149630, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:14:17] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:14:17] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-08 14:14:17] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:14:17] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1113414982, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:14:17] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1113414982, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:14:17] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1113414982, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:14:17] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:14:17] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1113414982, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:14:17] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1113414982, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:14:17] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1113414982, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:14:17] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:14:17] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:14:17] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1476061571, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:14:17] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1476061571, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:14:17] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1476061571, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:14:17] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:14:17] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1476061571, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:14:17] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1476061571, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:14:17] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1476061571, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:14:17] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:14:17] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-08 14:14:17] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@6ab7a896: startup date [Mon Jan 08 14:14:15 KST 2018]; root of context hierarchy 
main> [2018-01-08 14:14:17] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:14:17] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1584688439, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:14:17] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1584688439, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:14:17] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1584688439, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:14:17] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:14:17] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1584688439, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:14:17] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1584688439, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:14:17] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1584688439, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:14:17] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:14:17] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@6ab7a896: startup date [Mon Jan 08 14:14:15 KST 2018]; root of context hierarchy 
main> [2018-01-08 14:14:17] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:14:17] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1605783571, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:14:17] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1605783571, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:14:17] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1605783571, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:14:17] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:14:17] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1605783571, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:14:17] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1605783571, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:14:17] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1605783571, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:14:17] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:14:17] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:14:17] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1845297077, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:14:17] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1845297077, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:14:17] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1845297077, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:14:17] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:14:17] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1845297077, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:14:17] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1845297077, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:14:17] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1845297077, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:14:17] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:14:17] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:14:17] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1980560788, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:14:17] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1980560788, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:14:17] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1980560788, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:14:17] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:14:17] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1980560788, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:14:17] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1980560788, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:14:17] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1980560788, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:14:17] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:14:17] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-01-08 14:14:17] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-01-08 14:14:17] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-01-08 14:14:17] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-01-08 14:14:17] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-01-08 14:14:17] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 14:14:17] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 14:14:17] [ResolverUtil] [94] [DEBUG] Reader entry: ModelPhone.class 
main> [2018-01-08 14:14:17] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 14:14:17] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-08 14:14:17] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-08 14:14:17] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 L  #com/spring65/phone/model/ModelPhone  java/lang/Object logger Lorg/slf4j/Logger; name Ljava/lang/String; manufacturer price Ljava/lang/Integer; getName ()Ljava/lang/String; Code	     LineNumberTable LocalVariableTable this %Lcom/spring65/phone/model/ModelPhone; setName (Ljava/lang/String;)V getManufacturer	   	  setManufacturer getPrice ()Ljava/lang/Integer;	    
main> [2018-01-08 14:14:17] [ResolverUtil] [250] [DEBUG] Checking to see if class com.spring65.phone.model.ModelPhone matches criteria [is assignable to Object] 
main> [2018-01-08 14:14:17] [ClassPathXmlApplicationContext] [488] [WARN] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'daophone': Injection of autowired dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Could not autowire field: private org.apache.ibatis.session.SqlSession com.spring65.phone.dao.DaoPhone.session; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSession' defined in URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml]: Cannot resolve reference to bean 'sqlSessionFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml]: Invocation of init method failed; nested exception is org.springframework.core.NestedIOException: Failed to parse config resource: class path resource [Configuration.xml]; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing SQL Mapper Configuration. Cause: java.io.IOException: Could not find resource /mapper/mapperPhone.xml 
main> [2018-01-08 14:17:17] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@501edcf1: startup date [Mon Jan 08 14:17:17 KST 2018]; root of context hierarchy 
main> [2018-01-08 14:17:17] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-08 14:17:18] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-08 14:17:20] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:17:20] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:17:20] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:17:20] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:17:20] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:17:20] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:17:20] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:17:20] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:17:20] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:17:20] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:17:20] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:17:20] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:17:20] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:17:20] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:17:20] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 14:17:20] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 14:17:20] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 14:17:20] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 14:17:20] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@7646731d] 
main> [2018-01-08 14:17:20] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-08 14:17:20] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-08 14:17:20] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-08 14:17:20] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-08 14:17:20] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-08 14:17:20] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-08 14:17:20] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-08 14:17:20] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-08 14:17:20] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-08 14:17:20] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-08 14:17:20] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-08 14:17:20] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 14:17:20] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 14:17:20] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 14:17:20] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 14:17:20] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 14:17:20] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 14:17:20] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 14:17:20] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 14:17:20] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 14:17:20] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 14:17:20] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 14:17:20] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:17:20] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:17:20] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 14:17:20] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 14:17:20] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 14:17:20] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:17:20] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:17:20] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 14:17:20] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 14:17:20] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:17:20] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 14:17:20] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:17:20] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 14:17:20] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 14:17:20] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 14:17:20] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 14:17:20] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 14:17:20] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:17:21] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:17:21] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:17:21] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:17:21] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:17:21] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:17:21] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:17:21] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:17:21] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:17:21] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 14:17:21] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@35f8a9d3] 
main> [2018-01-08 14:17:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-08 14:17:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-08 14:17:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-08 14:17:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-08 14:17:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-08 14:17:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-08 14:17:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-08 14:17:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 14:17:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 14:17:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 14:17:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-08 14:17:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-08 14:17:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-08 14:17:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-08 14:17:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 14:17:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 14:17:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-08 14:17:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-08 14:17:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 14:17:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 14:17:21] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 14:17:21] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 14:17:21] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 14:17:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 14:17:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 14:17:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 14:17:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 14:17:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 14:17:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 14:17:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 14:17:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:17:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:17:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 14:17:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 14:17:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 14:17:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:17:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:17:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 14:17:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 14:17:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:17:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 14:17:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:17:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 14:17:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 14:17:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 14:17:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 14:17:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 14:17:21] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#26fb628' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 14:17:21] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@5e840abf] 
main> [2018-01-08 14:17:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-08 14:17:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-08 14:17:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-08 14:17:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-08 14:17:21] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 14:17:21] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 14:17:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 14:17:21] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 14:17:21] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 14:17:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 14:17:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 14:17:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 14:17:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 14:17:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 14:17:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 14:17:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:17:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:17:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 14:17:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 14:17:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 14:17:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:17:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:17:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 14:17:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 14:17:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:17:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 14:17:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:17:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 14:17:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 14:17:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 14:17:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 14:17:21] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 14:17:21] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-08 14:17:21] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:17:21] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1532756055, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:17:21] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1532756055, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:17:21] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1532756055, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:17:21] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:17:21] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1532756055, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:17:21] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1532756055, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:17:21] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1532756055, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:17:21] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:17:21] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:17:21] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1003307628, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:17:21] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1003307628, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:17:21] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1003307628, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:17:21] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:17:21] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1003307628, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:17:21] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1003307628, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:17:21] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1003307628, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:17:21] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:17:21] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-08 14:17:21] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:17:21] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1399398408, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:17:21] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1399398408, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:17:21] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1399398408, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:17:21] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:17:21] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1399398408, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:17:21] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1399398408, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:17:21] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1399398408, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:17:21] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:17:21] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:17:21] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [128077491, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:17:21] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [128077491, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:17:21] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [128077491, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:17:21] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:17:21] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [128077491, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:17:21] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [128077491, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:17:21] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [128077491, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:17:21] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:17:21] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-08 14:17:23] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@501edcf1: startup date [Mon Jan 08 14:17:17 KST 2018]; root of context hierarchy 
main> [2018-01-08 14:17:23] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:17:23] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [750797656, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:17:23] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [750797656, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:17:23] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [750797656, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:17:23] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:17:23] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [750797656, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:17:23] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [750797656, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:17:23] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [750797656, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:17:23] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:17:23] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@501edcf1: startup date [Mon Jan 08 14:17:17 KST 2018]; root of context hierarchy 
main> [2018-01-08 14:17:23] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:17:23] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [17808347, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:17:23] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [17808347, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:17:23] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [17808347, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:17:23] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:17:23] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [17808347, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:17:23] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [17808347, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:17:23] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [17808347, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:17:23] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:17:23] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:17:23] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1257090913, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:17:23] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1257090913, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:17:23] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1257090913, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:17:23] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:17:23] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1257090913, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:17:23] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1257090913, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:17:23] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1257090913, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:17:23] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:17:23] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:17:23] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1428469551, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:17:23] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1428469551, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:17:23] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1428469551, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:17:23] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:17:23] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1428469551, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:17:23] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1428469551, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:17:23] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1428469551, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:17:23] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:17:23] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-01-08 14:17:23] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-01-08 14:17:23] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-01-08 14:17:23] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-01-08 14:17:23] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-01-08 14:17:23] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 14:17:23] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 14:17:24] [ResolverUtil] [94] [DEBUG] Reader entry: ModelPhone.class 
main> [2018-01-08 14:17:24] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 14:17:24] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-08 14:17:24] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-08 14:17:24] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 L  #com/spring65/phone/model/ModelPhone  java/lang/Object logger Lorg/slf4j/Logger; name Ljava/lang/String; manufacturer price Ljava/lang/Integer; getName ()Ljava/lang/String; Code	     LineNumberTable LocalVariableTable this %Lcom/spring65/phone/model/ModelPhone; setName (Ljava/lang/String;)V getManufacturer	   	  setManufacturer getPrice ()Ljava/lang/Integer;	    
main> [2018-01-08 14:17:24] [ResolverUtil] [250] [DEBUG] Checking to see if class com.spring65.phone.model.ModelPhone matches criteria [is assignable to Object] 
main> [2018-01-08 14:17:24] [ClassPathXmlApplicationContext] [488] [WARN] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'daophone': Injection of autowired dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Could not autowire field: private org.apache.ibatis.session.SqlSession com.spring65.phone.dao.DaoPhone.session; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSession' defined in URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml]: Cannot resolve reference to bean 'sqlSessionFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml]: Invocation of init method failed; nested exception is org.springframework.core.NestedIOException: Failed to parse config resource: class path resource [Configuration.xml]; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing SQL Mapper Configuration. Cause: java.io.IOException: Could not find resource /mapper/mapperPhone.xml 
main> [2018-01-08 14:18:27] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@2cbb3d47: startup date [Mon Jan 08 14:18:27 KST 2018]; root of context hierarchy 
main> [2018-01-08 14:18:27] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-08 14:18:28] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-08 14:18:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:18:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:18:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:18:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:18:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:18:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:18:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:18:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:18:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:18:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:18:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:18:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:18:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:18:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:18:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 14:18:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 14:18:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 14:18:28] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 14:18:28] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@6bc28a83] 
main> [2018-01-08 14:18:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-08 14:18:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-08 14:18:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-08 14:18:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-08 14:18:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-08 14:18:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-08 14:18:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-08 14:18:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-08 14:18:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-08 14:18:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-08 14:18:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-08 14:18:28] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 14:18:28] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 14:18:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 14:18:28] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 14:18:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 14:18:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 14:18:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 14:18:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 14:18:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:18:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:18:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 14:18:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 14:18:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:18:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 14:18:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:18:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 14:18:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 14:18:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 14:18:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 14:18:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 14:18:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 14:18:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 14:18:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:18:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:18:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 14:18:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 14:18:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 14:18:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 14:18:28] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:18:28] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1166361824, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:18:29] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1166361824, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1166361824, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1166361824, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:18:29] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1166361824, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1166361824, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:18:29] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:18:29] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 14:18:29] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@1c025cb] 
main> [2018-01-08 14:18:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-08 14:18:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-08 14:18:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-08 14:18:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-08 14:18:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-08 14:18:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-08 14:18:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-08 14:18:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 14:18:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 14:18:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 14:18:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-08 14:18:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-08 14:18:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-08 14:18:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 14:18:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 14:18:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 14:18:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 14:18:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-08 14:18:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-08 14:18:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-08 14:18:29] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 14:18:29] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 14:18:29] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 14:18:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 14:18:29] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#117e0fe5' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 14:18:29] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@512d4583] 
main> [2018-01-08 14:18:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-08 14:18:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-08 14:18:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-08 14:18:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-08 14:18:29] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 14:18:29] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 14:18:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 14:18:29] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 14:18:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 14:18:29] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [405950359, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:18:29] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [405950359, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [405950359, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [405950359, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:18:29] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [405950359, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [405950359, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:18:29] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [609879567, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:18:29] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [609879567, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [609879567, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [609879567, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:18:29] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [609879567, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [609879567, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:18:29] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:18:29] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1015659282, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:18:29] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1015659282, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1015659282, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1015659282, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:18:29] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1015659282, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1015659282, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:18:29] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1526866775, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:18:29] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1526866775, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1526866775, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1526866775, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:18:29] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1526866775, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1526866775, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:18:29] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:18:29] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-08 14:18:29] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@2cbb3d47: startup date [Mon Jan 08 14:18:27 KST 2018]; root of context hierarchy 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1075236033, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:18:29] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1075236033, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1075236033, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1075236033, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:18:29] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1075236033, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1075236033, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:18:29] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:18:29] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@2cbb3d47: startup date [Mon Jan 08 14:18:27 KST 2018]; root of context hierarchy 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [476868388, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:18:29] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [476868388, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [476868388, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [476868388, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:18:29] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [476868388, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [476868388, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:18:29] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1082684443, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:18:29] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1082684443, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1082684443, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1082684443, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:18:29] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1082684443, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1082684443, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:18:29] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1551103602, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:18:29] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1551103602, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1551103602, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1551103602, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:18:29] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1551103602, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1551103602, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:18:29] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:18:29] [SqlSessionFactoryBean] [362] [DEBUG] Property 'configLocation' not specified, using default MyBatis Configuration 
main> [2018-01-08 14:18:29] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [638580151, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:18:29] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [638580151, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [638580151, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [638580151, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:18:29] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [638580151, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [638580151, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:18:29] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:18:29] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicephone' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 14:18:29] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.spring65.phone.svr.ServicePhone@27b45ea] 
main> [2018-01-08 14:18:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.svr.ServicePhone.insertPhone(com.spring65.phone.model.ModelPhone) 
main> [2018-01-08 14:18:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public com.spring65.phone.model.ModelPhone com.spring65.phone.svr.ServicePhone.getPhoneOne(java.lang.String) 
main> [2018-01-08 14:18:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.svr.ServicePhone.insertPhoneList(java.util.List) 
main> [2018-01-08 14:18:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List com.spring65.phone.svr.ServicePhone.getPhoneList() 
main> [2018-01-08 14:18:29] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 14:18:29] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 14:18:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 14:18:29] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 14:18:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 14:18:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [271514713, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:18:29] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [271514713, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [271514713, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [271514713, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:18:29] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [271514713, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [271514713, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:18:29] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [150079886, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:18:29] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [150079886, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [150079886, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [150079886, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:18:29] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [150079886, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:18:29] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [150079886, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:18:29] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:19:35] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@2cbb3d47: startup date [Mon Jan 08 14:19:35 KST 2018]; root of context hierarchy 
main> [2018-01-08 14:19:35] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-08 14:19:35] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-08 14:19:35] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:19:35] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:19:35] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:19:35] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:19:35] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:19:35] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:19:35] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:19:35] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:19:35] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:19:35] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:19:35] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:19:35] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:19:35] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:19:35] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:19:35] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 14:19:35] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 14:19:35] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 14:19:35] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 14:19:35] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@24be2d9c] 
main> [2018-01-08 14:19:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-08 14:19:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-08 14:19:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-08 14:19:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-08 14:19:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-08 14:19:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-08 14:19:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-08 14:19:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-08 14:19:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-08 14:19:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-08 14:19:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-08 14:19:36] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 14:19:36] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 14:19:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 14:19:36] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 14:19:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 14:19:36] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:19:36] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1166361824, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:19:36] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1166361824, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:19:36] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1166361824, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:19:36] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:19:36] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1166361824, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:19:36] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1166361824, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:19:36] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1166361824, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:19:36] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:19:36] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 14:19:36] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@1c025cb] 
main> [2018-01-08 14:19:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-08 14:19:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-08 14:19:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-08 14:19:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-08 14:19:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-08 14:19:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-08 14:19:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-08 14:19:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 14:19:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 14:19:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 14:19:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-08 14:19:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-08 14:19:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-08 14:19:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-08 14:19:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-08 14:19:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-08 14:19:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 14:19:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 14:19:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 14:19:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 14:19:36] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 14:19:36] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 14:19:36] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 14:19:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 14:19:36] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#2a65bb85' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 14:19:36] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@512d4583] 
main> [2018-01-08 14:19:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-08 14:19:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-08 14:19:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-08 14:19:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-08 14:19:36] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 14:19:36] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 14:19:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 14:19:36] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 14:19:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 14:19:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 14:19:36] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-08 14:19:36] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:19:36] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [405950359, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:19:36] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [405950359, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:19:36] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [405950359, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:19:36] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:19:36] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [405950359, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:19:36] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [405950359, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:19:36] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [405950359, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:19:36] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:19:36] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:19:36] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [609879567, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:19:36] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [609879567, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:19:36] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [609879567, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:19:36] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:19:36] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [609879567, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:19:36] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [609879567, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:19:36] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [609879567, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:19:36] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:19:36] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-08 14:19:36] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:19:36] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1015659282, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:19:36] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1015659282, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:19:36] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1015659282, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:19:36] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:19:36] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1015659282, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:19:36] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1015659282, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:19:36] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1015659282, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:19:36] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:19:36] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:19:36] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1526866775, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:19:36] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1526866775, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:19:36] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1526866775, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:19:36] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:19:36] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1526866775, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:19:36] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1526866775, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:19:36] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1526866775, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:19:36] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:19:36] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-08 14:19:36] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@2cbb3d47: startup date [Mon Jan 08 14:19:35 KST 2018]; root of context hierarchy 
main> [2018-01-08 14:19:36] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:19:36] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1075236033, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:19:36] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1075236033, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:19:36] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1075236033, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:19:36] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:19:36] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1075236033, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:19:36] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1075236033, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:19:36] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1075236033, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:19:36] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:19:36] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@2cbb3d47: startup date [Mon Jan 08 14:19:35 KST 2018]; root of context hierarchy 
main> [2018-01-08 14:19:36] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:19:36] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [476868388, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:19:36] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [476868388, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:19:36] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [476868388, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:19:36] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:19:36] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [476868388, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:19:36] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [476868388, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:19:36] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [476868388, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:19:36] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:19:36] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:19:36] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1082684443, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:19:36] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1082684443, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:19:36] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1082684443, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:19:36] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:19:36] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1082684443, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:19:36] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1082684443, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:19:36] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1082684443, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:19:36] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:19:36] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:19:36] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1551103602, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:19:36] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1551103602, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:19:36] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1551103602, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:19:36] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:19:36] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1551103602, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:19:36] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1551103602, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:19:36] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1551103602, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:19:36] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:19:36] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-01-08 14:19:36] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-01-08 14:19:36] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-01-08 14:19:36] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-01-08 14:19:36] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-01-08 14:19:36] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 14:19:36] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 14:19:36] [ResolverUtil] [94] [DEBUG] Reader entry: ModelPhone.class 
main> [2018-01-08 14:19:36] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 14:19:36] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-08 14:19:36] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-08 14:19:36] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 L  #com/spring65/phone/model/ModelPhone  java/lang/Object logger Lorg/slf4j/Logger; name Ljava/lang/String; manufacturer price Ljava/lang/Integer; getName ()Ljava/lang/String; Code	     LineNumberTable LocalVariableTable this %Lcom/spring65/phone/model/ModelPhone; setName (Ljava/lang/String;)V getManufacturer	   	  setManufacturer getPrice ()Ljava/lang/Integer;	    
main> [2018-01-08 14:19:36] [ResolverUtil] [250] [DEBUG] Checking to see if class com.spring65.phone.model.ModelPhone matches criteria [is assignable to Object] 
main> [2018-01-08 14:19:36] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2018-01-08 14:19:36] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2018-01-08 14:19:37] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:19:37] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [2038020279, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:19:37] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [2038020279, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:19:37] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [2038020279, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:19:37] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:19:37] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [2038020279, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:19:37] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [2038020279, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:19:37] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [2038020279, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:19:37] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:19:37] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicephone' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 14:19:37] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.spring65.phone.svr.ServicePhone@4af70944] 
main> [2018-01-08 14:19:37] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.svr.ServicePhone.insertPhone(com.spring65.phone.model.ModelPhone) 
main> [2018-01-08 14:19:37] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public com.spring65.phone.model.ModelPhone com.spring65.phone.svr.ServicePhone.getPhoneOne(java.lang.String) 
main> [2018-01-08 14:19:37] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List com.spring65.phone.svr.ServicePhone.getPhoneList() 
main> [2018-01-08 14:19:37] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.svr.ServicePhone.insertPhoneList(java.util.List) 
main> [2018-01-08 14:19:37] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 14:19:37] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 14:19:37] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 14:19:37] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 14:19:37] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 14:19:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 14:19:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 14:19:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 14:19:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:19:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:19:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 14:19:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 14:19:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:19:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 14:19:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:19:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 14:19:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 14:19:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 14:19:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 14:19:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 14:19:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 14:19:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 14:19:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:19:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:19:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 14:19:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 14:19:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 14:19:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 14:19:37] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:19:37] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [864657274, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:19:37] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [864657274, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:19:37] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [864657274, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:19:37] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:19:37] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [864657274, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:19:37] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [864657274, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:19:37] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [864657274, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:19:37] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:19:37] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:19:37] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [2028088629, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:19:37] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [2028088629, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:19:37] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [2028088629, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:19:37] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:19:37] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [2028088629, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:19:37] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [2028088629, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:19:37] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [2028088629, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:19:37] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:19:37] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [com.spring65.phone.svr.ServicePhone.insertPhone]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException 
main> [2018-01-08 14:19:37] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [190868662, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:19:37] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [190868662, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:19:37] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2018-01-08 14:19:37] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@22587507] 
main> [2018-01-08 14:19:37] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [190868662, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2018-01-08 14:19:37] [insertPhone] [139] [DEBUG] ==>  Preparing: INSERT INTO TB_PHONE (name, manufacturer, price) VALUES (?, ?, ?)  
main> [2018-01-08 14:19:37] [insertPhone] [139] [DEBUG] ==> Parameters: Sunny(String), motorola(String), 19000(Integer) 
main> [2018-01-08 14:19:37] [insertPhone] [139] [DEBUG] <==    Updates: 1 
main> [2018-01-08 14:19:37] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@22587507] 
main> [2018-01-08 14:19:37] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@22587507] 
main> [2018-01-08 14:19:37] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@22587507] 
main> [2018-01-08 14:19:37] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@22587507] 
main> [2018-01-08 14:19:37] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:19:37] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [190868662, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:19:37] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [190868662, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:19:37] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:22:27] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@2cbb3d47: startup date [Mon Jan 08 14:22:27 KST 2018]; root of context hierarchy 
main> [2018-01-08 14:22:27] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-08 14:22:28] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-08 14:22:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:22:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:22:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:22:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:22:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:22:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:22:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:22:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:22:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:22:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:22:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:22:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:22:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:22:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 14:22:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 14:22:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 14:22:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 14:22:28] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 14:22:28] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@24be2d9c] 
main> [2018-01-08 14:22:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-08 14:22:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-08 14:22:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-08 14:22:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-08 14:22:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-08 14:22:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-08 14:22:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-08 14:22:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-08 14:22:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-08 14:22:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-08 14:22:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-08 14:22:28] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 14:22:28] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 14:22:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 14:22:28] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 14:22:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 14:22:28] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:22:28] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [761680655, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:22:28] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [761680655, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:22:28] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [761680655, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:22:28] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:22:28] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [761680655, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:22:28] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [761680655, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:22:28] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [761680655, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:22:28] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:22:28] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 14:22:28] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@68809cc7] 
main> [2018-01-08 14:22:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-08 14:22:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-08 14:22:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-08 14:22:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-08 14:22:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-08 14:22:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-08 14:22:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-08 14:22:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 14:22:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 14:22:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 14:22:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-08 14:22:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-08 14:22:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-08 14:22:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 14:22:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 14:22:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 14:22:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 14:22:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-08 14:22:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-08 14:22:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-08 14:22:28] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 14:22:28] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 14:22:28] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 14:22:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 14:22:28] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#2a65bb85' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 14:22:28] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@13cd7ea5] 
main> [2018-01-08 14:22:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-08 14:22:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-08 14:22:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-08 14:22:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-08 14:22:28] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 14:22:28] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 14:22:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 14:22:28] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 14:22:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 14:22:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 14:22:28] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-08 14:22:28] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:22:28] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1897368146, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:22:28] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1897368146, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:22:28] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1897368146, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:22:28] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:22:28] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1897368146, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:22:28] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1897368146, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:22:28] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1897368146, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:22:28] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:22:28] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:22:28] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [509858326, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:22:28] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [509858326, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:22:28] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [509858326, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:22:28] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:22:28] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [509858326, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:22:28] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [509858326, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:22:28] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [509858326, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:22:28] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:22:28] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-08 14:22:28] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:22:28] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1039759545, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:22:28] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1039759545, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:22:28] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1039759545, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:22:28] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:22:28] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1039759545, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:22:28] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1039759545, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:22:28] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1039759545, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:22:28] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:22:28] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:22:28] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1632300236, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:22:28] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1632300236, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:22:28] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1632300236, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:22:28] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:22:28] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1632300236, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:22:28] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1632300236, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:22:28] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1632300236, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:22:28] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:22:29] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-08 14:22:29] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@2cbb3d47: startup date [Mon Jan 08 14:22:27 KST 2018]; root of context hierarchy 
main> [2018-01-08 14:22:29] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:22:29] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [992955027, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:22:29] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [992955027, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:22:29] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [992955027, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:22:29] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:22:29] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [992955027, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:22:29] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [992955027, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:22:29] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [992955027, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:22:29] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:22:29] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@2cbb3d47: startup date [Mon Jan 08 14:22:27 KST 2018]; root of context hierarchy 
main> [2018-01-08 14:22:29] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:22:29] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [212416033, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:22:29] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [212416033, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:22:29] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [212416033, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:22:29] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:22:29] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [212416033, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:22:29] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [212416033, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:22:29] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [212416033, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:22:29] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:22:29] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:22:29] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [542895457, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:22:29] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [542895457, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:22:29] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [542895457, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:22:29] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:22:29] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [542895457, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:22:29] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [542895457, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:22:29] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [542895457, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:22:29] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:22:29] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:22:29] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [239824711, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:22:29] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [239824711, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:22:29] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [239824711, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:22:29] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:22:29] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [239824711, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:22:29] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [239824711, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:22:29] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [239824711, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:22:29] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:22:29] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-01-08 14:22:29] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-01-08 14:22:29] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-01-08 14:22:29] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-01-08 14:22:29] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-01-08 14:22:29] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 14:22:29] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 14:22:29] [ResolverUtil] [94] [DEBUG] Reader entry: ModelPhone.class 
main> [2018-01-08 14:22:29] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 14:22:29] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-08 14:22:29] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-08 14:22:29] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 L  #com/spring65/phone/model/ModelPhone  java/lang/Object logger Lorg/slf4j/Logger; name Ljava/lang/String; manufacturer price Ljava/lang/Integer; getName ()Ljava/lang/String; Code	     LineNumberTable LocalVariableTable this %Lcom/spring65/phone/model/ModelPhone; setName (Ljava/lang/String;)V getManufacturer	   	  setManufacturer getPrice ()Ljava/lang/Integer;	    
main> [2018-01-08 14:22:29] [ResolverUtil] [250] [DEBUG] Checking to see if class com.spring65.phone.model.ModelPhone matches criteria [is assignable to Object] 
main> [2018-01-08 14:22:29] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2018-01-08 14:22:29] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2018-01-08 14:22:29] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:22:29] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1332150216, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:22:29] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1332150216, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:22:29] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1332150216, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:22:29] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:22:29] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1332150216, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:22:29] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1332150216, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:22:29] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1332150216, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:22:29] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:22:29] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicephone' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 14:22:29] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.spring65.phone.svr.ServicePhone@44e93c1f] 
main> [2018-01-08 14:22:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.svr.ServicePhone.insertPhone(com.spring65.phone.model.ModelPhone) 
main> [2018-01-08 14:22:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public com.spring65.phone.model.ModelPhone com.spring65.phone.svr.ServicePhone.getPhoneOne(java.lang.String) 
main> [2018-01-08 14:22:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List com.spring65.phone.svr.ServicePhone.getPhoneList() 
main> [2018-01-08 14:22:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.svr.ServicePhone.insertPhoneList(java.util.List) 
main> [2018-01-08 14:22:29] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 14:22:29] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 14:22:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 14:22:29] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 14:22:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 14:22:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 14:22:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 14:22:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 14:22:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 14:22:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 14:22:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 14:22:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 14:22:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 14:22:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:22:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:22:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 14:22:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 14:22:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 14:22:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 14:22:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:22:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:22:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 14:22:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 14:22:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:22:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 14:22:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 14:22:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 14:22:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 14:22:29] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:22:29] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1682828548, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:22:29] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1682828548, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:22:29] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1682828548, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:22:29] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:22:29] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1682828548, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:22:29] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1682828548, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:22:29] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1682828548, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:22:29] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:22:29] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 14:22:29] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1942612200, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:22:29] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1942612200, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 14:22:29] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1942612200, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:22:29] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:22:29] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1942612200, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:22:29] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1942612200, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:22:29] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1942612200, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:22:29] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 14:22:29] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [com.spring65.phone.svr.ServicePhone.insertPhone]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException 
main> [2018-01-08 14:22:29] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [951819642, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 14:22:29] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [951819642, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 14:22:29] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2018-01-08 14:22:29] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b1f5012] 
main> [2018-01-08 14:22:29] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [951819642, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2018-01-08 14:22:29] [insertPhone] [139] [DEBUG] ==>  Preparing: INSERT INTO TB_PHONE (name, manufacturer, price) VALUES (?, ?, ?)  
main> [2018-01-08 14:22:29] [insertPhone] [139] [DEBUG] ==> Parameters: Sunny(String), motorola(String), 19000(Integer) 
main> [2018-01-08 14:22:29] [insertPhone] [139] [DEBUG] <==    Updates: 1 
main> [2018-01-08 14:22:29] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b1f5012] 
main> [2018-01-08 14:22:29] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b1f5012] 
main> [2018-01-08 14:22:29] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b1f5012] 
main> [2018-01-08 14:22:29] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b1f5012] 
main> [2018-01-08 14:22:29] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 14:22:29] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [951819642, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-08 14:22:29] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [951819642, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 14:22:29] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
