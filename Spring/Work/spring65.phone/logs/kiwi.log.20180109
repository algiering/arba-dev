main> [2018-01-09 10:00:28] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5ad851c9: startup date [Tue Jan 09 10:00:28 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:00:28] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-09 10:00:28] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-09 10:00:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:00:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:00:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:00:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:00:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:00:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:00:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:00:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:00:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:00:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:00:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:00:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:00:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:00:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:00:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:00:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:00:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:00:28] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:00:28] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@2f3c6ac4] 
main> [2018-01-09 10:00:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-09 10:00:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-09 10:00:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-09 10:00:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-09 10:00:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-09 10:00:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-09 10:00:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-09 10:00:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-09 10:00:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 10:00:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-09 10:00:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-09 10:00:29] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:00:29] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:00:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:00:29] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:00:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:00:29] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:00:29] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [922992444, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:00:29] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [922992444, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:00:29] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [922992444, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:00:29] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:00:29] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [922992444, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:00:29] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [922992444, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:00:29] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [922992444, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:00:29] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:00:29] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:00:29] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@1869f114] 
main> [2018-01-09 10:00:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-09 10:00:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-09 10:00:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-09 10:00:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 10:00:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-09 10:00:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-09 10:00:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-09 10:00:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:00:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:00:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:00:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-09 10:00:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:00:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:00:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 10:00:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 10:00:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-09 10:00:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:00:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:00:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-09 10:00:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-09 10:00:29] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:00:29] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:00:29] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:00:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:00:29] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#77192705' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:00:29] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@6872f9c8] 
main> [2018-01-09 10:00:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-09 10:00:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-09 10:00:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-09 10:00:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-09 10:00:29] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:00:29] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:00:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:00:29] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:00:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:00:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:00:29] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-09 10:00:29] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:00:29] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1566099239, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:00:29] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1566099239, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:00:29] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1566099239, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:00:29] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:00:29] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1566099239, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:00:29] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1566099239, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:00:29] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1566099239, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:00:29] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:00:29] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:00:29] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1378280450, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:00:29] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1378280450, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:00:29] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1378280450, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:00:29] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:00:29] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1378280450, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:00:29] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1378280450, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:00:29] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1378280450, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:00:29] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:00:29] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-09 10:00:29] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:00:29] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [123418227, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:00:29] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [123418227, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:00:29] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [123418227, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:00:29] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:00:29] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [123418227, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:00:29] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [123418227, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:00:29] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [123418227, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:00:29] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:00:29] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:00:29] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1287455719, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:00:29] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1287455719, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:00:29] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1287455719, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:00:29] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:00:29] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1287455719, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:00:29] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1287455719, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:00:29] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1287455719, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:00:29] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:00:29] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-09 10:00:29] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5ad851c9: startup date [Tue Jan 09 10:00:28 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:00:29] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:00:29] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [753692748, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:00:29] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [753692748, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:00:29] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [753692748, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:00:29] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:00:29] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [753692748, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:00:29] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [753692748, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:00:29] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [753692748, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:00:29] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:00:29] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5ad851c9: startup date [Tue Jan 09 10:00:28 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:00:29] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:00:29] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [19578363, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:00:29] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [19578363, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:00:29] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [19578363, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:00:29] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:00:29] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [19578363, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:00:29] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [19578363, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:00:29] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [19578363, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:00:29] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:00:29] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:00:29] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [783882192, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:00:29] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [783882192, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:00:29] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [783882192, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:00:29] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:00:29] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [783882192, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:00:29] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [783882192, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:00:29] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [783882192, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:00:29] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:00:29] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:00:29] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [593045830, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:00:29] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [593045830, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:00:29] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [593045830, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:00:29] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:00:29] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [593045830, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:00:29] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [593045830, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:00:29] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [593045830, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:00:29] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:00:29] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-01-09 10:00:29] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-01-09 10:00:29] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-01-09 10:00:29] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-01-09 10:00:29] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-01-09 10:00:29] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:00:29] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:00:30] [ResolverUtil] [94] [DEBUG] Reader entry: ModelPhone.class 
main> [2018-01-09 10:00:30] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:00:30] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 10:00:30] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 10:00:30] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 L  #com/spring65/phone/model/ModelPhone  java/lang/Object logger Lorg/slf4j/Logger; name Ljava/lang/String; manufacturer price Ljava/lang/Integer; getName ()Ljava/lang/String; Code	     LineNumberTable LocalVariableTable this %Lcom/spring65/phone/model/ModelPhone; setName (Ljava/lang/String;)V getManufacturer	   	  setManufacturer getPrice ()Ljava/lang/Integer;	    
main> [2018-01-09 10:00:30] [ResolverUtil] [250] [DEBUG] Checking to see if class com.spring65.phone.model.ModelPhone matches criteria [is assignable to Object] 
main> [2018-01-09 10:00:30] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2018-01-09 10:00:30] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2018-01-09 10:00:30] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:00:30] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1821581506, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:00:30] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1821581506, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:00:30] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1821581506, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:00:30] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:00:30] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1821581506, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:00:30] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1821581506, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:00:30] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1821581506, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:00:30] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:00:30] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicephone' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:00:30] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.spring65.phone.svr.ServicePhone@48840594] 
main> [2018-01-09 10:00:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.svr.ServicePhone.insertPhoneList(java.util.List) 
main> [2018-01-09 10:00:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.svr.ServicePhone.insertPhone(com.spring65.phone.model.ModelPhone) 
main> [2018-01-09 10:00:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public com.spring65.phone.model.ModelPhone com.spring65.phone.svr.ServicePhone.getPhoneOne(java.lang.String) 
main> [2018-01-09 10:00:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List com.spring65.phone.svr.ServicePhone.getPhoneList() 
main> [2018-01-09 10:00:30] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:00:30] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:00:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:00:30] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:00:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:00:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:00:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:00:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:00:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:00:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:00:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:00:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:00:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:00:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:00:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:00:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:00:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:00:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:00:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:00:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:00:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:00:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:00:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:00:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:00:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:00:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:00:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:00:30] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:00:30] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:00:30] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [560858993, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:00:30] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [560858993, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:00:30] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [560858993, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:00:30] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:00:30] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [560858993, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:00:30] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [560858993, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:00:30] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [560858993, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:00:30] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:00:30] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:00:30] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1730595945, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:00:30] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1730595945, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:00:30] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1730595945, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:00:30] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:00:30] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1730595945, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:00:30] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1730595945, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:00:30] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1730595945, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:00:30] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:00:30] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [com.spring65.phone.svr.ServicePhone.insertPhone]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException 
main> [2018-01-09 10:00:30] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [690051320, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:00:30] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [690051320, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:00:30] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2018-01-09 10:00:30] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d21202d] 
main> [2018-01-09 10:00:30] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [690051320, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2018-01-09 10:00:30] [insertPhone] [139] [DEBUG] ==>  Preparing: INSERT INTO TB_PHONE (name, manufacturer, price) VALUES (?, ?, ?)  
main> [2018-01-09 10:00:30] [insertPhone] [139] [DEBUG] ==> Parameters: Sunny(String), motorola(String), 19000(Integer) 
main> [2018-01-09 10:00:30] [insertPhone] [139] [DEBUG] <==    Updates: 1 
main> [2018-01-09 10:00:30] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d21202d] 
main> [2018-01-09 10:00:30] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d21202d] 
main> [2018-01-09 10:00:30] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d21202d] 
main> [2018-01-09 10:00:30] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d21202d] 
main> [2018-01-09 10:00:30] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:00:30] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [690051320, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:00:30] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [690051320, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:00:30] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:03:07] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5ad851c9: startup date [Tue Jan 09 10:03:07 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:03:07] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-09 10:03:07] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-09 10:03:07] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:03:07] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:03:07] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:03:07] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:03:07] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:03:07] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:03:07] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:03:07] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:03:07] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:03:07] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:03:07] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:03:07] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:03:07] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:03:07] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:03:07] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:03:07] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:03:07] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:03:07] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:03:07] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@2f3c6ac4] 
main> [2018-01-09 10:03:07] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-09 10:03:07] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-09 10:03:07] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-09 10:03:07] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-09 10:03:07] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-09 10:03:07] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-09 10:03:07] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-09 10:03:07] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-09 10:03:07] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-09 10:03:07] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 10:03:07] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-09 10:03:07] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:03:07] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:03:07] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:03:07] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:03:07] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:03:07] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:03:07] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:03:07] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:03:07] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:03:07] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:03:07] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:03:07] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:03:07] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:03:07] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:03:07] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:03:07] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:03:07] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:03:07] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:03:07] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:03:07] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:03:07] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:03:07] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:03:07] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:03:07] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:03:07] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:03:07] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:03:07] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:03:07] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:03:07] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [922992444, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:03:08] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [922992444, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [922992444, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [922992444, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:03:08] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [922992444, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [922992444, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:03:08] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:03:08] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:03:08] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@1869f114] 
main> [2018-01-09 10:03:08] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-09 10:03:08] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-09 10:03:08] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-09 10:03:08] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-09 10:03:08] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 10:03:08] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-09 10:03:08] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-09 10:03:08] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:03:08] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:03:08] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:03:08] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-09 10:03:08] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 10:03:08] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-09 10:03:08] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 10:03:08] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:03:08] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:03:08] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-09 10:03:08] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-09 10:03:08] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:03:08] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:03:08] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:03:08] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:03:08] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:03:08] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:03:08] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#77192705' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:03:08] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@6872f9c8] 
main> [2018-01-09 10:03:08] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-09 10:03:08] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-09 10:03:08] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-09 10:03:08] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-09 10:03:08] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:03:08] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:03:08] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:03:08] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:03:08] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:03:08] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1566099239, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:03:08] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1566099239, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1566099239, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1566099239, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:03:08] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1566099239, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1566099239, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:03:08] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1378280450, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:03:08] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1378280450, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1378280450, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1378280450, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:03:08] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1378280450, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1378280450, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:03:08] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:03:08] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [123418227, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:03:08] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [123418227, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [123418227, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [123418227, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:03:08] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [123418227, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [123418227, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:03:08] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1287455719, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:03:08] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1287455719, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1287455719, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1287455719, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:03:08] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1287455719, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1287455719, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:03:08] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:03:08] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-09 10:03:08] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5ad851c9: startup date [Tue Jan 09 10:03:07 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [753692748, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:03:08] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [753692748, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [753692748, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [753692748, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:03:08] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [753692748, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [753692748, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:03:08] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:03:08] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5ad851c9: startup date [Tue Jan 09 10:03:07 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [19578363, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:03:08] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [19578363, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [19578363, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [19578363, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:03:08] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [19578363, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [19578363, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:03:08] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [783882192, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:03:08] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [783882192, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [783882192, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [783882192, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:03:08] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [783882192, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [783882192, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:03:08] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [593045830, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:03:08] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [593045830, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [593045830, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [593045830, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:03:08] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [593045830, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [593045830, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:03:08] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:03:08] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-01-09 10:03:08] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-01-09 10:03:08] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-01-09 10:03:08] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-01-09 10:03:08] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-01-09 10:03:08] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:03:08] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:03:08] [ResolverUtil] [94] [DEBUG] Reader entry: ModelPhone.class 
main> [2018-01-09 10:03:08] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:03:08] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 10:03:08] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 10:03:08] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 L  #com/spring65/phone/model/ModelPhone  java/lang/Object logger Lorg/slf4j/Logger; name Ljava/lang/String; manufacturer price Ljava/lang/Integer; getName ()Ljava/lang/String; Code	     LineNumberTable LocalVariableTable this %Lcom/spring65/phone/model/ModelPhone; setName (Ljava/lang/String;)V getManufacturer	   	  setManufacturer getPrice ()Ljava/lang/Integer;	    
main> [2018-01-09 10:03:08] [ResolverUtil] [250] [DEBUG] Checking to see if class com.spring65.phone.model.ModelPhone matches criteria [is assignable to Object] 
main> [2018-01-09 10:03:08] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2018-01-09 10:03:08] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1821581506, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:03:08] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1821581506, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1821581506, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1821581506, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:03:08] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1821581506, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1821581506, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:03:08] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:03:08] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicephone' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:03:08] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.spring65.phone.svr.ServicePhone@48840594] 
main> [2018-01-09 10:03:08] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.svr.ServicePhone.insertPhone(com.spring65.phone.model.ModelPhone) 
main> [2018-01-09 10:03:08] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public com.spring65.phone.model.ModelPhone com.spring65.phone.svr.ServicePhone.getPhoneOne(java.lang.String) 
main> [2018-01-09 10:03:08] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List com.spring65.phone.svr.ServicePhone.getPhoneList() 
main> [2018-01-09 10:03:08] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.svr.ServicePhone.insertPhoneList(java.util.List) 
main> [2018-01-09 10:03:08] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:03:08] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:03:08] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:03:08] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:03:08] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:03:08] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [560858993, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:03:08] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [560858993, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [560858993, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [560858993, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:03:08] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [560858993, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [560858993, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:03:08] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1730595945, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:03:08] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1730595945, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1730595945, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1730595945, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:03:08] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1730595945, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1730595945, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:03:08] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [com.spring65.phone.svr.ServicePhone.insertPhone]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [690051320, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [690051320, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:03:08] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2018-01-09 10:03:08] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d21202d] 
main> [2018-01-09 10:03:08] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [690051320, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2018-01-09 10:03:08] [insertPhone] [139] [DEBUG] ==>  Preparing: INSERT INTO TB_PHONE (name, manufacturer, price) VALUES (?, ?, ?)  
main> [2018-01-09 10:03:08] [insertPhone] [139] [DEBUG] ==> Parameters: Sunny(String), motorola(String), 19000(Integer) 
main> [2018-01-09 10:03:08] [insertPhone] [139] [DEBUG] <==    Updates: 1 
main> [2018-01-09 10:03:08] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d21202d] 
main> [2018-01-09 10:03:08] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d21202d] 
main> [2018-01-09 10:03:08] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d21202d] 
main> [2018-01-09 10:03:08] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d21202d] 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [690051320, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:03:08] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [690051320, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:03:08] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:04:18] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5ad851c9: startup date [Tue Jan 09 10:04:18 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:04:18] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-09 10:04:18] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-09 10:04:19] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:04:19] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:04:19] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:04:19] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:04:19] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:04:19] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:04:19] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:04:19] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:04:19] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:04:19] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:04:19] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:04:19] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:04:19] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:04:19] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:04:19] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:04:19] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:04:19] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:04:19] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:04:19] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@2f3c6ac4] 
main> [2018-01-09 10:04:19] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-09 10:04:19] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-09 10:04:19] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-09 10:04:19] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-09 10:04:19] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 10:04:19] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-09 10:04:19] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-09 10:04:19] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-09 10:04:19] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-09 10:04:19] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-09 10:04:19] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-09 10:04:19] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:04:19] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:04:19] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:04:19] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:04:19] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:04:19] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:04:19] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [922992444, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:04:19] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [922992444, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:04:19] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [922992444, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:04:19] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:04:19] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [922992444, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:04:19] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [922992444, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:04:19] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [922992444, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:04:19] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:04:19] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:04:19] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@1869f114] 
main> [2018-01-09 10:04:19] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 10:04:19] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-09 10:04:19] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-09 10:04:19] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-09 10:04:19] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-09 10:04:19] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-09 10:04:19] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-09 10:04:19] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:04:19] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:04:19] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:04:19] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-09 10:04:19] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-09 10:04:19] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 10:04:19] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 10:04:19] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-09 10:04:19] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-09 10:04:19] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:04:19] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:04:19] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:04:19] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:04:19] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:04:19] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:04:19] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:04:19] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:04:19] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#77192705' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:04:19] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@6872f9c8] 
main> [2018-01-09 10:04:19] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-09 10:04:19] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-09 10:04:19] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-09 10:04:19] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-09 10:04:19] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:04:19] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:04:19] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:04:19] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:04:19] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:04:19] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:04:19] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-09 10:04:19] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:04:19] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1566099239, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:04:19] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1566099239, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:04:19] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1566099239, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:04:19] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:04:19] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1566099239, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:04:19] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1566099239, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:04:19] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1566099239, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:04:19] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:04:19] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:04:19] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1378280450, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:04:19] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1378280450, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:04:19] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1378280450, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:04:19] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:04:19] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1378280450, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:04:19] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1378280450, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:04:19] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1378280450, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:04:19] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:04:19] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-09 10:04:19] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:04:19] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [123418227, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:04:19] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [123418227, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:04:19] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [123418227, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:04:19] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:04:19] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [123418227, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:04:19] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [123418227, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:04:19] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [123418227, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:04:19] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:04:19] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:04:19] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1287455719, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:04:19] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1287455719, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:04:19] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1287455719, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:04:19] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:04:19] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1287455719, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:04:19] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1287455719, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:04:19] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1287455719, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:04:19] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:04:19] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-09 10:04:19] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5ad851c9: startup date [Tue Jan 09 10:04:18 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:04:19] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:04:19] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [753692748, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:04:19] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [753692748, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:04:19] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [753692748, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:04:19] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:04:19] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [753692748, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:04:19] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [753692748, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:04:19] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [753692748, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:04:19] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:04:19] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5ad851c9: startup date [Tue Jan 09 10:04:18 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:04:19] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:04:19] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [19578363, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:04:19] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [19578363, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:04:19] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [19578363, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:04:19] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:04:19] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [19578363, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:04:19] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [19578363, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:04:19] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [19578363, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:04:19] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:04:19] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:04:19] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [783882192, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:04:19] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [783882192, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:04:19] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [783882192, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:04:19] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:04:19] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [783882192, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:04:19] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [783882192, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:04:19] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [783882192, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:04:19] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:04:19] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:04:19] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [593045830, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:04:19] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [593045830, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:04:19] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [593045830, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:04:19] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:04:19] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [593045830, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:04:19] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [593045830, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:04:19] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [593045830, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:04:19] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:04:20] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-01-09 10:04:20] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-01-09 10:04:20] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-01-09 10:04:20] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-01-09 10:04:20] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-01-09 10:04:20] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:04:20] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:04:20] [ResolverUtil] [94] [DEBUG] Reader entry: ModelPhone.class 
main> [2018-01-09 10:04:20] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:04:20] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 10:04:20] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 10:04:20] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 L  #com/spring65/phone/model/ModelPhone  java/lang/Object logger Lorg/slf4j/Logger; name Ljava/lang/String; manufacturer price Ljava/lang/Integer; getName ()Ljava/lang/String; Code	     LineNumberTable LocalVariableTable this %Lcom/spring65/phone/model/ModelPhone; setName (Ljava/lang/String;)V getManufacturer	   	  setManufacturer getPrice ()Ljava/lang/Integer;	    
main> [2018-01-09 10:04:20] [ResolverUtil] [250] [DEBUG] Checking to see if class com.spring65.phone.model.ModelPhone matches criteria [is assignable to Object] 
main> [2018-01-09 10:04:20] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2018-01-09 10:04:20] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2018-01-09 10:04:20] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:04:20] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1821581506, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:04:20] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1821581506, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:04:20] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1821581506, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:04:20] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:04:20] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1821581506, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:04:20] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1821581506, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:04:20] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1821581506, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:04:20] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:04:20] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicephone' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:04:20] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.spring65.phone.svr.ServicePhoneTest@48840594] 
main> [2018-01-09 10:04:20] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.svr.ServicePhoneTest.insertPhone(com.spring65.phone.model.ModelPhone) 
main> [2018-01-09 10:04:20] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public com.spring65.phone.model.ModelPhone com.spring65.phone.svr.ServicePhoneTest.getPhoneOne(java.lang.String) 
main> [2018-01-09 10:04:20] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List com.spring65.phone.svr.ServicePhoneTest.getPhoneList() 
main> [2018-01-09 10:04:20] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.svr.ServicePhoneTest.insertPhoneList(java.util.List) 
main> [2018-01-09 10:04:20] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:04:20] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:04:20] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:04:20] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:04:20] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:04:20] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:04:20] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:04:20] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:04:20] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:04:20] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:04:20] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:04:20] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:04:20] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:04:20] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:04:20] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:04:20] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:04:20] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:04:20] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:04:20] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:04:20] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:04:20] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:04:20] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:04:20] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:04:20] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:04:20] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:04:20] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:04:20] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:04:20] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:04:20] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:04:20] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [560858993, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:04:20] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [560858993, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:04:20] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [560858993, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:04:20] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:04:20] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [560858993, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:04:20] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [560858993, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:04:20] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [560858993, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:04:20] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:04:20] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:04:20] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1730595945, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:04:20] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1730595945, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:04:20] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1730595945, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:04:20] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:04:20] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1730595945, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:04:20] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1730595945, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:04:20] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1730595945, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:04:20] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:04:20] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [com.spring65.phone.svr.ServicePhoneTest.insertPhone]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException 
main> [2018-01-09 10:04:20] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [690051320, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:04:20] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [690051320, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:04:20] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2018-01-09 10:04:20] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d21202d] 
main> [2018-01-09 10:04:20] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [690051320, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2018-01-09 10:04:20] [insertPhone] [139] [DEBUG] ==>  Preparing: INSERT INTO TB_PHONE (name, manufacturer, price) VALUES (?, ?, ?)  
main> [2018-01-09 10:04:20] [insertPhone] [139] [DEBUG] ==> Parameters: Sunny(String), motorola(String), 19000(Integer) 
main> [2018-01-09 10:04:20] [insertPhone] [139] [DEBUG] <==    Updates: 1 
main> [2018-01-09 10:04:20] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d21202d] 
main> [2018-01-09 10:04:20] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d21202d] 
main> [2018-01-09 10:04:20] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d21202d] 
main> [2018-01-09 10:04:20] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d21202d] 
main> [2018-01-09 10:04:20] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:04:20] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [690051320, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:04:20] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [690051320, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:04:20] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:04:57] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5ad851c9: startup date [Tue Jan 09 10:04:57 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:04:57] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-09 10:04:57] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-09 10:04:58] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:04:58] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:04:58] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:04:58] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:04:58] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:04:58] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:04:58] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:04:58] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:04:58] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:04:58] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:04:58] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:04:58] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:04:58] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:04:58] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:04:58] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:04:58] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:04:58] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:04:58] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:04:58] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@2f3c6ac4] 
main> [2018-01-09 10:04:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-09 10:04:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-09 10:04:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-09 10:04:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-09 10:04:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-09 10:04:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 10:04:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-09 10:04:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-09 10:04:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-09 10:04:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-09 10:04:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-09 10:04:58] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:04:58] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:04:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:04:58] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:04:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:04:58] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:04:58] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [922992444, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:04:58] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [922992444, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:04:58] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [922992444, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:04:58] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:04:58] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [922992444, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:04:58] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [922992444, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:04:58] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [922992444, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:04:58] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:04:58] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:04:58] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@1869f114] 
main> [2018-01-09 10:04:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 10:04:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-09 10:04:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-09 10:04:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-09 10:04:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-09 10:04:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-09 10:04:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-09 10:04:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:04:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:04:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:04:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-09 10:04:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-09 10:04:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 10:04:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 10:04:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-09 10:04:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-09 10:04:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:04:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:04:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:04:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:04:58] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:04:58] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:04:58] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:04:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:04:58] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#77192705' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:04:58] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@6872f9c8] 
main> [2018-01-09 10:04:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-09 10:04:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-09 10:04:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-09 10:04:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-09 10:04:58] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:04:58] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:04:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:04:58] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:04:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:04:58] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:04:58] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-09 10:04:58] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:04:58] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1566099239, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:04:58] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1566099239, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:04:58] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1566099239, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:04:58] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:04:58] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1566099239, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:04:58] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1566099239, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:04:58] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1566099239, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:04:58] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:04:58] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:04:58] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1378280450, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:04:58] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1378280450, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:04:58] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1378280450, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:04:58] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:04:58] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1378280450, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:04:58] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1378280450, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:04:58] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1378280450, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:04:58] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:04:58] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-09 10:04:58] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:04:58] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [123418227, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:04:58] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [123418227, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:04:58] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [123418227, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:04:58] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:04:58] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [123418227, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:04:58] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [123418227, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:04:58] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [123418227, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:04:58] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:04:58] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:04:58] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1287455719, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:04:58] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1287455719, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:04:58] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1287455719, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:04:58] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:04:58] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1287455719, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:04:58] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1287455719, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:04:58] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1287455719, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:04:58] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:04:58] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-09 10:04:59] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5ad851c9: startup date [Tue Jan 09 10:04:57 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:04:59] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:04:59] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [753692748, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:04:59] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [753692748, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:04:59] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [753692748, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:04:59] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:04:59] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [753692748, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:04:59] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [753692748, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:04:59] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [753692748, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:04:59] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:04:59] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5ad851c9: startup date [Tue Jan 09 10:04:57 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:04:59] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:04:59] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [19578363, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:04:59] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [19578363, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:04:59] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [19578363, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:04:59] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:04:59] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [19578363, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:04:59] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [19578363, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:04:59] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [19578363, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:04:59] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:04:59] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:04:59] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [783882192, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:04:59] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [783882192, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:04:59] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [783882192, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:04:59] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:04:59] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [783882192, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:04:59] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [783882192, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:04:59] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [783882192, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:04:59] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:04:59] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:04:59] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [593045830, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:04:59] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [593045830, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:04:59] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [593045830, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:04:59] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:04:59] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [593045830, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:04:59] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [593045830, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:04:59] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [593045830, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:04:59] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:04:59] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-01-09 10:04:59] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-01-09 10:04:59] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-01-09 10:04:59] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-01-09 10:04:59] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-01-09 10:04:59] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:04:59] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:04:59] [ResolverUtil] [94] [DEBUG] Reader entry: ModelPhone.class 
main> [2018-01-09 10:04:59] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:04:59] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 10:04:59] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 10:04:59] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 L  #com/spring65/phone/model/ModelPhone  java/lang/Object logger Lorg/slf4j/Logger; name Ljava/lang/String; manufacturer price Ljava/lang/Integer; getName ()Ljava/lang/String; Code	     LineNumberTable LocalVariableTable this %Lcom/spring65/phone/model/ModelPhone; setName (Ljava/lang/String;)V getManufacturer	   	  setManufacturer getPrice ()Ljava/lang/Integer;	    
main> [2018-01-09 10:04:59] [ResolverUtil] [250] [DEBUG] Checking to see if class com.spring65.phone.model.ModelPhone matches criteria [is assignable to Object] 
main> [2018-01-09 10:04:59] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2018-01-09 10:04:59] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2018-01-09 10:04:59] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:04:59] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1821581506, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:04:59] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1821581506, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:04:59] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1821581506, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:04:59] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:04:59] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1821581506, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:04:59] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1821581506, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:04:59] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1821581506, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:04:59] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:04:59] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicephone' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:04:59] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.spring65.phone.svr.ServicePhone@48840594] 
main> [2018-01-09 10:04:59] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.svr.ServicePhone.insertPhone(com.spring65.phone.model.ModelPhone) 
main> [2018-01-09 10:04:59] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public com.spring65.phone.model.ModelPhone com.spring65.phone.svr.ServicePhone.getPhoneOne(java.lang.String) 
main> [2018-01-09 10:04:59] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List com.spring65.phone.svr.ServicePhone.getPhoneList() 
main> [2018-01-09 10:04:59] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.svr.ServicePhone.insertPhoneList(java.util.List) 
main> [2018-01-09 10:04:59] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:04:59] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:04:59] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:04:59] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:04:59] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:04:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:04:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:04:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:04:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:04:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:04:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:04:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:04:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:04:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:04:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:04:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:04:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:04:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:04:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:04:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:04:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:04:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:04:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:04:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:04:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:04:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:04:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:04:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:04:59] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:04:59] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [560858993, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:04:59] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [560858993, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:04:59] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [560858993, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:04:59] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:04:59] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [560858993, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:04:59] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [560858993, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:04:59] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [560858993, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:04:59] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:04:59] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:04:59] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1730595945, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:04:59] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1730595945, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:04:59] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1730595945, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:04:59] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:04:59] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1730595945, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:04:59] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1730595945, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:04:59] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1730595945, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:04:59] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:04:59] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [com.spring65.phone.svr.ServicePhone.insertPhone]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException 
main> [2018-01-09 10:04:59] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [690051320, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:04:59] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [690051320, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:04:59] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2018-01-09 10:04:59] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d21202d] 
main> [2018-01-09 10:04:59] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [690051320, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2018-01-09 10:04:59] [insertPhone] [139] [DEBUG] ==>  Preparing: INSERT INTO TB_PHONE (name, manufacturer, price) VALUES (?, ?, ?)  
main> [2018-01-09 10:04:59] [insertPhone] [139] [DEBUG] ==> Parameters: Sunny(String), motorola(String), 19000(Integer) 
main> [2018-01-09 10:04:59] [insertPhone] [139] [DEBUG] <==    Updates: 1 
main> [2018-01-09 10:04:59] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d21202d] 
main> [2018-01-09 10:04:59] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d21202d] 
main> [2018-01-09 10:04:59] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d21202d] 
main> [2018-01-09 10:04:59] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d21202d] 
main> [2018-01-09 10:04:59] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:04:59] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [690051320, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:04:59] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [690051320, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:04:59] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:05:13] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5ad851c9: startup date [Tue Jan 09 10:05:13 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:05:13] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-09 10:05:13] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-09 10:05:13] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:05:13] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:05:13] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:05:13] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:05:13] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:05:13] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:05:13] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:05:13] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:05:13] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:05:13] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:05:13] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:05:13] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:05:13] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:05:13] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:05:13] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:05:13] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:05:13] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:05:13] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:05:13] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@2f3c6ac4] 
main> [2018-01-09 10:05:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-09 10:05:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-09 10:05:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-09 10:05:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-09 10:05:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-09 10:05:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-09 10:05:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-09 10:05:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-09 10:05:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 10:05:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-09 10:05:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-09 10:05:14] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:05:14] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:05:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:05:14] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:05:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1530870688, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:05:14] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1530870688, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1530870688, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1530870688, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:05:14] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1530870688, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1530870688, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:05:14] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:05:14] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:05:14] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@18a645fd] 
main> [2018-01-09 10:05:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-09 10:05:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 10:05:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-09 10:05:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-09 10:05:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-09 10:05:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-09 10:05:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-09 10:05:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:05:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:05:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:05:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-09 10:05:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-09 10:05:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-09 10:05:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 10:05:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-09 10:05:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 10:05:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:05:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:05:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:05:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:05:14] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:05:14] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:05:14] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:05:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:05:14] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#77192705' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:05:14] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@bdecc21] 
main> [2018-01-09 10:05:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-09 10:05:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-09 10:05:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-09 10:05:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-09 10:05:14] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:05:14] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:05:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:05:14] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:05:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:05:14] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [973692608, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:05:14] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [973692608, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [973692608, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [973692608, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:05:14] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [973692608, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [973692608, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:05:14] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [412835761, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:05:14] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [412835761, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [412835761, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [412835761, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:05:14] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [412835761, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [412835761, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:05:14] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:05:14] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [219812012, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:05:14] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [219812012, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [219812012, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [219812012, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:05:14] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [219812012, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [219812012, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:05:14] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [2053349061, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:05:14] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [2053349061, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [2053349061, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [2053349061, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:05:14] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [2053349061, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [2053349061, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:05:14] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:05:14] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-09 10:05:14] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5ad851c9: startup date [Tue Jan 09 10:05:13 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [753692748, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:05:14] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [753692748, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [753692748, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [753692748, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:05:14] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [753692748, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [753692748, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:05:14] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:05:14] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5ad851c9: startup date [Tue Jan 09 10:05:13 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [19578363, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:05:14] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [19578363, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [19578363, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [19578363, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:05:14] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [19578363, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [19578363, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:05:14] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [783882192, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:05:14] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [783882192, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [783882192, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [783882192, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:05:14] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [783882192, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [783882192, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:05:14] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [593045830, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:05:14] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [593045830, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [593045830, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [593045830, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:05:14] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [593045830, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [593045830, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:05:14] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:05:14] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-01-09 10:05:14] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-01-09 10:05:14] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-01-09 10:05:14] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-01-09 10:05:14] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-01-09 10:05:14] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:05:14] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:05:14] [ResolverUtil] [94] [DEBUG] Reader entry: ModelPhone.class 
main> [2018-01-09 10:05:14] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:05:14] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 10:05:14] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 10:05:14] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 L  #com/spring65/phone/model/ModelPhone  java/lang/Object logger Lorg/slf4j/Logger; name Ljava/lang/String; manufacturer price Ljava/lang/Integer; getName ()Ljava/lang/String; Code	     LineNumberTable LocalVariableTable this %Lcom/spring65/phone/model/ModelPhone; setName (Ljava/lang/String;)V getManufacturer	   	  setManufacturer getPrice ()Ljava/lang/Integer;	    
main> [2018-01-09 10:05:14] [ResolverUtil] [250] [DEBUG] Checking to see if class com.spring65.phone.model.ModelPhone matches criteria [is assignable to Object] 
main> [2018-01-09 10:05:14] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2018-01-09 10:05:14] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1821581506, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:05:14] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1821581506, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1821581506, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1821581506, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:05:14] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1821581506, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1821581506, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:05:14] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:05:14] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicephone' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:05:14] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.spring65.phone.svr.ServicePhone@48840594] 
main> [2018-01-09 10:05:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.svr.ServicePhone.insertPhone(com.spring65.phone.model.ModelPhone) 
main> [2018-01-09 10:05:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public com.spring65.phone.model.ModelPhone com.spring65.phone.svr.ServicePhone.getPhoneOne(java.lang.String) 
main> [2018-01-09 10:05:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.svr.ServicePhone.insertPhoneList(java.util.List) 
main> [2018-01-09 10:05:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List com.spring65.phone.svr.ServicePhone.getPhoneList() 
main> [2018-01-09 10:05:14] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:05:14] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:05:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:05:14] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:05:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:05:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [560858993, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:05:14] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [560858993, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [560858993, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [560858993, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:05:14] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [560858993, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [560858993, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:05:14] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1730595945, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:05:14] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1730595945, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1730595945, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1730595945, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:05:14] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1730595945, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1730595945, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:05:14] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [com.spring65.phone.svr.ServicePhone.insertPhone]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [690051320, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:05:14] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [690051320, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:05:14] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2018-01-09 10:05:14] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d21202d] 
main> [2018-01-09 10:05:14] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [690051320, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2018-01-09 10:05:14] [insertPhone] [139] [DEBUG] ==>  Preparing: INSERT INTO TB_PHONE (name, manufacturer, price) VALUES (?, ?, ?)  
main> [2018-01-09 10:05:15] [insertPhone] [139] [DEBUG] ==> Parameters: Sunny(String), motorola(String), 19000(Integer) 
main> [2018-01-09 10:05:15] [insertPhone] [139] [DEBUG] <==    Updates: 1 
main> [2018-01-09 10:05:15] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d21202d] 
main> [2018-01-09 10:05:15] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d21202d] 
main> [2018-01-09 10:05:15] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d21202d] 
main> [2018-01-09 10:05:15] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d21202d] 
main> [2018-01-09 10:05:15] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:05:15] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [690051320, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:05:15] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [690051320, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:05:15] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:14:49] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6ab7a896: startup date [Tue Jan 09 10:14:49 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:14:49] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-09 10:14:49] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-09 10:14:49] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:14:49] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:14:49] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:14:49] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:14:49] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:14:49] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:14:49] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:14:49] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:14:49] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:14:49] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:14:49] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:14:49] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:14:49] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:14:49] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:14:49] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:14:49] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:14:49] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:14:49] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:14:49] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@3676ac27] 
main> [2018-01-09 10:14:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-09 10:14:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-09 10:14:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-09 10:14:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-09 10:14:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-09 10:14:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 10:14:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-09 10:14:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-09 10:14:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-09 10:14:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-09 10:14:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-09 10:14:49] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:14:49] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:14:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:14:49] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:14:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:14:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:14:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:14:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:14:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:14:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:14:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:14:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:14:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:14:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:14:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:14:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:14:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:14:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:14:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:14:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:14:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:14:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:14:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:14:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:14:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:14:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:14:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:14:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:14:49] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1243350866, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:14:50] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1243350866, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1243350866, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1243350866, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:14:50] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1243350866, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1243350866, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:14:50] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:14:50] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:14:50] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@21f9277b] 
main> [2018-01-09 10:14:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 10:14:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-09 10:14:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-09 10:14:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-09 10:14:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-09 10:14:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-09 10:14:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-09 10:14:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:14:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:14:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:14:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-09 10:14:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 10:14:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-09 10:14:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 10:14:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:14:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:14:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-09 10:14:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-09 10:14:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:14:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:14:50] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:14:50] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:14:50] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:14:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:14:50] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#5b970f7' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:14:50] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@1d782abe] 
main> [2018-01-09 10:14:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-09 10:14:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-09 10:14:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-09 10:14:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-09 10:14:50] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:14:50] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:14:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:14:50] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:14:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:14:50] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [420993295, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:14:50] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [420993295, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [420993295, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [420993295, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:14:50] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [420993295, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [420993295, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:14:50] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1753259207, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:14:50] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1753259207, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1753259207, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1753259207, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:14:50] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1753259207, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1753259207, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:14:50] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:14:50] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1106468732, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:14:50] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1106468732, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1106468732, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1106468732, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:14:50] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1106468732, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1106468732, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:14:50] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [670517043, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:14:50] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [670517043, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [670517043, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [670517043, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:14:50] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [670517043, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [670517043, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:14:50] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:14:50] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-09 10:14:50] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@6ab7a896: startup date [Tue Jan 09 10:14:49 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1847301137, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:14:50] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1847301137, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1847301137, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1847301137, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:14:50] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1847301137, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1847301137, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:14:50] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:14:50] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@6ab7a896: startup date [Tue Jan 09 10:14:49 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [59382310, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:14:50] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [59382310, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [59382310, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [59382310, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:14:50] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [59382310, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [59382310, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:14:50] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [407877261, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:14:50] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [407877261, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [407877261, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [407877261, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:14:50] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [407877261, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [407877261, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:14:50] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [178342381, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:14:50] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [178342381, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [178342381, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [178342381, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:14:50] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [178342381, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [178342381, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:14:50] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:14:50] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-01-09 10:14:50] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-01-09 10:14:50] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-01-09 10:14:50] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-01-09 10:14:50] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-01-09 10:14:50] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:14:50] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:14:50] [ResolverUtil] [94] [DEBUG] Reader entry: ModelPhone.class 
main> [2018-01-09 10:14:50] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:14:50] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 10:14:50] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 10:14:50] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 L  #com/spring65/phone/model/ModelPhone  java/lang/Object logger Lorg/slf4j/Logger; name Ljava/lang/String; manufacturer price Ljava/lang/Integer; getName ()Ljava/lang/String; Code	     LineNumberTable LocalVariableTable this %Lcom/spring65/phone/model/ModelPhone; setName (Ljava/lang/String;)V getManufacturer	   	  setManufacturer getPrice ()Ljava/lang/Integer;	    
main> [2018-01-09 10:14:50] [ResolverUtil] [250] [DEBUG] Checking to see if class com.spring65.phone.model.ModelPhone matches criteria [is assignable to Object] 
main> [2018-01-09 10:14:50] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2018-01-09 10:14:50] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1216611732, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:14:50] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1216611732, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1216611732, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1216611732, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:14:50] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1216611732, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1216611732, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:14:50] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:14:50] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicephone' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:14:50] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.spring65.phone.svr.ServicePhone@124ac145] 
main> [2018-01-09 10:14:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List com.spring65.phone.svr.ServicePhone.getPhoneList() 
main> [2018-01-09 10:14:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public com.spring65.phone.model.ModelPhone com.spring65.phone.svr.ServicePhone.getPhoneOne(java.lang.String) 
main> [2018-01-09 10:14:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.svr.ServicePhone.insertPhoneList(java.util.List) 
main> [2018-01-09 10:14:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.svr.ServicePhone.insertPhone(com.spring65.phone.model.ModelPhone) 
main> [2018-01-09 10:14:50] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:14:50] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:14:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:14:50] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:14:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:14:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [449105069, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:14:50] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [449105069, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [449105069, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [449105069, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:14:50] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [449105069, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [449105069, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:14:50] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1659452474, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:14:50] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1659452474, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1659452474, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1659452474, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:14:50] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1659452474, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1659452474, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:14:50] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [com.spring65.phone.svr.ServicePhone.getPhoneList]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1390430007, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:14:50] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1390430007, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:14:50] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1390430007, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:14:50] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2018-01-09 10:14:50] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@587a1cfb] 
main> [2018-01-09 10:14:50] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1390430007, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2018-01-09 10:14:51] [selectPhoneList] [139] [DEBUG] ==>  Preparing: SELECT * FROM TB_Phone  
main> [2018-01-09 10:14:51] [selectPhoneList] [139] [DEBUG] ==> Parameters:  
main> [2018-01-09 10:14:51] [selectPhoneList] [139] [DEBUG] <==      Total: 1 
main> [2018-01-09 10:14:51] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@587a1cfb] 
main> [2018-01-09 10:14:51] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@587a1cfb] 
main> [2018-01-09 10:14:51] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@587a1cfb] 
main> [2018-01-09 10:14:51] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@587a1cfb] 
main> [2018-01-09 10:14:51] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:14:51] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1390430007, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:14:51] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1390430007, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:14:51] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1390430007, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:14:51] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:26:09] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6ab7a896: startup date [Tue Jan 09 10:26:09 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:26:09] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-09 10:26:09] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-09 10:26:09] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:26:09] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:26:09] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:26:09] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:26:09] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:26:09] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:26:09] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:26:09] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:26:09] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:26:09] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:26:09] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:26:09] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:26:09] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:26:09] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:26:09] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:26:09] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:26:09] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:26:09] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:26:09] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@3676ac27] 
main> [2018-01-09 10:26:09] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-09 10:26:09] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-09 10:26:09] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-09 10:26:09] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-09 10:26:09] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 10:26:09] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-09 10:26:09] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-09 10:26:09] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-09 10:26:09] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-09 10:26:09] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-09 10:26:09] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-09 10:26:09] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:26:09] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:26:09] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:26:09] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:26:09] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:26:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:26:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:26:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:26:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:26:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:26:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:26:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:26:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:26:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:26:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:26:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:26:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:26:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:26:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:26:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:26:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:26:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:26:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:26:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:26:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:26:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:26:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:26:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:26:09] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1243350866, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:26:10] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1243350866, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1243350866, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1243350866, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:26:10] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1243350866, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1243350866, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:26:10] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:26:10] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:26:10] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@21f9277b] 
main> [2018-01-09 10:26:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 10:26:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-09 10:26:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-09 10:26:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-09 10:26:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-09 10:26:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-09 10:26:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-09 10:26:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:26:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:26:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:26:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-09 10:26:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-09 10:26:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 10:26:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 10:26:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-09 10:26:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-09 10:26:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:26:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:26:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:26:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:26:10] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:26:10] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:26:10] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:26:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:26:10] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#5b970f7' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:26:10] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@1d782abe] 
main> [2018-01-09 10:26:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-09 10:26:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-09 10:26:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-09 10:26:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-09 10:26:10] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:26:10] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:26:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:26:10] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:26:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:26:10] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [420993295, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:26:10] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [420993295, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [420993295, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [420993295, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:26:10] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [420993295, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [420993295, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:26:10] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1753259207, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:26:10] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1753259207, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1753259207, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1753259207, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:26:10] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1753259207, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1753259207, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:26:10] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:26:10] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1106468732, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:26:10] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1106468732, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1106468732, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1106468732, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:26:10] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1106468732, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1106468732, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:26:10] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [670517043, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:26:10] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [670517043, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [670517043, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [670517043, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:26:10] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [670517043, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [670517043, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:26:10] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:26:10] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-09 10:26:10] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@6ab7a896: startup date [Tue Jan 09 10:26:09 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1004862656, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:26:10] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1004862656, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1004862656, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1004862656, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:26:10] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1004862656, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1004862656, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:26:10] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:26:10] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@6ab7a896: startup date [Tue Jan 09 10:26:09 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [2142450580, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:26:10] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [2142450580, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [2142450580, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [2142450580, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:26:10] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [2142450580, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [2142450580, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:26:10] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [373973695, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:26:10] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [373973695, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [373973695, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [373973695, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:26:10] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [373973695, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [373973695, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:26:10] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [103433239, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:26:10] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [103433239, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [103433239, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [103433239, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:26:10] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [103433239, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [103433239, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:26:10] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:26:10] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-01-09 10:26:10] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-01-09 10:26:10] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-01-09 10:26:10] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-01-09 10:26:10] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-01-09 10:26:10] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:26:10] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:26:10] [ResolverUtil] [94] [DEBUG] Reader entry: ModelPhone.class 
main> [2018-01-09 10:26:10] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:26:10] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 10:26:10] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 10:26:10] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 L  #com/spring65/phone/model/ModelPhone  java/lang/Object logger Lorg/slf4j/Logger; name Ljava/lang/String; manufacturer price Ljava/lang/Integer; getName ()Ljava/lang/String; Code	     LineNumberTable LocalVariableTable this %Lcom/spring65/phone/model/ModelPhone; setName (Ljava/lang/String;)V getManufacturer	   	  setManufacturer getPrice ()Ljava/lang/Integer;	    
main> [2018-01-09 10:26:10] [ResolverUtil] [250] [DEBUG] Checking to see if class com.spring65.phone.model.ModelPhone matches criteria [is assignable to Object] 
main> [2018-01-09 10:26:10] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2018-01-09 10:26:10] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1416520149, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:26:10] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1416520149, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1416520149, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1416520149, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:26:10] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1416520149, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1416520149, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:26:10] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:26:10] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicephone' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:26:10] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.spring65.phone.svr.ServicePhone@1e469dfd] 
main> [2018-01-09 10:26:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public com.spring65.phone.model.ModelPhone com.spring65.phone.svr.ServicePhone.getPhoneOne(java.lang.String) 
main> [2018-01-09 10:26:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List com.spring65.phone.svr.ServicePhone.getPhoneList() 
main> [2018-01-09 10:26:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.svr.ServicePhone.insertPhoneList(java.util.List) 
main> [2018-01-09 10:26:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.svr.ServicePhone.insertPhone(com.spring65.phone.model.ModelPhone) 
main> [2018-01-09 10:26:10] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:26:10] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:26:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:26:10] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:26:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:26:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [599316979, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:26:10] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [599316979, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [599316979, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [599316979, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:26:10] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [599316979, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [599316979, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:26:10] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [110233108, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:26:10] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [110233108, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [110233108, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [110233108, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:26:10] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [110233108, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [110233108, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:26:10] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [com.spring65.phone.svr.ServicePhone.getPhoneOne]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [626961003, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:26:10] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [626961003, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [626961003, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:26:10] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2018-01-09 10:26:10] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26cb5207] 
main> [2018-01-09 10:26:10] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [626961003, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2018-01-09 10:26:10] [selectPhoneOne] [139] [DEBUG] ==>  Preparing: SELECT * FROM TB_Phone WHERE name = ?  
main> [2018-01-09 10:26:10] [selectPhoneOne] [139] [DEBUG] ==> Parameters: sdf(String) 
main> [2018-01-09 10:26:10] [selectPhoneOne] [139] [DEBUG] <==      Total: 1 
main> [2018-01-09 10:26:10] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26cb5207] 
main> [2018-01-09 10:26:10] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26cb5207] 
main> [2018-01-09 10:26:10] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26cb5207] 
main> [2018-01-09 10:26:10] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26cb5207] 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [626961003, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:26:10] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [626961003, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:26:10] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [626961003, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:26:10] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:28:49] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6ab7a896: startup date [Tue Jan 09 10:28:49 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:28:49] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-09 10:28:50] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-09 10:28:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:28:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:28:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:28:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:28:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:28:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:28:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:28:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:28:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:28:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:28:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:28:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:28:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:28:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:28:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:28:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:28:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:28:50] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:28:50] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@3676ac27] 
main> [2018-01-09 10:28:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-09 10:28:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-09 10:28:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-09 10:28:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-09 10:28:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-09 10:28:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 10:28:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-09 10:28:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-09 10:28:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-09 10:28:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-09 10:28:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-09 10:28:50] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:28:50] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:28:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:28:50] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:28:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:28:50] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:28:50] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [456314134, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:28:50] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [456314134, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:28:50] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [456314134, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:28:50] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:28:50] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [456314134, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:28:50] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [456314134, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:28:50] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [456314134, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:28:50] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:28:50] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:28:50] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@5d58c727] 
main> [2018-01-09 10:28:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 10:28:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-09 10:28:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-09 10:28:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-09 10:28:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-09 10:28:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-09 10:28:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-09 10:28:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:28:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:28:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:28:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-09 10:28:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:28:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:28:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-09 10:28:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-09 10:28:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:28:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:28:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 10:28:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 10:28:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-09 10:28:50] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:28:50] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:28:50] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:28:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:28:50] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#5b970f7' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:28:50] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@27b22f74] 
main> [2018-01-09 10:28:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-09 10:28:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-09 10:28:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-09 10:28:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-09 10:28:50] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:28:50] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:28:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:28:50] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:28:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:28:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:28:50] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-09 10:28:50] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:28:50] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1252820474, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:28:50] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1252820474, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:28:50] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1252820474, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:28:50] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:28:50] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1252820474, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:28:50] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1252820474, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:28:50] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1252820474, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:28:50] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:28:50] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:28:50] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1884387196, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:28:50] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1884387196, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:28:50] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1884387196, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:28:50] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:28:50] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1884387196, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:28:50] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1884387196, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:28:50] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1884387196, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:28:50] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:28:50] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-09 10:28:50] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:28:50] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [805690186, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:28:50] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [805690186, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:28:50] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [805690186, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:28:50] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:28:50] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [805690186, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:28:50] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [805690186, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:28:50] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [805690186, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:28:50] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:28:50] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:28:50] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1270383967, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:28:50] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1270383967, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:28:50] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1270383967, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:28:50] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:28:50] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1270383967, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:28:50] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1270383967, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:28:50] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1270383967, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:28:50] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:28:50] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-09 10:28:51] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@6ab7a896: startup date [Tue Jan 09 10:28:49 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:28:51] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:28:51] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1847301137, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:28:51] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1847301137, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:28:51] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1847301137, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:28:51] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:28:51] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1847301137, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:28:51] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1847301137, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:28:51] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1847301137, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:28:51] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:28:51] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@6ab7a896: startup date [Tue Jan 09 10:28:49 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:28:51] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:28:51] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [59382310, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:28:51] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [59382310, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:28:51] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [59382310, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:28:51] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:28:51] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [59382310, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:28:51] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [59382310, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:28:51] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [59382310, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:28:51] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:28:51] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:28:51] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [407877261, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:28:51] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [407877261, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:28:51] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [407877261, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:28:51] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:28:51] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [407877261, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:28:51] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [407877261, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:28:51] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [407877261, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:28:51] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:28:51] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:28:51] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [178342381, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:28:51] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [178342381, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:28:51] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [178342381, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:28:51] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:28:51] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [178342381, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:28:51] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [178342381, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:28:51] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [178342381, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:28:51] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:28:51] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-01-09 10:28:51] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-01-09 10:28:51] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-01-09 10:28:51] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-01-09 10:28:51] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-01-09 10:28:51] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:28:51] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:28:51] [ResolverUtil] [94] [DEBUG] Reader entry: ModelPhone.class 
main> [2018-01-09 10:28:51] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:28:51] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 10:28:51] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 10:28:51] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 L  #com/spring65/phone/model/ModelPhone  java/lang/Object logger Lorg/slf4j/Logger; name Ljava/lang/String; manufacturer price Ljava/lang/Integer; getName ()Ljava/lang/String; Code	     LineNumberTable LocalVariableTable this %Lcom/spring65/phone/model/ModelPhone; setName (Ljava/lang/String;)V getManufacturer	   	  setManufacturer getPrice ()Ljava/lang/Integer;	    
main> [2018-01-09 10:28:51] [ResolverUtil] [250] [DEBUG] Checking to see if class com.spring65.phone.model.ModelPhone matches criteria [is assignable to Object] 
main> [2018-01-09 10:28:51] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2018-01-09 10:28:51] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2018-01-09 10:28:51] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:28:51] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1216611732, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:28:51] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1216611732, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:28:51] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1216611732, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:28:51] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:28:51] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1216611732, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:28:51] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1216611732, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:28:51] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1216611732, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:28:51] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:28:51] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicephone' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:28:51] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.spring65.phone.svr.ServicePhone@124ac145] 
main> [2018-01-09 10:28:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public com.spring65.phone.model.ModelPhone com.spring65.phone.svr.ServicePhone.getPhoneOne(java.lang.String) 
main> [2018-01-09 10:28:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List com.spring65.phone.svr.ServicePhone.getPhoneList() 
main> [2018-01-09 10:28:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.svr.ServicePhone.insertPhone(com.spring65.phone.model.ModelPhone) 
main> [2018-01-09 10:28:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.svr.ServicePhone.insertPhoneList(java.util.List) 
main> [2018-01-09 10:28:51] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:28:51] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:28:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:28:51] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:28:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:28:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:28:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:28:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:28:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:28:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:28:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:28:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:28:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:28:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:28:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:28:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:28:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:28:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:28:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:28:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:28:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:28:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:28:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:28:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:28:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:28:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:28:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:28:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:28:51] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:28:51] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [449105069, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:28:51] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [449105069, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:28:51] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [449105069, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:28:51] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:28:51] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [449105069, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:28:51] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [449105069, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:28:51] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [449105069, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:28:51] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:28:51] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:28:51] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1659452474, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:28:51] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1659452474, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:28:51] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1659452474, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:28:51] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:28:51] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1659452474, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:28:51] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1659452474, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:28:51] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1659452474, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:28:51] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:28:51] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [com.spring65.phone.svr.ServicePhone.insertPhone]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException 
main> [2018-01-09 10:28:51] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1390430007, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:28:51] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1390430007, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:28:51] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2018-01-09 10:28:51] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3374b5bc] 
main> [2018-01-09 10:28:51] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1390430007, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2018-01-09 10:28:51] [insertPhone] [139] [DEBUG] ==>  Preparing: INSERT INTO TB_PHONE (name, manufacturer, price) VALUES (?, ?, ?)  
main> [2018-01-09 10:28:51] [insertPhone] [139] [DEBUG] ==> Parameters: T-1000(String), Terminater(String), 1000(Integer) 
main> [2018-01-09 10:28:51] [insertPhone] [139] [DEBUG] <==    Updates: 1 
main> [2018-01-09 10:28:51] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3374b5bc] 
main> [2018-01-09 10:28:51] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3374b5bc] 
main> [2018-01-09 10:28:51] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3374b5bc] 
main> [2018-01-09 10:28:51] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3374b5bc] 
main> [2018-01-09 10:28:51] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:28:51] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1390430007, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:28:51] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1390430007, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:28:51] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:32:43] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6ab7a896: startup date [Tue Jan 09 10:32:43 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:32:43] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-09 10:32:43] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-09 10:32:43] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:32:43] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:32:43] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:32:43] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:32:43] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:32:43] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:32:43] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:32:43] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:32:43] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:32:43] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:32:43] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:32:43] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:32:43] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:32:43] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:32:43] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:32:43] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:32:43] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:32:43] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:32:43] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@3676ac27] 
main> [2018-01-09 10:32:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-09 10:32:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-09 10:32:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-09 10:32:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-09 10:32:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-09 10:32:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-09 10:32:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-09 10:32:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-09 10:32:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-09 10:32:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-09 10:32:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 10:32:43] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:32:43] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:32:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:32:43] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:32:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:32:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:32:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:32:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:32:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:32:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:32:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:32:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:32:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:32:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:32:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:32:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:32:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:32:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:32:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:32:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:32:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:32:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:32:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:32:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:32:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:32:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:32:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:32:43] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:32:43] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [456314134, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:32:44] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [456314134, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [456314134, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [456314134, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:32:44] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [456314134, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [456314134, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:32:44] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:32:44] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:32:44] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@5d58c727] 
main> [2018-01-09 10:32:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-09 10:32:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-09 10:32:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-09 10:32:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-09 10:32:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 10:32:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-09 10:32:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-09 10:32:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:32:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:32:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:32:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-09 10:32:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 10:32:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-09 10:32:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 10:32:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:32:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:32:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-09 10:32:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-09 10:32:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:32:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:32:44] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:32:44] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:32:44] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:32:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:32:44] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#5b970f7' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:32:44] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@27b22f74] 
main> [2018-01-09 10:32:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-09 10:32:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-09 10:32:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-09 10:32:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-09 10:32:44] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:32:44] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:32:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:32:44] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:32:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:32:44] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1252820474, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:32:44] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1252820474, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1252820474, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1252820474, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:32:44] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1252820474, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1252820474, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:32:44] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1884387196, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:32:44] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1884387196, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1884387196, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1884387196, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:32:44] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1884387196, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1884387196, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:32:44] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:32:44] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [805690186, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:32:44] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [805690186, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [805690186, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [805690186, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:32:44] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [805690186, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [805690186, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:32:44] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1270383967, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:32:44] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1270383967, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1270383967, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1270383967, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:32:44] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1270383967, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1270383967, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:32:44] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:32:44] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-09 10:32:44] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@6ab7a896: startup date [Tue Jan 09 10:32:43 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1847301137, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:32:44] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1847301137, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1847301137, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1847301137, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:32:44] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1847301137, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1847301137, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:32:44] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:32:44] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@6ab7a896: startup date [Tue Jan 09 10:32:43 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [59382310, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:32:44] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [59382310, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [59382310, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [59382310, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:32:44] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [59382310, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [59382310, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:32:44] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [407877261, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:32:44] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [407877261, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [407877261, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [407877261, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:32:44] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [407877261, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [407877261, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:32:44] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [178342381, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:32:44] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [178342381, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [178342381, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [178342381, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:32:44] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [178342381, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [178342381, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:32:44] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:32:44] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-01-09 10:32:44] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-01-09 10:32:44] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-01-09 10:32:44] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-01-09 10:32:44] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-01-09 10:32:44] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:32:44] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:32:44] [ResolverUtil] [94] [DEBUG] Reader entry: ModelPhone.class 
main> [2018-01-09 10:32:44] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:32:44] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 10:32:44] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 10:32:44] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 L  #com/spring65/phone/model/ModelPhone  java/lang/Object logger Lorg/slf4j/Logger; name Ljava/lang/String; manufacturer price Ljava/lang/Integer; getName ()Ljava/lang/String; Code	     LineNumberTable LocalVariableTable this %Lcom/spring65/phone/model/ModelPhone; setName (Ljava/lang/String;)V getManufacturer	   	  setManufacturer getPrice ()Ljava/lang/Integer;	    
main> [2018-01-09 10:32:44] [ResolverUtil] [250] [DEBUG] Checking to see if class com.spring65.phone.model.ModelPhone matches criteria [is assignable to Object] 
main> [2018-01-09 10:32:44] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2018-01-09 10:32:44] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1416520149, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:32:44] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1416520149, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1416520149, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1416520149, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:32:44] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1416520149, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1416520149, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:32:44] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:32:44] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicephone' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:32:44] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.spring65.phone.svr.ServicePhone@1e469dfd] 
main> [2018-01-09 10:32:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public com.spring65.phone.model.ModelPhone com.spring65.phone.svr.ServicePhone.getPhoneOne(java.lang.String) 
main> [2018-01-09 10:32:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List com.spring65.phone.svr.ServicePhone.getPhoneList() 
main> [2018-01-09 10:32:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.svr.ServicePhone.insertPhone(com.spring65.phone.model.ModelPhone) 
main> [2018-01-09 10:32:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.svr.ServicePhone.insertPhoneList(java.util.List) 
main> [2018-01-09 10:32:44] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:32:44] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:32:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:32:44] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:32:44] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:32:44] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [599316979, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:32:44] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [599316979, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [599316979, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [599316979, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:32:44] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [599316979, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [599316979, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:32:44] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [110233108, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:32:44] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [110233108, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [110233108, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [110233108, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:32:44] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [110233108, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [110233108, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:32:44] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [com.spring65.phone.svr.ServicePhone.insertPhoneList]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [626961003, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [626961003, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:32:44] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2018-01-09 10:32:44] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@561b61ed] 
main> [2018-01-09 10:32:44] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [626961003, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2018-01-09 10:32:44] [insertPhoneList] [139] [DEBUG] ==>  Preparing: INSERT INTO TB_PHONE( name , manufacturer , price ) VALUES ( ? , ? , ? )  
main> [2018-01-09 10:32:44] [insertPhoneList] [139] [DEBUG] ==> Parameters: name2(String), manu2(String), 3002(Integer) 
main> [2018-01-09 10:32:44] [insertPhoneList] [139] [DEBUG] <==    Updates: 1 
main> [2018-01-09 10:32:44] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@561b61ed] 
main> [2018-01-09 10:32:44] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@561b61ed] 
main> [2018-01-09 10:32:44] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@561b61ed] 
main> [2018-01-09 10:32:44] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@561b61ed] 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [626961003, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:32:44] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [626961003, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:32:44] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:33:09] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6ab7a896: startup date [Tue Jan 09 10:33:09 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:33:09] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-09 10:33:10] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-09 10:33:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:33:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:33:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:33:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:33:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:33:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:33:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:33:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:33:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:33:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:33:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:33:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:33:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:33:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:33:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:33:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:33:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:33:10] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:33:10] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@3676ac27] 
main> [2018-01-09 10:33:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-09 10:33:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-09 10:33:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-09 10:33:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-09 10:33:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-09 10:33:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 10:33:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-09 10:33:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-09 10:33:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-09 10:33:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-09 10:33:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-09 10:33:10] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:33:10] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:33:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:33:10] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:33:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:33:10] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:33:10] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [456314134, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:33:10] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [456314134, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:33:10] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [456314134, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:33:10] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:33:10] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [456314134, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:33:10] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [456314134, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:33:10] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [456314134, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:33:10] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:33:10] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:33:10] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@5d58c727] 
main> [2018-01-09 10:33:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 10:33:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-09 10:33:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-09 10:33:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-09 10:33:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-09 10:33:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-09 10:33:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-09 10:33:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:33:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:33:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:33:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-09 10:33:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 10:33:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-09 10:33:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 10:33:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:33:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:33:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-09 10:33:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-09 10:33:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:33:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:33:10] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:33:10] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:33:10] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:33:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:33:10] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#5b970f7' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:33:10] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@27b22f74] 
main> [2018-01-09 10:33:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-09 10:33:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-09 10:33:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-09 10:33:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-09 10:33:10] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:33:10] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:33:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:33:10] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:33:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:33:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:33:10] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-09 10:33:10] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:33:10] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1252820474, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:33:10] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1252820474, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:33:10] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1252820474, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:33:10] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:33:10] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1252820474, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:33:10] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1252820474, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:33:10] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1252820474, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:33:10] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:33:10] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:33:10] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1884387196, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:33:10] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1884387196, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:33:10] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1884387196, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:33:10] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:33:10] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1884387196, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:33:10] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1884387196, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:33:10] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1884387196, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:33:10] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:33:10] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-09 10:33:10] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:33:10] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [805690186, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:33:10] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [805690186, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:33:10] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [805690186, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:33:10] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:33:10] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [805690186, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:33:10] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [805690186, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:33:10] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [805690186, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:33:10] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:33:10] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:33:10] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1270383967, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:33:10] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1270383967, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:33:10] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1270383967, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:33:10] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:33:10] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1270383967, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:33:10] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1270383967, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:33:10] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1270383967, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:33:10] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:33:10] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-09 10:33:11] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@6ab7a896: startup date [Tue Jan 09 10:33:09 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:33:11] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:33:11] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1713129148, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:33:11] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1713129148, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:33:11] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1713129148, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:33:11] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:33:11] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1713129148, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:33:11] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1713129148, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:33:11] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1713129148, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:33:11] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:33:11] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@6ab7a896: startup date [Tue Jan 09 10:33:09 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:33:11] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:33:11] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [445192925, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:33:11] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [445192925, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:33:11] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [445192925, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:33:11] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:33:11] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [445192925, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:33:11] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [445192925, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:33:11] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [445192925, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:33:11] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:33:11] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:33:11] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [179233442, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:33:11] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [179233442, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:33:11] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [179233442, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:33:11] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:33:11] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [179233442, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:33:11] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [179233442, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:33:11] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [179233442, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:33:11] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:33:11] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:33:11] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1898996968, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:33:11] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1898996968, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:33:11] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1898996968, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:33:11] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:33:11] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1898996968, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:33:11] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1898996968, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:33:11] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1898996968, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:33:11] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:33:11] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-01-09 10:33:11] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-01-09 10:33:11] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-01-09 10:33:11] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-01-09 10:33:11] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-01-09 10:33:11] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:33:11] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:33:11] [ResolverUtil] [94] [DEBUG] Reader entry: ModelPhone.class 
main> [2018-01-09 10:33:11] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:33:11] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 10:33:11] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 10:33:11] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 L  #com/spring65/phone/model/ModelPhone  java/lang/Object logger Lorg/slf4j/Logger; name Ljava/lang/String; manufacturer price Ljava/lang/Integer; getName ()Ljava/lang/String; Code	     LineNumberTable LocalVariableTable this %Lcom/spring65/phone/model/ModelPhone; setName (Ljava/lang/String;)V getManufacturer	   	  setManufacturer getPrice ()Ljava/lang/Integer;	    
main> [2018-01-09 10:33:11] [ResolverUtil] [250] [DEBUG] Checking to see if class com.spring65.phone.model.ModelPhone matches criteria [is assignable to Object] 
main> [2018-01-09 10:33:11] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2018-01-09 10:33:11] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2018-01-09 10:33:11] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:33:11] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1416520149, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:33:11] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1416520149, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:33:11] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1416520149, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:33:11] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:33:11] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1416520149, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:33:11] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1416520149, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:33:11] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1416520149, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:33:11] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:33:11] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicephone' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:33:11] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.spring65.phone.svr.ServicePhone@1e469dfd] 
main> [2018-01-09 10:33:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public com.spring65.phone.model.ModelPhone com.spring65.phone.svr.ServicePhone.getPhoneOne(java.lang.String) 
main> [2018-01-09 10:33:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List com.spring65.phone.svr.ServicePhone.getPhoneList() 
main> [2018-01-09 10:33:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.svr.ServicePhone.insertPhone(com.spring65.phone.model.ModelPhone) 
main> [2018-01-09 10:33:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.svr.ServicePhone.insertPhoneList(java.util.List) 
main> [2018-01-09 10:33:11] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:33:11] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:33:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:33:11] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:33:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:33:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:33:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:33:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:33:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:33:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:33:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:33:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:33:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:33:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:33:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:33:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:33:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:33:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:33:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:33:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:33:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:33:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:33:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:33:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:33:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:33:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:33:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:33:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:33:11] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:33:11] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [599316979, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:33:11] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [599316979, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:33:11] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [599316979, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:33:11] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:33:11] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [599316979, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:33:11] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [599316979, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:33:11] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [599316979, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:33:11] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:33:11] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:33:11] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [110233108, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:33:11] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [110233108, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:33:11] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [110233108, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:33:11] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:33:11] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [110233108, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:33:11] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [110233108, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:33:11] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [110233108, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:33:11] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:33:11] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [com.spring65.phone.svr.ServicePhone.insertPhoneList]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException 
main> [2018-01-09 10:33:11] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [626961003, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:33:11] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [626961003, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:33:11] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2018-01-09 10:33:11] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@561b61ed] 
main> [2018-01-09 10:33:11] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [626961003, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2018-01-09 10:33:11] [insertPhoneList] [139] [DEBUG] ==>  Preparing: INSERT INTO TB_PHONE( name , manufacturer , price ) VALUES ( ? , ? , ? ),( ? , ? , ? ),( ? , ? , ? )  
main> [2018-01-09 10:33:11] [insertPhoneList] [139] [DEBUG] ==> Parameters: name2(String), manu2(String), 3002(Integer), name2(String), manu2(String), 3002(Integer), name2(String), manu2(String), 3002(Integer) 
main> [2018-01-09 10:33:11] [insertPhoneList] [139] [DEBUG] <==    Updates: 3 
main> [2018-01-09 10:33:11] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@561b61ed] 
main> [2018-01-09 10:33:11] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@561b61ed] 
main> [2018-01-09 10:33:11] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@561b61ed] 
main> [2018-01-09 10:33:11] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@561b61ed] 
main> [2018-01-09 10:33:11] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:33:11] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [626961003, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:33:11] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [626961003, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:33:11] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:34:36] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5ad851c9: startup date [Tue Jan 09 10:34:36 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:34:36] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-09 10:34:37] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-09 10:34:37] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:34:37] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:34:37] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:34:37] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:34:37] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:34:37] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:34:37] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:34:37] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:34:37] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:34:37] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:34:37] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:34:37] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:34:37] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:34:37] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:34:37] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:34:37] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:34:37] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:34:37] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:34:37] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@d1f74b8] 
main> [2018-01-09 10:34:37] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-09 10:34:37] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-09 10:34:37] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-09 10:34:37] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-09 10:34:37] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-09 10:34:37] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-09 10:34:37] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-09 10:34:37] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 10:34:37] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-09 10:34:37] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-09 10:34:37] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-09 10:34:37] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:34:37] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:34:37] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:34:37] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:34:37] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:34:37] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:34:37] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1767532961, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:34:37] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1767532961, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:34:37] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1767532961, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:34:37] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:34:37] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1767532961, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:34:37] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1767532961, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:34:37] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1767532961, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:34:37] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:34:37] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:34:37] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@25b865b5] 
main> [2018-01-09 10:34:37] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 10:34:37] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-09 10:34:37] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-09 10:34:37] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-09 10:34:37] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-09 10:34:37] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-09 10:34:37] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-09 10:34:37] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:34:37] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:34:37] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:34:37] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-09 10:34:37] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 10:34:37] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-09 10:34:37] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 10:34:37] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:34:37] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:34:37] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-09 10:34:37] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-09 10:34:37] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:34:37] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:34:37] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:34:37] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:34:37] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:34:37] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:34:37] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#5cc126dc' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:34:37] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@201aa8c1] 
main> [2018-01-09 10:34:37] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-09 10:34:37] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-09 10:34:37] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-09 10:34:37] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-09 10:34:37] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:34:37] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:34:37] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:34:37] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:34:37] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:34:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:34:37] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-09 10:34:37] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:34:37] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [494414526, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:34:37] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [494414526, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:34:37] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [494414526, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:34:37] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:34:37] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [494414526, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:34:37] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [494414526, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:34:37] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [494414526, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:34:37] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:34:37] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:34:37] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [261567641, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:34:37] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [261567641, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:34:37] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [261567641, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:34:37] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:34:37] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [261567641, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:34:37] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [261567641, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:34:37] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [261567641, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:34:37] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:34:37] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-09 10:34:37] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:34:37] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1899567935, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:34:37] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1899567935, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:34:37] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1899567935, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:34:37] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:34:37] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1899567935, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:34:37] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1899567935, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:34:37] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1899567935, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:34:37] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:34:37] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:34:37] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [2771454, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:34:37] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [2771454, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:34:37] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [2771454, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:34:37] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:34:37] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [2771454, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:34:37] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [2771454, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:34:37] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [2771454, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:34:37] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:34:37] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-09 10:34:38] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5ad851c9: startup date [Tue Jan 09 10:34:36 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:34:38] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:34:38] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [596905862, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:34:38] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [596905862, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:34:38] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [596905862, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:34:38] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:34:38] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [596905862, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:34:38] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [596905862, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:34:38] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [596905862, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:34:38] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:34:38] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5ad851c9: startup date [Tue Jan 09 10:34:36 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:34:38] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:34:38] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [2128859746, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:34:38] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [2128859746, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:34:38] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [2128859746, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:34:38] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:34:38] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [2128859746, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:34:38] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [2128859746, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:34:38] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [2128859746, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:34:38] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:34:38] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:34:38] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [2084863094, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:34:38] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [2084863094, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:34:38] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [2084863094, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:34:38] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:34:38] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [2084863094, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:34:38] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [2084863094, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:34:38] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [2084863094, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:34:38] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:34:38] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:34:38] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1510009630, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:34:38] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1510009630, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:34:38] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1510009630, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:34:38] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:34:38] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1510009630, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:34:38] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1510009630, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:34:38] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1510009630, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:34:38] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:34:38] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-01-09 10:34:38] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-01-09 10:34:38] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-01-09 10:34:38] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-01-09 10:34:38] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-01-09 10:34:38] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:34:38] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:34:38] [ResolverUtil] [94] [DEBUG] Reader entry: ModelPhone.class 
main> [2018-01-09 10:34:38] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:34:38] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 10:34:38] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 10:34:38] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 L  #com/spring65/phone/model/ModelPhone  java/lang/Object logger Lorg/slf4j/Logger; name Ljava/lang/String; manufacturer price Ljava/lang/Integer; getName ()Ljava/lang/String; Code	     LineNumberTable LocalVariableTable this %Lcom/spring65/phone/model/ModelPhone; setName (Ljava/lang/String;)V getManufacturer	   	  setManufacturer getPrice ()Ljava/lang/Integer;	    
main> [2018-01-09 10:34:38] [ResolverUtil] [250] [DEBUG] Checking to see if class com.spring65.phone.model.ModelPhone matches criteria [is assignable to Object] 
main> [2018-01-09 10:34:38] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2018-01-09 10:34:38] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2018-01-09 10:34:38] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:34:38] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1266224518, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:34:38] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1266224518, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:34:38] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1266224518, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:34:38] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:34:38] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1266224518, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:34:38] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1266224518, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:34:38] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1266224518, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:34:38] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:34:38] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicephone' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:34:38] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.spring65.phone.svr.ServicePhone@1292071f] 
main> [2018-01-09 10:34:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public com.spring65.phone.model.ModelPhone com.spring65.phone.svr.ServicePhone.getPhoneOne(java.lang.String) 
main> [2018-01-09 10:34:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List com.spring65.phone.svr.ServicePhone.getPhoneList() 
main> [2018-01-09 10:34:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.svr.ServicePhone.insertPhone(com.spring65.phone.model.ModelPhone) 
main> [2018-01-09 10:34:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.svr.ServicePhone.insertPhoneList(java.util.List) 
main> [2018-01-09 10:34:38] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:34:38] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:34:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:34:38] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:34:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:34:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:34:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:34:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:34:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:34:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:34:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:34:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:34:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:34:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:34:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:34:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:34:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:34:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:34:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:34:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:34:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:34:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:34:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:34:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:34:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:34:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:34:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:34:38] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:34:38] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:34:38] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1703040426, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:34:38] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1703040426, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:34:38] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1703040426, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:34:38] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:34:38] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1703040426, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:34:38] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1703040426, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:34:38] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1703040426, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:34:38] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:34:38] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:34:38] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [240959474, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:34:38] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [240959474, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:34:38] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [240959474, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:34:38] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:34:38] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [240959474, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:34:38] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [240959474, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:34:38] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [240959474, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:34:38] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:34:38] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [com.spring65.phone.svr.ServicePhone.insertPhone]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException 
main> [2018-01-09 10:34:38] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [156855528, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:34:38] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [156855528, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:34:38] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2018-01-09 10:34:38] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e74a380] 
main> [2018-01-09 10:34:38] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [156855528, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2018-01-09 10:34:38] [insertPhone] [139] [DEBUG] ==>  Preparing: INSERT INTO TB_PHONE (name, manufacturer, price) VALUES (?, ?, ?)  
main> [2018-01-09 10:34:38] [insertPhone] [139] [DEBUG] ==> Parameters: T-1000(String), Terminater(String), 1000(Integer) 
main> [2018-01-09 10:34:38] [insertPhone] [139] [DEBUG] <==    Updates: 1 
main> [2018-01-09 10:34:38] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e74a380] 
main> [2018-01-09 10:34:38] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e74a380] 
main> [2018-01-09 10:34:38] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e74a380] 
main> [2018-01-09 10:34:38] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e74a380] 
main> [2018-01-09 10:34:38] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:34:38] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [156855528, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:34:38] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [156855528, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:34:38] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:34:38] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [com.spring65.phone.svr.ServicePhone.getPhoneList]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:34:38] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [2008619427, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:34:38] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [2008619427, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:34:38] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [2008619427, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:34:38] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2018-01-09 10:34:38] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32e54a9d] 
main> [2018-01-09 10:34:38] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [2008619427, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2018-01-09 10:34:38] [selectPhoneList] [139] [DEBUG] ==>  Preparing: SELECT * FROM TB_Phone  
main> [2018-01-09 10:34:38] [selectPhoneList] [139] [DEBUG] ==> Parameters:  
main> [2018-01-09 10:34:38] [selectPhoneList] [139] [DEBUG] <==      Total: 7 
main> [2018-01-09 10:34:38] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32e54a9d] 
main> [2018-01-09 10:34:38] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32e54a9d] 
main> [2018-01-09 10:34:38] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32e54a9d] 
main> [2018-01-09 10:34:38] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32e54a9d] 
main> [2018-01-09 10:34:38] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:34:38] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [2008619427, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:34:38] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [2008619427, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:34:38] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [2008619427, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:34:38] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:34:38] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [com.spring65.phone.svr.ServicePhone.getPhoneOne]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:34:38] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1290358063, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:34:38] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1290358063, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:34:38] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1290358063, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:34:38] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2018-01-09 10:34:38] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53b7ce6] 
main> [2018-01-09 10:34:38] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1290358063, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2018-01-09 10:34:38] [selectPhoneOne] [139] [DEBUG] ==>  Preparing: SELECT * FROM TB_Phone WHERE name = ?  
main> [2018-01-09 10:34:38] [selectPhoneOne] [139] [DEBUG] ==> Parameters: sdf(String) 
main> [2018-01-09 10:34:38] [selectPhoneOne] [139] [DEBUG] <==      Total: 1 
main> [2018-01-09 10:34:38] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53b7ce6] 
main> [2018-01-09 10:34:38] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53b7ce6] 
main> [2018-01-09 10:34:38] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53b7ce6] 
main> [2018-01-09 10:34:38] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53b7ce6] 
main> [2018-01-09 10:34:38] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:34:38] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1290358063, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:34:38] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1290358063, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:34:38] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1290358063, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:34:38] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:34:56] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [com.spring65.phone.svr.ServicePhone.insertPhoneList]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException 
main> [2018-01-09 10:34:56] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1680841335, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:34:56] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1680841335, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:34:56] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2018-01-09 10:34:56] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54e2fe] 
main> [2018-01-09 10:34:56] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1680841335, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2018-01-09 10:34:56] [insertPhoneList] [139] [DEBUG] ==>  Preparing: INSERT INTO TB_PHONE( name , manufacturer , price ) VALUES ( ? , ? , ? ),( ? , ? , ? ),( ? , ? , ? )  
main> [2018-01-09 10:34:56] [insertPhoneList] [139] [DEBUG] ==> Parameters: name2(String), manu2(String), 3002(Integer), name2(String), manu2(String), 3002(Integer), name2(String), manu2(String), 3002(Integer) 
main> [2018-01-09 10:34:56] [insertPhoneList] [139] [DEBUG] <==    Updates: 3 
main> [2018-01-09 10:34:56] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54e2fe] 
main> [2018-01-09 10:34:56] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54e2fe] 
main> [2018-01-09 10:34:56] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54e2fe] 
main> [2018-01-09 10:34:56] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54e2fe] 
main> [2018-01-09 10:34:56] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:34:56] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1680841335, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:34:56] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1680841335, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:34:56] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:36:46] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6ab7a896: startup date [Tue Jan 09 10:36:46 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:36:46] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-09 10:36:46] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-09 10:36:47] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:36:47] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:36:47] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:36:47] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:36:47] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:36:47] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:36:47] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:36:47] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:36:47] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:36:47] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:36:47] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:36:47] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:36:47] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:36:47] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 10:36:47] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:36:47] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:36:47] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 10:36:47] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:36:47] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@3676ac27] 
main> [2018-01-09 10:36:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-09 10:36:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-09 10:36:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-09 10:36:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-09 10:36:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-09 10:36:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-09 10:36:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-09 10:36:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 10:36:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-09 10:36:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-09 10:36:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-09 10:36:47] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:36:47] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:36:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:36:47] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:36:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:36:47] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:36:47] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [456314134, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:36:47] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [456314134, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:36:47] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [456314134, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:36:47] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:36:47] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [456314134, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:36:47] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [456314134, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:36:47] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [456314134, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:36:47] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:36:47] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:36:47] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@5d58c727] 
main> [2018-01-09 10:36:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-09 10:36:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 10:36:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-09 10:36:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-09 10:36:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-09 10:36:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-09 10:36:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-09 10:36:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:36:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:36:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:36:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-09 10:36:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-09 10:36:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 10:36:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 10:36:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-09 10:36:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-09 10:36:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:36:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:36:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:36:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 10:36:47] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:36:47] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:36:47] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:36:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:36:47] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#5b970f7' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:36:47] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@27b22f74] 
main> [2018-01-09 10:36:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-09 10:36:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-09 10:36:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-09 10:36:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-09 10:36:47] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:36:47] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:36:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:36:47] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:36:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:36:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:36:47] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-09 10:36:47] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:36:47] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1252820474, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:36:47] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1252820474, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:36:47] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1252820474, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:36:47] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:36:47] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1252820474, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:36:47] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1252820474, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:36:47] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1252820474, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:36:47] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:36:47] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:36:47] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1884387196, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:36:47] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1884387196, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:36:47] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1884387196, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:36:47] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:36:47] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1884387196, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:36:47] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1884387196, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:36:47] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1884387196, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:36:47] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:36:47] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-09 10:36:47] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:36:47] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [805690186, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:36:47] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [805690186, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:36:47] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [805690186, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:36:47] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:36:47] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [805690186, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:36:47] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [805690186, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:36:47] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [805690186, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:36:47] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:36:47] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:36:47] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1270383967, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:36:47] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1270383967, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:36:47] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1270383967, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:36:47] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:36:47] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1270383967, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:36:47] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1270383967, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:36:47] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1270383967, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:36:47] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:36:47] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-09 10:36:47] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@6ab7a896: startup date [Tue Jan 09 10:36:46 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:36:47] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:36:47] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1847301137, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:36:47] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1847301137, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:36:47] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1847301137, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:36:47] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:36:47] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1847301137, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:36:47] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1847301137, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:36:47] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1847301137, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:36:47] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:36:47] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@6ab7a896: startup date [Tue Jan 09 10:36:46 KST 2018]; root of context hierarchy 
main> [2018-01-09 10:36:47] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:36:47] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [59382310, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:36:47] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [59382310, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:36:47] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [59382310, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:36:47] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:36:47] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [59382310, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:36:47] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [59382310, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:36:47] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [59382310, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:36:47] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:36:47] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:36:47] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [407877261, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:36:47] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [407877261, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:36:47] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [407877261, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:36:47] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:36:47] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [407877261, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:36:47] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [407877261, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:36:47] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [407877261, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:36:47] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:36:47] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:36:47] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [178342381, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:36:47] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [178342381, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:36:47] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [178342381, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:36:47] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:36:47] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [178342381, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:36:47] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [178342381, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:36:47] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [178342381, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:36:47] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:36:48] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-01-09 10:36:48] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-01-09 10:36:48] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-01-09 10:36:48] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-01-09 10:36:48] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-01-09 10:36:48] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:36:48] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:36:48] [ResolverUtil] [94] [DEBUG] Reader entry: ModelPhone.class 
main> [2018-01-09 10:36:48] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 10:36:48] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 10:36:48] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 10:36:48] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 L  #com/spring65/phone/model/ModelPhone  java/lang/Object logger Lorg/slf4j/Logger; name Ljava/lang/String; manufacturer price Ljava/lang/Integer; getName ()Ljava/lang/String; Code	     LineNumberTable LocalVariableTable this %Lcom/spring65/phone/model/ModelPhone; setName (Ljava/lang/String;)V getManufacturer	   	  setManufacturer getPrice ()Ljava/lang/Integer;	    
main> [2018-01-09 10:36:48] [ResolverUtil] [250] [DEBUG] Checking to see if class com.spring65.phone.model.ModelPhone matches criteria [is assignable to Object] 
main> [2018-01-09 10:36:48] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2018-01-09 10:36:48] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2018-01-09 10:36:48] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:36:48] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1216611732, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:36:48] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1216611732, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:36:48] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1216611732, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:36:48] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:36:48] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1216611732, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:36:48] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1216611732, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:36:48] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1216611732, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:36:48] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:36:48] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicephone' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 10:36:48] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.spring65.phone.svr.ServicePhone@124ac145] 
main> [2018-01-09 10:36:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public com.spring65.phone.model.ModelPhone com.spring65.phone.svr.ServicePhone.getPhoneOne(java.lang.String) 
main> [2018-01-09 10:36:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List com.spring65.phone.svr.ServicePhone.getPhoneList() 
main> [2018-01-09 10:36:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.svr.ServicePhone.insertPhone(com.spring65.phone.model.ModelPhone) 
main> [2018-01-09 10:36:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.svr.ServicePhone.insertPhoneList(java.util.List) 
main> [2018-01-09 10:36:48] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 10:36:48] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 10:36:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 10:36:48] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 10:36:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 10:36:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 10:36:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:36:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 10:36:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 10:36:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 10:36:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:36:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:36:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 10:36:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 10:36:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 10:36:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 10:36:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 10:36:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 10:36:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 10:36:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:36:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:36:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 10:36:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 10:36:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:36:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 10:36:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 10:36:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 10:36:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 10:36:48] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:36:48] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [449105069, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:36:48] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [449105069, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:36:48] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [449105069, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:36:48] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:36:48] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [449105069, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:36:48] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [449105069, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:36:48] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [449105069, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:36:48] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:36:48] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 10:36:48] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1659452474, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:36:48] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1659452474, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 10:36:48] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1659452474, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:36:48] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:36:48] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1659452474, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:36:48] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1659452474, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:36:48] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1659452474, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:36:48] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 10:36:48] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [com.spring65.phone.svr.ServicePhone.insertPhoneList]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException 
main> [2018-01-09 10:36:48] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1390430007, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 10:36:48] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1390430007, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 10:36:48] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2018-01-09 10:36:48] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3374b5bc] 
main> [2018-01-09 10:36:48] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1390430007, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2018-01-09 10:36:48] [insertPhoneList] [139] [DEBUG] ==>  Preparing: INSERT INTO TB_PHONE( name , manufacturer , price ) VALUES ( ? , ? , ? ),( ? , ? , ? ),( ? , ? , ? )  
main> [2018-01-09 10:36:48] [insertPhoneList] [139] [DEBUG] ==> Parameters: name0(String), manu0(String), 3000(Integer), name1(String), manu1(String), 3001(Integer), name2(String), manu2(String), 3002(Integer) 
main> [2018-01-09 10:36:48] [insertPhoneList] [139] [DEBUG] <==    Updates: 3 
main> [2018-01-09 10:36:48] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3374b5bc] 
main> [2018-01-09 10:36:48] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3374b5bc] 
main> [2018-01-09 10:36:48] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3374b5bc] 
main> [2018-01-09 10:36:48] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3374b5bc] 
main> [2018-01-09 10:36:48] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 10:36:48] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1390430007, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 10:36:48] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1390430007, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 10:36:48] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:47:10] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5ad851c9: startup date [Tue Jan 09 11:47:10 KST 2018]; root of context hierarchy 
main> [2018-01-09 11:47:10] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-09 11:47:10] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-09 11:47:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:47:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:47:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:47:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:47:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:47:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:47:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:47:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:47:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:47:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:47:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:47:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:47:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:47:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-09 11:47:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 11:47:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 11:47:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-09 11:47:10] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 11:47:10] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@3a0807b7] 
main> [2018-01-09 11:47:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-09 11:47:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-09 11:47:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-09 11:47:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-09 11:47:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-09 11:47:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-09 11:47:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-09 11:47:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 11:47:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-09 11:47:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-09 11:47:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-09 11:47:10] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 11:47:10] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 11:47:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 11:47:10] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 11:47:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 11:47:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 11:47:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:47:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 11:47:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 11:47:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 11:47:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:47:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:47:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 11:47:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 11:47:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:47:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 11:47:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:47:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:47:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 11:47:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:47:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:47:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 11:47:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 11:47:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 11:47:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 11:47:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 11:47:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 11:47:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 11:47:10] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1260043537, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:47:11] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1260043537, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1260043537, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1260043537, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:47:11] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1260043537, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1260043537, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:47:11] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:47:11] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 11:47:11] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@f9b5552] 
main> [2018-01-09 11:47:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-09 11:47:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-09 11:47:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-09 11:47:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-09 11:47:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-09 11:47:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-09 11:47:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-09 11:47:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:47:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:47:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:47:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-09 11:47:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 11:47:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-09 11:47:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-09 11:47:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:47:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:47:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-09 11:47:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-09 11:47:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:47:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-09 11:47:11] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 11:47:11] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 11:47:11] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 11:47:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 11:47:11] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#72bd06ca' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 11:47:11] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@5d58c727] 
main> [2018-01-09 11:47:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-09 11:47:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-09 11:47:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-09 11:47:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-09 11:47:11] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 11:47:11] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 11:47:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 11:47:11] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 11:47:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 11:47:11] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1844942991, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:47:11] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1844942991, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1844942991, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1844942991, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:47:11] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1844942991, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1844942991, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:47:11] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1295225869, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:47:11] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1295225869, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1295225869, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1295225869, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:47:11] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1295225869, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1295225869, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:47:11] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:47:11] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [754707140, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:47:11] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [754707140, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [754707140, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [754707140, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:47:11] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [754707140, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [754707140, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:47:11] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1717136008, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:47:11] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1717136008, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1717136008, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1717136008, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:47:11] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1717136008, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1717136008, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:47:11] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:47:11] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/writeone1],methods=[GET]}" onto public java.lang.String com.spring65.phone.controller.HomeController.writeone1(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-09 11:47:11] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-09 11:47:11] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5ad851c9: startup date [Tue Jan 09 11:47:10 KST 2018]; root of context hierarchy 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1163404461, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:47:11] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1163404461, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1163404461, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1163404461, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:47:11] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1163404461, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1163404461, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:47:11] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:47:11] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@5ad851c9: startup date [Tue Jan 09 11:47:10 KST 2018]; root of context hierarchy 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1966114624, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:47:11] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1966114624, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1966114624, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1966114624, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:47:11] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1966114624, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1966114624, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:47:11] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [373342545, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:47:11] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [373342545, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [373342545, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [373342545, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:47:11] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [373342545, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [373342545, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:47:11] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [447486093, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:47:11] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [447486093, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [447486093, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [447486093, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:47:11] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [447486093, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [447486093, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:47:11] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:47:11] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-01-09 11:47:11] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-01-09 11:47:11] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-01-09 11:47:11] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-01-09 11:47:11] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-01-09 11:47:11] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 11:47:11] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 11:47:11] [ResolverUtil] [94] [DEBUG] Reader entry: ModelPhone.class 
main> [2018-01-09 11:47:11] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-09 11:47:11] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 11:47:11] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Lecture/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-09 11:47:11] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 L  #com/spring65/phone/model/ModelPhone  java/lang/Object logger Lorg/slf4j/Logger; name Ljava/lang/String; manufacturer price Ljava/lang/Integer; getName ()Ljava/lang/String; Code	     LineNumberTable LocalVariableTable this %Lcom/spring65/phone/model/ModelPhone; setName (Ljava/lang/String;)V getManufacturer	   	  setManufacturer getPrice ()Ljava/lang/Integer;	    
main> [2018-01-09 11:47:11] [ResolverUtil] [250] [DEBUG] Checking to see if class com.spring65.phone.model.ModelPhone matches criteria [is assignable to Object] 
main> [2018-01-09 11:47:11] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2018-01-09 11:47:11] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1730465260, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:47:11] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1730465260, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1730465260, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1730465260, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:47:11] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1730465260, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1730465260, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:47:11] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:47:11] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicephone' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-09 11:47:11] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.spring65.phone.svr.ServicePhone@30364216] 
main> [2018-01-09 11:47:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public com.spring65.phone.model.ModelPhone com.spring65.phone.svr.ServicePhone.getPhoneOne(java.lang.String) 
main> [2018-01-09 11:47:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List com.spring65.phone.svr.ServicePhone.getPhoneList() 
main> [2018-01-09 11:47:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.svr.ServicePhone.insertPhone(com.spring65.phone.model.ModelPhone) 
main> [2018-01-09 11:47:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.svr.ServicePhone.insertPhoneList(java.util.List) 
main> [2018-01-09 11:47:11] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-09 11:47:11] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-09 11:47:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-09 11:47:11] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-09 11:47:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-09 11:47:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1351247295, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:47:11] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1351247295, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1351247295, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1351247295, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:47:11] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1351247295, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1351247295, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:47:11] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1626800713, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:47:11] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1626800713, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1626800713, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1626800713, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:47:11] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1626800713, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1626800713, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:47:11] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [com.spring65.phone.svr.ServicePhone.insertPhone]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [650410100, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [650410100, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:47:11] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2018-01-09 11:47:11] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6dfa915a] 
main> [2018-01-09 11:47:11] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [650410100, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2018-01-09 11:47:11] [insertPhone] [139] [DEBUG] ==>  Preparing: INSERT INTO TB_PHONE (name, manufacturer, price) VALUES (?, ?, ?)  
main> [2018-01-09 11:47:11] [insertPhone] [139] [DEBUG] ==> Parameters: T-1000(String), Terminater(String), 1000(Integer) 
main> [2018-01-09 11:47:11] [insertPhone] [139] [DEBUG] <==    Updates: 1 
main> [2018-01-09 11:47:11] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6dfa915a] 
main> [2018-01-09 11:47:11] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6dfa915a] 
main> [2018-01-09 11:47:11] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6dfa915a] 
main> [2018-01-09 11:47:11] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6dfa915a] 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [650410100, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [650410100, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:47:11] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [com.spring65.phone.svr.ServicePhone.getPhoneList]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [118492650, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:47:11] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [118492650, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [118492650, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:47:11] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2018-01-09 11:47:11] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@151bf776] 
main> [2018-01-09 11:47:11] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [118492650, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2018-01-09 11:47:11] [selectPhoneList] [139] [DEBUG] ==>  Preparing: SELECT * FROM TB_Phone  
main> [2018-01-09 11:47:11] [selectPhoneList] [139] [DEBUG] ==> Parameters:  
main> [2018-01-09 11:47:11] [selectPhoneList] [139] [DEBUG] <==      Total: 2 
main> [2018-01-09 11:47:11] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@151bf776] 
main> [2018-01-09 11:47:11] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@151bf776] 
main> [2018-01-09 11:47:11] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@151bf776] 
main> [2018-01-09 11:47:11] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@151bf776] 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [118492650, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:47:11] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [118492650, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [118492650, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:47:11] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [com.spring65.phone.svr.ServicePhone.getPhoneOne]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1119371910, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:47:11] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1119371910, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1119371910, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:47:11] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2018-01-09 11:47:11] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f6917fb] 
main> [2018-01-09 11:47:11] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1119371910, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2018-01-09 11:47:11] [selectPhoneOne] [139] [DEBUG] ==>  Preparing: SELECT * FROM TB_Phone WHERE name = ?  
main> [2018-01-09 11:47:11] [selectPhoneOne] [139] [DEBUG] ==> Parameters: sdf(String) 
main> [2018-01-09 11:47:11] [selectPhoneOne] [139] [DEBUG] <==      Total: 0 
main> [2018-01-09 11:47:11] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f6917fb] 
main> [2018-01-09 11:47:11] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f6917fb] 
main> [2018-01-09 11:47:11] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f6917fb] 
main> [2018-01-09 11:47:11] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f6917fb] 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1119371910, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:47:11] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1119371910, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1119371910, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:47:11] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [com.spring65.phone.svr.ServicePhone.insertPhoneList]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [131353113, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-09 11:47:11] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [131353113, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-09 11:47:11] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2018-01-09 11:47:11] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@181b8c4b] 
main> [2018-01-09 11:47:12] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [131353113, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2018-01-09 11:47:12] [insertPhoneList] [139] [DEBUG] ==>  Preparing: INSERT INTO TB_PHONE( name , manufacturer , price ) VALUES ( ? , ? , ? ),( ? , ? , ? ),( ? , ? , ? )  
main> [2018-01-09 11:47:12] [insertPhoneList] [139] [DEBUG] ==> Parameters: name0(String), manu0(String), 3000(Integer), name1(String), manu1(String), 3001(Integer), name2(String), manu2(String), 3002(Integer) 
main> [2018-01-09 11:47:12] [insertPhoneList] [139] [DEBUG] <==    Updates: 3 
main> [2018-01-09 11:47:12] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@181b8c4b] 
main> [2018-01-09 11:47:12] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@181b8c4b] 
main> [2018-01-09 11:47:12] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@181b8c4b] 
main> [2018-01-09 11:47:12] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@181b8c4b] 
main> [2018-01-09 11:47:12] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-09 11:47:12] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [131353113, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2018-01-09 11:47:12] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [131353113, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2018-01-09 11:47:12] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
